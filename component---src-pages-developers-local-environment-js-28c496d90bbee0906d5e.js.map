{"version":3,"file":"component---src-pages-developers-local-environment-js-28c496d90bbee0906d5e.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/GitStars.js","webpack://ethereum-org-website/./src/components/ProductCard.js","webpack://ethereum-org-website/./src/pages/developers/local-environment.js","webpack://ethereum-org-website/./node_modules/lodash/_baseRandom.js","webpack://ethereum-org-website/./node_modules/lodash/_shuffleSelf.js","webpack://ethereum-org-website/./node_modules/lodash/shuffle.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Emoji from \"./Emoji\"\nimport Icon from \"./Icon\"\nimport Link from \"./Link\"\n\nconst Container = styled(Link)`\n  float: right;\n  display: flex;\n  text-decoration: none;\n  border-radius: 4px;\n  border: 1px solid ${(props) => props.theme.colors.lightBorder};\n  color: ${(props) => props.theme.colors.text};\n  &:hover {\n    box-shadow: 0 0 1px ${(props) => props.theme.colors.primary};\n  }\n  &:hover path {\n    fill: ${(props) => props.theme.colors.primary};\n  }\n  background: ${(props) => props.theme.colors.lightBorder};\n`\n\nconst Pill = styled.div`\n  text-align: center;\n`\n\nconst StyledIcon = styled(Icon)`\n  margin: 0.25rem;\n`\n\nconst GlyphPill = styled(Pill)`\n  display: flex;\n  align-items: center;\n  width: 36px;\n  justify-content: space-between;\n  margin: 0 0.325rem;\n  path {\n    fill: ${(props) => props.theme.colors.text};\n  }\n  float: left;\n  font-size: ${(props) => props.theme.fontSizes.s};\n`\n\nconst Text = styled.div`\n  padding: 0 0.325rem;\n  font-size: 13px;\n  background: ${(props) => props.theme.colors.searchBackgroundEmpty};\n`\n\nconst GitStars = ({ gitHubRepo, className, hideStars }) => {\n  // Stringify with commas\n  let starsString = gitHubRepo.stargazerCount.toString()\n  const rgx = /(\\d+)(\\d{3})/\n  while (rgx.test(starsString)) {\n    starsString = starsString.replace(rgx, \"$1,$2\")\n  }\n  if (hideStars) {\n    return (\n      <Container className={className} to={gitHubRepo.url} hideArrow={true}>\n        <StyledIcon name=\"github\" size=\"16px\" />\n      </Container>\n    )\n  }\n  return (\n    <Container className={className} to={gitHubRepo.url} hideArrow={true}>\n      <GlyphPill>\n        <Icon name=\"github\" size=\"16px\" />\n        <Emoji text=\":star:\" size={1} />\n      </GlyphPill>\n      <Text>{starsString}</Text>\n    </Container>\n  )\n}\n\nexport default GitStars\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { useQuery, gql } from \"@apollo/client\"\n\nimport GitStars from \"./GitStars\"\nimport ButtonLink from \"./ButtonLink\"\n\nconst ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background: ${(props) => props.background};\n  box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.1);\n  min-height: 200px;\n`\n\nconst Image = styled(GatsbyImage)`\n  width: 100%;\n  align-self: center;\n  max-width: 372px;\n  max-height: 257px;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    max-width: 311px;\n  }\n`\n\nconst Card = styled.div`\n  color: ${(props) => props.theme.colors.text};\n  box-shadow: 0px 14px 66px rgba(0, 0, 0, 0.07);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background: ${(props) => props.theme.colors.searchBackground};\n  border-radius: 4px;\n  border: 1px solid ${(props) => props.theme.colors.lightBorder};\n  text-decoration: none;\n  &:hover {\n    transition: transform 0.1s;\n    transform: scale(1.02);\n  }\n`\n\nconst Content = styled.div`\n  padding: 1.5rem;\n  text-align: left;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.h3`\n  margin-top: ${(props) => (props.gitHidden ? \"2rem\" : \"3rem\")};\n  margin-bottom: 0.75rem;\n`\n\nconst Description = styled.p`\n  opacity: 0.8;\n  font-size: ${(props) => props.theme.fontSizes.s};\n  margin-bottom: 0.5rem;\n  line-height: 140%;\n`\n\nconst SubjectContainer = styled.div`\n  margin-top: 1.25rem;\n  padding: 0 1.5rem;\n`\n\nconst SubjectPill = styled.div`\n  text-align: center;\n  padding: 0 0.5rem;\n  margin: 0 0.75rem 0.5rem 0;\n  color: ${(props) => props.theme.colors.black300};\n  float: left;\n  background: ${({ theme, subject }) => {\n    switch (subject) {\n      case \"Solidity\":\n        return theme.colors.tagYellow\n      case \"Vyper\":\n        return theme.colors.tagBlue\n      case \"web3\":\n        return theme.colors.tagTurqouise\n      case \"JavaScript\":\n        return theme.colors.tagRed\n      case \"TypeScript\":\n        return theme.colors.tagBlue\n      case \"Go\":\n        return theme.colors.tagTurqouise\n      case \"Python\":\n        return theme.colors.tagMint\n      case \"Rust\":\n        return theme.colors.tagOrange\n      case \"C#\":\n        return theme.colors.tagBlue\n      case \"Java\":\n        return theme.colors.tagPink\n      default:\n        return theme.colors.tagGray\n    }\n  }};\n  font-size: ${(props) => props.theme.fontSizes.xs};\n  border: 1px solid ${(props) => props.theme.colors.lightBorder};\n  border-radius: 4px;\n`\n\nconst StyledButtonLink = styled(ButtonLink)`\n  margin: 1rem;\n`\n\nconst Children = styled.div`\n  margin-top: 1rem;\n`\n\nconst REPO_DATA = gql`\n  query RepoData(\n    $repoOwner: String!\n    $repoName: String!\n    $repoLangCount: Int!\n  ) {\n    repository(owner: $repoOwner, name: $repoName) {\n      stargazerCount\n      languages(\n        orderBy: { field: SIZE, direction: DESC }\n        first: $repoLangCount\n      ) {\n        nodes {\n          name\n        }\n      }\n      url\n    }\n  }\n`\n\nconst ProductCard = ({\n  url,\n  background,\n  image,\n  name,\n  description,\n  alt = \"\",\n  children,\n  githubUrl = \"\",\n  repoLangCount = 1,\n  subjects,\n  hideStars = false,\n}) => {\n  const split = githubUrl.split(\"/\")\n  const repoOwner = split[split.length - 2]\n  const repoName = split[split.length - 1]\n\n  // TODO add loading state\n  const { error, data } = useQuery(REPO_DATA, {\n    variables: {\n      repoOwner,\n      repoName,\n      repoLangCount,\n    },\n    skip: !githubUrl,\n  })\n\n  const hasRepoData = data && data.repository && !error\n\n  // Check if image is an svg as gatsby-plugin-image doesn't support svg\n  let isSvg = false\n  if (typeof image === \"string\") {\n    if (image.includes(\"svg\")) {\n      isSvg = true\n    }\n  }\n\n  return (\n    <Card>\n      <ImageWrapper background={background}>\n        {isSvg ? (\n          <img src={image} alt={alt} />\n        ) : (\n          <Image image={image} alt={alt} />\n        )}\n      </ImageWrapper>\n      <Content className=\"hover\">\n        <div>\n          {hasRepoData && (\n            <GitStars gitHubRepo={data.repository} hideStars={hideStars} />\n          )}\n          <Title gitHidden={!hasRepoData}>{name}</Title>\n          <Description>{description}</Description>\n        </div>\n        {children && <Children>{children}</Children>}\n      </Content>\n      <SubjectContainer>\n        {subjects &&\n          subjects.map((subject, idx) => (\n            <SubjectPill key={idx} subject={subject}>\n              {subject}\n            </SubjectPill>\n          ))}\n        {hasRepoData &&\n          data.repository.languages.nodes.map(({ name }, idx) => (\n            <SubjectPill key={idx} subject={name}>\n              {name.toUpperCase()}\n            </SubjectPill>\n          ))}\n      </SubjectContainer>\n      <StyledButtonLink to={url} hideArrow={true}>\n        Open {name}\n      </StyledButtonLink>\n    </Card>\n  )\n}\n\nexport default ProductCard\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { graphql } from \"gatsby\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { shuffle } from \"lodash\"\n\n// import ActionCard from \"../../components/ActionCard\"\n// import Callout from \"../../components/Callout\"\n// import Card from \"../../components/Card\"\n// import Link from \"../../components/Link\"\n// import ButtonLink from \"../../components/ButtonLink\"\nimport Translation from \"../../components/Translation\"\nimport { translateMessageId } from \"../../utils/translations\"\nimport PageMetadata from \"../../components/PageMetadata\"\nimport ProductCard from \"../../components/ProductCard\"\nimport {\n  Content,\n  CardGrid,\n  // Divider,\n  // Intro,\n  Page,\n  // InfoBanner,\n} from \"../../components/SharedStyledComponents\"\n\nconst StyledPage = styled(Page)`\n  margin-top: 4rem;\n`\n\nconst HeroContent = styled(Content)`\n  margin-bottom: 2rem;\n  justify-content: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.xl}) {\n    padding: 0 2rem 2rem;\n  }\n`\n\nconst Slogan = styled.h1`\n  font-style: normal;\n  font-weight: normal;\n  font-family: ${(props) => props.theme.fonts.monospace};\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 140%;\n  text-align: center;\n  margin: 0 0 1.625rem;\n`\n\n// const Subtitle = styled.div`\n//   font-size: 20px;\n//   line-height: 140%;\n//   color: ${(props) => props.theme.colors.text200};\n//   margin-bottom: 0.5rem;\n// `\n\nconst SubSlogan = styled.p`\n  font-size: 20px;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n  margin-bottom: 0.5rem;\n  text-align: center;\n`\n\n// const HeroContainer = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n//     flex-direction: column-reverse;\n//   }\n// `\nconst TwoColumnContent = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: space-between;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    align-items: flex-start;\n  }\n`\n\nconst Column = styled.div`\n  flex: 1 0 33%;\n  justify-content: flex-end;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    max-width: 100%;\n  }\n  margin-bottom: 1.5rem;\n  margin-right: 2rem;\n  width: 100%;\n`\n\nconst Hero = styled(GatsbyImage)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  background-size: cover;\n  background-repeat: no-repeat;\n`\n\nconst H2 = styled.h2`\n  margin: 0 0 1.625rem;\n`\n\n// const Header = styled.header`\n//   margin-top: 3rem;\n//   @media (max-width: 1280px) {\n//     margin-top: 8rem;\n//   }\n//   @media (max-width: 1160px) {\n//     margin-top: 7rem;\n//   }\n//   @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n//     margin-top: 4rem;\n//   }\n//   @media (max-width: 920px) {\n//     margin-top: 2rem;\n//   }\n//   @media (max-width: 870px) {\n//     margin-top: 1rem;\n//   }\n//   @media (max-width: 840px) {\n//     margin-top: 0;\n//   }\n// `\n\n// const StyledCard = styled(Card)`\n//   flex: 1 1 30%;\n//   min-width: 240px;\n//   box-shadow: ${(props) => props.theme.colors.tableBoxShadow};\n//   margin: 1rem;\n//   padding: 1.5rem;\n//   @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n//     flex: 1 1 30%;\n//   }\n\n//   &:hover {\n//     border-radius: 4px;\n//     box-shadow: 0px 8px 17px rgba(0, 0, 0, 0.15);\n//     background: ${(props) => props.theme.colors.tableBackgroundHover};\n//     transition: transform 0.1s;\n//     transform: scale(1.02);\n//   }\n// `\n\n// const StackContainer = styled(Content)`\n//   border: 1px solid ${(props) => props.theme.colors.border};\n//   border-radius: 4px;\n//   padding: 3rem 2rem;\n//   margin: 2rem;\n//   width: 96%;\n//   background: ${(props) => props.theme.colors.ednBackground};\n//   @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n//     width: 100%;\n//     margin-left: 0rem;\n//     margin-right: 0rem;\n//     border-radius: 0px;\n//   }\n// `\n\n// TODO add remaining stack categories\n// const localblockchains = [\n//     {\n//       id: \"ganache\",\n//       url: \"https://www.trufflesuite.com/ganache\",\n//       background: \"#31272A\",\n//       name: \"Ganache\",\n//       description:\n//         \"A personal blockchain for Ethereum development you can use to deploy contracts, develop your applications, and run tests. It is available as both a desktop application as well as a command-line tool . Ganache is available for Windows, Mac, and Linux.\",\n//     },\n//     {\n//       id: \"ethnode\",\n//       url: \"https://github.com/vrde/ethnode\",\n//       background: \"#fff\",\n//       name: \"ethnode\",\n//       description:\n//         \"ethnode is a zero configuration tool to run a local Ethereum node. It supports both Openethereum and Geth clients.\",\n//     },\n//     {\n//       id: \"buidler\",\n//       url: \"https://buidler.dev/buidler-evm/\",\n//       background: \"#2A2C32\",\n//       name: \"Buidler EVM\",\n//       description:\n//         \"A local Ethereum network designed for development. It allows you to deploy your contracts, run your tests and debug your code.\",\n//     },\n//   ]\n\n//   const contractLanguages = [\n//     {\n//       id: \"solidity\",\n//       url: \"https://solidity.readthedocs.io/\",\n//       background: \"#fff\",\n//       name: \"Solidity\",\n//       description:\n//         \"Solidity, the Contract-Oriented Programming Language. Inspired by C++ and Javascript.\",\n//     },\n//     {\n//       id: \"vyper\",\n//       url: \"https://vyper.readthedocs.io/en/stable/\",\n//       background: \"#fff\",\n//       name: \"Vyper\",\n//       description: \"Pythonic Smart Contract Language for the EVM\",\n//     },\n//   ]\n\n//   const ides = [\n//     {\n//       url:\n//       id: \"vscode\",\n//         \"https://marketplace.visualstudio.com/items?itemName=AzBlockchain.azure-blockchain\",\n//       background: \"#56338C\",\n//       name: \"VSCode Development Kit for Ethereum\",\n//       description:\n//         \"The extension simplifies how you create, build and deploy smart contracts on Ethereum ledgers.\",\n//     },\n//     {\n//       url:\n//       id: \"workbench\",\n//         \"https://azuremarketplace.microsoft.com/en-us/marketplace/apps/microsoft-azure-blockchain.azure-blockchain-workbench?tab=Overview\",\n//       background: \"#3079D0\",\n//       name: \"Azure Blockchain Workbench\",\n//       description:\n//         \"The Azure Blockchain Workbench is the fastest way to get started with blockchain on Azure.\",\n//     },\n//     {\n//       id: \"atom\",\n//       url: \"https://atom.io/packages/language-solidity\",\n//       background: \"#37373B\",\n//       name: \"Atom language-solidity plugin\",\n//       description: \"Adds syntax highlighting for Solidty in Atom.\",\n//     },\n//   ]\n\n//   const testinglibraries = [\n//     {\n//       id: \"waffle\",\n//       url: \"https://getwaffle.io/\",\n//       background: \"#fff\",\n//       name: \"Waffle\",\n//       description:\n//         \"Few dependencies, easy to extend syntax, and fast test execution. Used by over 500 projects.\",\n//     },\n//     {\n//       id: \"truffle\",\n//       url: \"https://trufflesuite.com\",\n//       background: \"#31272A\",\n//       name: \"Truffle\",\n//       description:\n//         \"Testing is included in the Truffle framework out-of-the-box.\",\n//     },\n//   ]\n\n//   const jslibraries = [\n//     {\n//       id: \"web3js\",\n//       url: \"http://web3js.readthedocs.io/\",\n//       background: \"#fff\",\n//       name: \"web3.js\",\n//       description:\n//         \"The Ethereum JavaScript API which connects to the Generic JSON-RPC spec.\",\n//     },\n//     {\n//       id: \"ethers\",\n//       url: \"https://docs.ethers.io/\",\n//       background: \"#26389A\",\n//       name: \"Ethers.js\",\n//       description:\n//         \"Complete Ethereum library and wallet implementation in JavaScript – supports Typescript\",\n//     },\n//   ]\n\nconst frameworksList = [\n  {\n    id: \"dapptools\",\n    url: \"https://dapp.tools/\",\n    githubUrl: \"https://github.com/dapphub/dapptools\",\n    background: \"#fff\",\n    name: \"Dapptools\",\n    description: \"page-local-environment-dapptools-desc\",\n    alt: \"page-local-environment-dapptools-logo-alt\",\n  },\n  {\n    id: \"waffle\",\n    url: \"https://getwaffle.io/\",\n    githubUrl: \"https://github.com/EthWorks/waffle\",\n    background: \"#fff\",\n    name: \"Waffle\",\n    description: \"page-local-environment-waffle-desc\",\n    alt: \"page-local-environment-waffle-logo-alt\",\n  },\n  {\n    id: \"hardhat\",\n    url: \"https://hardhat.org/\",\n    githubUrl: \"https://github.com/nomiclabs/hardhat\",\n    background: \"#faf8fb\",\n    name: \"Hardhat\",\n    image: \"https://hardhat.org/assets/img/Hardhat-logo.652a7049.svg\",\n    description: \"page-local-environment-hardhat-desc\",\n    alt: \"page-local-environment-hardhat-logo-alt\",\n  },\n  {\n    id: \"truffle\",\n    url: \"https://www.trufflesuite.com/\",\n    githubUrl: \"https://github.com/trufflesuite/truffle\",\n    background: \"#31272A\",\n    name: \"Truffle\",\n    description: \"page-local-environment-truffle-desc\",\n    alt: \"page-local-environment-truffle-logo-alt\",\n  },\n  {\n    id: \"embark\",\n    url: \"https://framework.embarklabs.io/\",\n    githubUrl: \"https://github.com/embarklabs/embark\",\n    background: \"#1B3E5F\",\n    name: \"Embark\",\n    description: \"page-local-environment-embark-desc\",\n    alt: \"page-local-environment-embark-logo-alt\",\n  },\n  {\n    id: \"brownie\",\n    url: \"https://github.com/eth-brownie/brownie\",\n    githubUrl: \"https://github.com/eth-brownie/brownie\",\n    background: \"#fff\",\n    name: \"Brownie\",\n    description: \"page-local-environment-brownie-desc\",\n    alt: \"page-local-environment-brownie-logo-alt\",\n  },\n  {\n    id: \"epirus\",\n    url: \"https://www.web3labs.com/epirus\",\n    githubUrl: \"https://github.com/web3labs/epirus-free\",\n    background: \"#fff\",\n    name: \"Epirus\",\n    description: \"page-local-environment-epirus-desc\",\n    alt: \"page-local-environment-epirus-logo-alt\",\n  },\n  {\n    id: \"createethapp\",\n    url: \"https://github.com/PaulRBerg/create-eth-app\",\n    githubUrl: \"https://github.com/PaulRBerg/create-eth-app\",\n    background: \"#fff\",\n    name: \"Create Eth App\",\n    description: \"page-local-environment-eth-app-desc\",\n    alt: \"page-local-environment-eth-app-logo-alt\",\n  },\n  {\n    id: \"scaffoldeth\",\n    url: \"https://github.com/austintgriffith/scaffold-eth\",\n    githubUrl: \"https://github.com/austintgriffith/scaffold-eth\",\n    background: \"#fff\",\n    name: \"scaffold-eth\",\n    description: \"page-local-environment-scaffold-eth-desc\",\n    alt: \"page-local-environment-scaffold-eth-logo-alt\",\n  },\n  {\n    id: \"soliditytemplate\",\n    url: \"https://github.com/paulrberg/solidity-template\",\n    githubUrl: \"https://github.com/paulrberg/solidity-template\",\n    background: \"#fff\",\n    name: \"Solidity template\",\n    description: \"page-local-environment-solidity-template-desc\",\n    alt: \"page-local-environment-solidity-template-logo-alt\",\n  },\n]\n\nconst ChooseStackPage = ({ data }) => {\n  const intl = useIntl()\n  const [frameworks, setFrameworks] = useState([])\n\n  useEffect(() => {\n    const list = shuffle(\n      frameworksList.map((item) => {\n        if (item.image) return item\n        item.image = getImage(data[item.id])\n        return item\n      })\n    )\n    setFrameworks(list)\n  }, [data])\n\n  return (\n    <StyledPage>\n      <PageMetadata\n        title={translateMessageId(\n          \"page-local-environment-setup-meta-title\",\n          intl\n        )}\n        description={translateMessageId(\n          \"page-local-environment-setup-meta-desc\",\n          intl\n        )}\n      />\n      <HeroContent>\n        <Slogan>\n          <Translation id=\"page-local-environment-setup-title\" />\n        </Slogan>\n        <SubSlogan>\n          <Translation id=\"page-local-environment-setup-subtitle\" />\n          <br />\n          <Translation id=\"page-local-environment-setup-subtitle-2\" />\n        </SubSlogan>\n      </HeroContent>\n      <Content>\n        <TwoColumnContent>\n          <Column>\n            <H2>\n              <Translation id=\"page-local-environment-frameworks-title\" />\n            </H2>\n            <p>\n              <Translation id=\"page-local-environment-frameworks-desc\" />\n            </p>\n            <p>\n              <Translation id=\"page-local-environment-framework-features\" />\n            </p>\n            <ul>\n              <li>\n                <Translation id=\"page-local-environment-framework-feature-1\" />\n              </li>\n              <li>\n                <Translation id=\"page-local-environment-framework-feature-2\" />\n              </li>\n              <li>\n                <Translation id=\"page-local-environment-framework-feature-3\" />\n              </li>\n              <li>\n                <Translation id=\"page-local-environment-framework-feature-4\" />\n              </li>\n              <li>\n                <Translation id=\"page-local-environment-framework-feature-5\" />\n              </li>\n            </ul>\n          </Column>\n          <Column>\n            <Hero\n              image={getImage(data.hero)}\n              alt={translateMessageId(\"alt-eth-blocks\", intl)}\n              loading=\"eager\"\n            />\n          </Column>\n        </TwoColumnContent>\n        <CardGrid>\n          {frameworks.map((framework, idx) => (\n            <ProductCard\n              key={idx}\n              url={framework.url}\n              background={framework.background}\n              image={framework.image}\n              name={framework.name}\n              githubUrl={framework.githubUrl}\n              repoLangCount={2}\n              alt={translateMessageId(framework.alt, intl)}\n            >\n              <Translation id={framework.description} />\n            </ProductCard>\n          ))}\n        </CardGrid>\n      </Content>\n      {/* <Content>\n        <h2>Create your own stack</h2>\n        <p>\n          Want to roll your own stack? Or looking to compare projects to\n          integrate into a framework / looking for a specific use case /\n          solution to a piece of your ? These categories will help you give the\n          full picture of options available for different layers of the stack.\n        </p>\n      </Content>\n      <StackContainer>\n        <Subtitle>Local development blockchain</Subtitle>\n        <p>\n          When creating a new smart contract, you definitely don't want to\n          deploy it straight to to Ethereum's public Mainnet (it costs money).\n          First, we recommend setting up a personal blockchain for local\n          development, where you can run tests & kick the tires on your dapp.\n        </p>\n        <CardGrid>\n          {localblockchains.map((local, idx) => {\n            return (\n              <ProductCard\n                key={idx}\n                url={local.url}\n                background={local.background}\n                image={local.image}\n                name={local.name}\n                description={local.description}\n              />\n            )\n          })}\n        </CardGrid>\n      </StackContainer>\n      <StackContainer>\n        <Subtitle>Smart contract languages (Optional)</Subtitle>\n        <p>\n          In order to write Ethereum smart contracts, you'll need to use a\n          language specifically build for the EVM. You don’t have to write a\n          smart contract to build a dapp, but if you want to create new\n          functionality, you’ll need to write your own.\n        </p>\n        <Link to=\"/developers/docs/smart-contracts/languages/\">\n          More on smart contract languages\n        </Link>\n        <CardGrid>\n          {contractLanguages.map((language, idx) => {\n            return (\n              <ProductCard\n                key={idx}\n                url={language.url}\n                background={language.background}\n                image={language.image}\n                name={language.name}\n                description={language.description}\n              />\n            )\n          })}\n        </CardGrid>\n      </StackContainer>\n      <StackContainer>\n        <Subtitle>Integrated Development Environments (IDEs)</Subtitle>\n        <p>\n          You need to write your smart contracts and code somewhere. Most\n          established IDEs have plugins for Solidity / Vyper syntax support.{\" \"}\n        </p>\n        <Link to=\"/developers/docs/ides/\">More on IDEs</Link>\n        <CardGrid>\n          {ides.map((ide, idx) => {\n            return (\n              <ProductCard\n                key={idx}\n                url={ide.url}\n                background={ide.background}\n                image={ide.image}\n                name={ide.name}\n                description={ide.description}\n              />\n            )\n          })}\n        </CardGrid>\n      </StackContainer>\n      <StackContainer>\n        <Subtitle>Smart contract testing libraries </Subtitle>\n        <p>\n          Tools to help write unit and integration tests for your smart\n          contracts, typically by using JavaScript. Note: most (if not all)\n          Ethereum developer frameworks come with smart contract testing out of\n          the box\n        </p>\n        <Link to=\"/developers/docs/ides/\">More on IDEs</Link>\n        <CardGrid>\n          {testinglibraries.map((library, idx) => {\n            return (\n              <ProductCard\n                key={idx}\n                url={library.url}\n                background={library.background}\n                image={library.image}\n                name={library.name}\n                description={library.description}\n              />\n            )\n          })}\n        </CardGrid>\n      </StackContainer>\n      <StackContainer>\n        <Subtitle>Frontend JavaScript libraries</Subtitle>\n        <p>Description</p>\n        <Link to=\"/developers/docs/apis/javascript/\">\n          More on Javascript libraries\n        </Link>\n        <CardGrid>\n          {jslibraries.map((jslibrary, idx) => {\n            return (\n              <ProductCard\n                key={idx}\n                url={jslibrary.url}\n                background={jslibrary.background}\n                image={jslibrary.image}\n                name={jslibrary.name}\n                description={jslibrary.description}\n              />\n            )\n          })}\n        </CardGrid>\n        </StackContainer> */}\n    </StyledPage>\n  )\n}\nexport default ChooseStackPage\n\nexport const devtoolImage = graphql`\n  fragment devtoolImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        height: 100\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\n\nexport const query = graphql`\n  {\n    hero: file(relativePath: { eq: \"developers-eth-blocks.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 800\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    ogImage: file(relativePath: { eq: \"developers-eth-blocks.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 1200\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    dapptools: file(relativePath: { eq: \"dev-tools/dapptools.png\" }) {\n      ...devtoolImage\n    }\n    waffle: file(relativePath: { eq: \"dev-tools/waffle.png\" }) {\n      ...devtoolImage\n    }\n\n    truffle: file(relativePath: { eq: \"dev-tools/truffle.png\" }) {\n      ...devtoolImage\n    }\n    embark: file(relativePath: { eq: \"dev-tools/embark.png\" }) {\n      ...devtoolImage\n    }\n    brownie: file(relativePath: { eq: \"assets/eth-diamond-black.png\" }) {\n      ...devtoolImage\n    }\n    epirus: file(relativePath: { eq: \"dev-tools/epirus.png\" }) {\n      ...devtoolImage\n    }\n    createethapp: file(relativePath: { eq: \"assets/eth-diamond-black.png\" }) {\n      ...devtoolImage\n    }\n    scaffoldeth: file(relativePath: { eq: \"dev-tools/scaffoldeth.png\" }) {\n      ...devtoolImage\n    }\n    soliditytemplate: file(\n      relativePath: { eq: \"assets/eth-diamond-black.png\" }\n    ) {\n      ...devtoolImage\n    }\n    ganache: file(relativePath: { eq: \"dev-tools/ganache.png\" }) {\n      ...devtoolImage\n    }\n    ethnode: file(relativePath: { eq: \"assets/eth-diamond-black.png\" }) {\n      ...devtoolImage\n    }\n    solidity: file(relativePath: { eq: \"dev-tools/solidity.png\" }) {\n      ...devtoolImage\n    }\n    vyper: file(relativePath: { eq: \"dev-tools/vyper.png\" }) {\n      ...devtoolImage\n    }\n    vscode: file(relativePath: { eq: \"dev-tools/Vscode.png\" }) {\n      ...devtoolImage\n    }\n    workbench: file(relativePath: { eq: \"dev-tools/workbench.png\" }) {\n      ...devtoolImage\n    }\n    atom: file(relativePath: { eq: \"dev-tools/atom.png\" }) {\n      ...devtoolImage\n    }\n    web3js: file(relativePath: { eq: \"dev-tools/web3js.png\" }) {\n      ...devtoolImage\n    }\n    ethers: file(relativePath: { eq: \"dev-tools/ethers.png\" }) {\n      ...devtoolImage\n    }\n  }\n`\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n"],"names":["Container","styled","Link","props","theme","colors","lightBorder","text","primary","Pill","StyledIcon","Icon","GlyphPill","fontSizes","s","Text","searchBackgroundEmpty","gitHubRepo","className","hideStars","starsString","stargazerCount","toString","rgx","test","replace","to","url","hideArrow","name","size","Emoji","ImageWrapper","background","Image","GatsbyImage","breakpoints","Card","searchBackground","Content","Title","gitHidden","Description","SubjectContainer","SubjectPill","black300","subject","tagYellow","tagBlue","tagTurqouise","tagRed","tagMint","tagOrange","tagPink","tagGray","xs","StyledButtonLink","ButtonLink","Children","REPO_DATA","gql","image","description","alt","children","githubUrl","repoLangCount","subjects","split","repoOwner","length","repoName","useQuery","variables","skip","error","data","hasRepoData","repository","isSvg","includes","src","map","idx","key","languages","nodes","toUpperCase","StyledPage","Page","HeroContent","xl","Slogan","fonts","monospace","SubSlogan","text200","TwoColumnContent","l","Column","m","Hero","H2","frameworksList","id","intl","useIntl","useState","frameworks","setFrameworks","useEffect","list","item","getImage","title","translateMessageId","hero","loading","framework","nativeFloor","Math","floor","nativeRandom","random","module","exports","lower","upper","baseRandom","array","index","lastIndex","undefined","rand","value","copyArray","shuffleSelf"],"sourceRoot":""}