{"version":3,"file":"component---src-pages-developers-learning-tools-js-4ae1b05ab1597eae3e2b.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/CalloutBanner.js","webpack://ethereum-org-website/./src/components/InfoBanner.js","webpack://ethereum-org-website/./src/components/GitStars.js","webpack://ethereum-org-website/./src/components/ProductCard.js","webpack://ethereum-org-website/./src/pages/developers/learning-tools.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst StyledCard = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  background: linear-gradient(\n    49.21deg,\n    rgba(127, 127, 213, 0.2) 19.87%,\n    rgba(134, 168, 231, 0.2) 58.46%,\n    rgba(145, 234, 228, 0.2) 97.05%\n  );\n  padding: 3rem;\n  margin: 1rem;\n  margin-top: 6rem;\n  margin-bottom: 10rem;\n  border-radius: 4px;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n    margin-bottom: 1rem;\n    margin: 4rem 2rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    padding: 2rem;\n  }\n`\n\nconst Content = styled.div`\n  padding-left: 5rem;\n  flex: 1 0 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 2rem;\n    padding-left: 1rem;\n    flex-direction: column;\n    width: 100%;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    padding-left: 0;\n  }\n`\n\nconst Description = styled.p`\n  font-size: 20px;\n  width: 90%;\n  line-height: 140%;\n  margin-bottom: 2rem;\n  color: ${(props) => props.theme.colors.text200};\n`\n\nconst Image = styled(GatsbyImage)`\n  align-self: center; /* prevents crop */\n  width: 100%;\n  max-width: ${(props) => `${props.maxImageWidth}px`};\n  margin-top: -6rem;\n  margin-bottom: -6rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-bottom: 0rem;\n    margin-top: -6rem;\n  }\n`\n\nconst H2 = styled.h2`\n  margin-top: 0rem;\n`\n\nconst CalloutBanner = ({\n  image,\n  maxImageWidth,\n  title,\n  description,\n  alt,\n  children,\n  className,\n}) => (\n  <StyledCard className={className}>\n    <Image image={image} alt={alt} maxImageWidth={maxImageWidth} />\n    <Content>\n      <H2>{title}</H2>\n      <Description>{description}</Description>\n      {children}\n    </Content>\n  </StyledCard>\n)\n\nexport default CalloutBanner\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Emoji from \"./Emoji\"\nimport { margin } from \"styled-system\"\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Banner = styled.div`\n  position: relative;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  padding: 1.5rem;\n  border-radius: 2px;\n  max-width: ${(props) => (props.shouldCenter ? `55rem` : `100%`)};\n  color: ${(props) => props.theme.colors.black300};\n  background: ${(props) =>\n    props.isWarning\n      ? props.theme.colors.warning\n      : props.theme.colors.infoBanner};\n\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    flex-direction: column;\n  }\n\n  a {\n    color: ${(props) =>\n      props.isWarning\n        ? props.theme.colors.warningLink\n        : props.theme.colors.infoLink};\n    &:hover {\n      color: ${(props) =>\n        props.isWarning\n          ? props.theme.colors.warningLinkHover\n          : props.theme.colors.infoLinkHover};\n    }\n  }\n  ${margin}\n`\n\nconst StyledEmoji = styled(Emoji)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  margin-right: 1.5rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    align-self: flex-start;\n    margin-right: 0;\n    margin-bottom: 0.5rem;\n  }\n`\n\nconst Content = styled.div`\n  display: ${(props) => (props.shouldSpaceBetween ? `flex` : `block`)};\n  align-items: ${(props) => (props.shouldSpaceBetween ? `center` : `auto`)};\n  width: ${(props) => (props.shouldSpaceBetween ? `100%` : `auto`)};\n  justify-content: ${(props) =>\n    props.shouldSpaceBetween ? `space-between` : `auto`};\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    display: block;\n  }\n`\n\nconst InfoBanner = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Banner\n      className={className}\n      isWarning={isWarning}\n      shouldCenter={shouldCenter}\n      {...props}\n    >\n      {emoji && <StyledEmoji text={emoji} size={2} />}\n      <Content shouldSpaceBetween={shouldSpaceBetween}>{children}</Content>\n    </Banner>\n  )\n  return shouldCenter ? <Container>{banner}</Container> : banner\n}\n\nexport default InfoBanner\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Emoji from \"./Emoji\"\nimport Icon from \"./Icon\"\nimport Link from \"./Link\"\n\nconst Container = styled(Link)`\n  float: right;\n  display: flex;\n  text-decoration: none;\n  border-radius: 4px;\n  border: 1px solid ${(props) => props.theme.colors.lightBorder};\n  color: ${(props) => props.theme.colors.text};\n  &:hover {\n    box-shadow: 0 0 1px ${(props) => props.theme.colors.primary};\n  }\n  &:hover path {\n    fill: ${(props) => props.theme.colors.primary};\n  }\n  background: ${(props) => props.theme.colors.lightBorder};\n`\n\nconst Pill = styled.div`\n  text-align: center;\n`\n\nconst StyledIcon = styled(Icon)`\n  margin: 0.25rem;\n`\n\nconst GlyphPill = styled(Pill)`\n  display: flex;\n  align-items: center;\n  width: 36px;\n  justify-content: space-between;\n  margin: 0 0.325rem;\n  path {\n    fill: ${(props) => props.theme.colors.text};\n  }\n  float: left;\n  font-size: ${(props) => props.theme.fontSizes.s};\n`\n\nconst Text = styled.div`\n  padding: 0 0.325rem;\n  font-size: 13px;\n  background: ${(props) => props.theme.colors.searchBackgroundEmpty};\n`\n\nconst GitStars = ({ gitHubRepo, className, hideStars }) => {\n  // Stringify with commas\n  let starsString = gitHubRepo.stargazerCount.toString()\n  const rgx = /(\\d+)(\\d{3})/\n  while (rgx.test(starsString)) {\n    starsString = starsString.replace(rgx, \"$1,$2\")\n  }\n  if (hideStars) {\n    return (\n      <Container className={className} to={gitHubRepo.url} hideArrow={true}>\n        <StyledIcon name=\"github\" size=\"16px\" />\n      </Container>\n    )\n  }\n  return (\n    <Container className={className} to={gitHubRepo.url} hideArrow={true}>\n      <GlyphPill>\n        <Icon name=\"github\" size=\"16px\" />\n        <Emoji text=\":star:\" size={1} />\n      </GlyphPill>\n      <Text>{starsString}</Text>\n    </Container>\n  )\n}\n\nexport default GitStars\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { useQuery, gql } from \"@apollo/client\"\n\nimport GitStars from \"./GitStars\"\nimport ButtonLink from \"./ButtonLink\"\n\nconst ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background: ${(props) => props.background};\n  box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.1);\n  min-height: 200px;\n`\n\nconst Image = styled(GatsbyImage)`\n  width: 100%;\n  align-self: center;\n  max-width: 372px;\n  max-height: 257px;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    max-width: 311px;\n  }\n`\n\nconst Card = styled.div`\n  color: ${(props) => props.theme.colors.text};\n  box-shadow: 0px 14px 66px rgba(0, 0, 0, 0.07);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background: ${(props) => props.theme.colors.searchBackground};\n  border-radius: 4px;\n  border: 1px solid ${(props) => props.theme.colors.lightBorder};\n  text-decoration: none;\n  &:hover {\n    transition: transform 0.1s;\n    transform: scale(1.02);\n  }\n`\n\nconst Content = styled.div`\n  padding: 1.5rem;\n  text-align: left;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.h3`\n  margin-top: ${(props) => (props.gitHidden ? \"2rem\" : \"3rem\")};\n  margin-bottom: 0.75rem;\n`\n\nconst Description = styled.p`\n  opacity: 0.8;\n  font-size: ${(props) => props.theme.fontSizes.s};\n  margin-bottom: 0.5rem;\n  line-height: 140%;\n`\n\nconst SubjectContainer = styled.div`\n  margin-top: 1.25rem;\n  padding: 0 1.5rem;\n`\n\nconst SubjectPill = styled.div`\n  text-align: center;\n  padding: 0 0.5rem;\n  margin: 0 0.75rem 0.5rem 0;\n  color: ${(props) => props.theme.colors.black300};\n  float: left;\n  background: ${({ theme, subject }) => {\n    switch (subject) {\n      case \"Solidity\":\n        return theme.colors.tagYellow\n      case \"Vyper\":\n        return theme.colors.tagBlue\n      case \"web3\":\n        return theme.colors.tagTurqouise\n      case \"JavaScript\":\n        return theme.colors.tagRed\n      case \"TypeScript\":\n        return theme.colors.tagBlue\n      case \"Go\":\n        return theme.colors.tagTurqouise\n      case \"Python\":\n        return theme.colors.tagMint\n      case \"Rust\":\n        return theme.colors.tagOrange\n      case \"C#\":\n        return theme.colors.tagBlue\n      case \"Java\":\n        return theme.colors.tagPink\n      default:\n        return theme.colors.tagGray\n    }\n  }};\n  font-size: ${(props) => props.theme.fontSizes.xs};\n  border: 1px solid ${(props) => props.theme.colors.lightBorder};\n  border-radius: 4px;\n`\n\nconst StyledButtonLink = styled(ButtonLink)`\n  margin: 1rem;\n`\n\nconst Children = styled.div`\n  margin-top: 1rem;\n`\n\nconst REPO_DATA = gql`\n  query RepoData(\n    $repoOwner: String!\n    $repoName: String!\n    $repoLangCount: Int!\n  ) {\n    repository(owner: $repoOwner, name: $repoName) {\n      stargazerCount\n      languages(\n        orderBy: { field: SIZE, direction: DESC }\n        first: $repoLangCount\n      ) {\n        nodes {\n          name\n        }\n      }\n      url\n    }\n  }\n`\n\nconst ProductCard = ({\n  url,\n  background,\n  image,\n  name,\n  description,\n  alt = \"\",\n  children,\n  githubUrl = \"\",\n  repoLangCount = 1,\n  subjects,\n  hideStars = false,\n}) => {\n  const split = githubUrl.split(\"/\")\n  const repoOwner = split[split.length - 2]\n  const repoName = split[split.length - 1]\n\n  // TODO add loading state\n  const { error, data } = useQuery(REPO_DATA, {\n    variables: {\n      repoOwner,\n      repoName,\n      repoLangCount,\n    },\n    skip: !githubUrl,\n  })\n\n  const hasRepoData = data && data.repository && !error\n\n  // Check if image is an svg as gatsby-plugin-image doesn't support svg\n  let isSvg = false\n  if (typeof image === \"string\") {\n    if (image.includes(\"svg\")) {\n      isSvg = true\n    }\n  }\n\n  return (\n    <Card>\n      <ImageWrapper background={background}>\n        {isSvg ? (\n          <img src={image} alt={alt} />\n        ) : (\n          <Image image={image} alt={alt} />\n        )}\n      </ImageWrapper>\n      <Content className=\"hover\">\n        <div>\n          {hasRepoData && (\n            <GitStars gitHubRepo={data.repository} hideStars={hideStars} />\n          )}\n          <Title gitHidden={!hasRepoData}>{name}</Title>\n          <Description>{description}</Description>\n        </div>\n        {children && <Children>{children}</Children>}\n      </Content>\n      <SubjectContainer>\n        {subjects &&\n          subjects.map((subject, idx) => (\n            <SubjectPill key={idx} subject={subject}>\n              {subject}\n            </SubjectPill>\n          ))}\n        {hasRepoData &&\n          data.repository.languages.nodes.map(({ name }, idx) => (\n            <SubjectPill key={idx} subject={name}>\n              {name.toUpperCase()}\n            </SubjectPill>\n          ))}\n      </SubjectContainer>\n      <StyledButtonLink to={url} hideArrow={true}>\n        Open {name}\n      </StyledButtonLink>\n    </Card>\n  )\n}\n\nexport default ProductCard\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport { useIntl } from \"gatsby-plugin-intl\"\n\nimport { translateMessageId } from \"../../utils/translations\"\nimport PageMetadata from \"../../components/PageMetadata\"\nimport Translation from \"../../components/Translation\"\nimport ButtonLink from \"../../components/ButtonLink\"\nimport ProductCard from \"../../components/ProductCard\"\nimport InfoBanner from \"../../components/InfoBanner\"\nimport CalloutBanner from \"../../components/CalloutBanner\"\nimport {\n  Content,\n  CardGrid,\n  Page,\n} from \"../../components/SharedStyledComponents\"\n\nconst StyledPage = styled(Page)`\n  margin-top: 4rem;\n`\n\nconst Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  max-width: 896px;\n  padding: 0 2rem;\n`\nconst H1 = styled.h1`\n  margin: 2rem 0 0;\n  margin-top: 0;\n  color: ${(props) => props.theme.colors.text};\n  font-style: normal;\n  font-family: ${(props) => props.theme.fonts.monospace};\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 2rem;\n  line-height: 1.4;\n  text-align: center;\n`\n\nconst Subtitle = styled.h2`\n  font-size: 1.25rem;\n  line-height: 1.4;\n  font-weight: 400;\n  color: ${(props) => props.theme.colors.text300};\n  max-width: 55ch;\n  margin-bottom: 0.5rem;\n  margin-top: 1rem;\n`\n\nconst SubtitleTwo = styled(Subtitle)`\n  margin-top: 0rem;\n`\n\nconst StackContainer = styled(Content)`\n  border: 1px solid ${(props) => props.theme.colors.border};\n  justify-content: flex-start;\n  border-radius: 4px;\n  padding: 3rem 2rem;\n  margin: 2rem;\n  width: 96%;\n  background: ${(props) => props.theme.colors.ednBackground};\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    width: 100%;\n    margin-left: 0rem;\n    margin-right: 0rem;\n    border-radius: 0px;\n  }\n`\n\nconst StyledCardGrid = styled(CardGrid)`\n  margin-bottom: 2rem;\n`\n\nconst LearningToolsPage = ({ data }) => {\n  const intl = useIntl()\n\n  const sandboxes = [\n    {\n      name: \"Remix\",\n      description: \"page-learning-tools-remix-description\",\n      url: \"https://remix.ethereum.org\",\n      image: getImage(data.remix),\n      alt: \"page-learning-tools-remix-logo-alt\",\n      background: \"#5098D6\",\n      subjects: [\"Solidity\", \"Vyper\"],\n    },\n    {\n      name: \"Eth.build\",\n      description: \"page-learning-tools-eth-dot-build-description\",\n      url: \"https://eth.build/\",\n      image: getImage(data.ethdotbuild),\n      alt: \"page-learning-tools-eth-dot-build-logo-alt\",\n      background: \"#000000\",\n      subjects: [\"web3\"],\n    },\n  ]\n\n  const games = [\n    {\n      name: \"CryptoZombies\",\n      description: \"page-learning-tools-cryptozombies-description\",\n      url: \"https://cryptozombies.io/en/solidity\",\n      image: getImage(data.cryptoZombie),\n      alt: \"page-learning-tools-cryptozombies-logo-alt\",\n      background: \"#2B2F48\",\n      subjects: [\"Solidity\"],\n    },\n    {\n      name: \"Ethernauts\",\n      description: \"page-learning-tools-ethernauts-description\",\n      url: \"https://ethernaut.openzeppelin.com/\",\n      image: getImage(data.oz),\n      alt: \"page-learning-tools-ethernauts-logo-alt\",\n      background: \"#4F62DC\",\n      subjects: [\"Solidity\"],\n    },\n    {\n      name: \"Vyper.fun\",\n      description: \"page-learning-tools-vyperfun-description\",\n      url: \"https://vyper.fun\",\n      image: getImage(data.vyperfun),\n      alt: \"page-learning-tools-vyperfun-logo-alt\",\n      background: \"#ffffff\",\n      subjects: [\"Vyper\"],\n    },\n    {\n      name: \"Capture The Ether\",\n      description: \"page-learning-tools-capture-the-ether-description\",\n      url: \"https://capturetheether.com/\",\n      image: getImage(data.captureTheEther),\n      alt: \"page-learning-tools-capture-the-ether-logo-alt\",\n      background: \"#1B9AAA\",\n      subjects: [\"Solidity\"],\n    },\n  ]\n\n  const bootcamps = [\n    {\n      name: \"ChainShot\",\n      description: \"page-learning-tools-chainshot-description\",\n      url: \"https://www.chainshot.com\",\n      image: getImage(data.chainshot),\n      alt: \"page-learning-tools-chainshot-logo-alt\",\n      background: \"#111F29\",\n      subjects: [\"Solidity\", \"Vyper\", \"web3\"],\n    },\n    {\n      name: \"ConsenSys Academy\",\n      description: \"page-learning-tools-consensys-academy-description\",\n      url: \"https://consensys.net/academy/bootcamp/\",\n      image: getImage(data.consensys),\n      alt: \"page-learning-tools-consensys-academy-logo-alt\",\n      background: \"#F6F7F9\",\n      subjects: [\"Solidity\", \"web3\"],\n    },\n    {\n      name: \"BloomTech\",\n      description: \"page-learning-tools-bloomtech-description\",\n      url: \"https://www.bloomtech.com/courses/web3\",\n      image: getImage(data.bloomtech),\n      alt: \"page-learning-tools-bloomtech-logo-alt\",\n      background: \"#FFFFFF\",\n      subjects: [\"Solidity\", \"web3\"],\n    },\n    {\n      name: \"_buildspace\",\n      description: \"page-learning-tools-buildspace-description\",\n      url: \"https://buildspace.so\",\n      image: getImage(data.buildspace),\n      alt: \"page-learning-tools-buildspace-logo-alt\",\n      background: \"#F6F7F9\",\n      subjects: [\"Solidity\", \"web3\"],\n    },\n    {\n      name: \"Questbook\",\n      description: \"page-learning-tools-questbook-description\",\n      url: \"https://questbook.app/\",\n      image: getImage(data.questbook),\n      alt: \"page-learning-tools-questbook-logo-alt\",\n      background: \"#141236\",\n      subjects: [\"Solidity\", \"web3\"],\n    },\n    {\n      name: \"NFT School\",\n      description: \"page-learning-tools-nftschool-description\",\n      url: \"https://nftschool.dev/\",\n      image: getImage(data.nftschool),\n      alt: \"page-learning-tools-nftschool-logo-alt\",\n      background: \"#111F29\",\n      subjects: [\"Solidity\", \"web3\"],\n    },\n  ]\n\n  return (\n    <StyledPage>\n      <PageMetadata\n        title={translateMessageId(\"page-learning-tools-meta-title\", intl)}\n        description={translateMessageId(\"page-learning-tools-meta-desc\", intl)}\n      />\n      <Header>\n        <H1>\n          <Translation id=\"page-learning-tools-coding\" />\n        </H1>\n        <Subtitle>\n          <Translation id=\"page-learning-tools-coding-subtitle\" />\n        </Subtitle>\n      </Header>\n      <StackContainer>\n        <SubtitleTwo>\n          <Translation id=\"page-learning-tools-sandbox\" />\n        </SubtitleTwo>\n        <p>\n          <Translation id=\"page-learning-tools-sandbox-desc\" />\n        </p>\n        <StyledCardGrid>\n          {sandboxes.map((sandbox, idx) => (\n            <ProductCard\n              key={idx}\n              background={sandbox.background}\n              url={sandbox.url}\n              alt={translateMessageId(sandbox.alt, intl)}\n              image={sandbox.image}\n              name={sandbox.name}\n              subjects={sandbox.subjects}\n            >\n              <Translation id={sandbox.description} />\n            </ProductCard>\n          ))}\n        </StyledCardGrid>\n        <InfoBanner emoji=\":point_up:\" shouldCenter={true}>\n          <Translation id=\"page-learning-tools-remix-description-2\" />\n        </InfoBanner>\n      </StackContainer>\n      <StackContainer>\n        <SubtitleTwo>\n          <Translation id=\"page-learning-tools-game-tutorials\" />\n        </SubtitleTwo>\n        <p>\n          <Translation id=\"page-learning-tools-game-tutorials-desc\" />\n        </p>\n        <StyledCardGrid>\n          {games.map((game, idx) => (\n            <ProductCard\n              key={idx}\n              background={game.background}\n              url={game.url}\n              alt={translateMessageId(game.alt, intl)}\n              image={game.image}\n              name={game.name}\n              subjects={game.subjects}\n            >\n              <Translation id={game.description} />\n            </ProductCard>\n          ))}\n        </StyledCardGrid>\n      </StackContainer>\n      <StackContainer>\n        <SubtitleTwo>\n          <Translation id=\"page-learning-tools-bootcamps\" />\n        </SubtitleTwo>\n        <p>\n          <Translation id=\"page-learning-tools-bootcamps-desc\" />\n        </p>\n        <StyledCardGrid>\n          {bootcamps.map((bootcamp, idx) => (\n            <ProductCard\n              key={idx}\n              url={bootcamp.url}\n              background={bootcamp.background}\n              alt={translateMessageId(bootcamp.alt, intl)}\n              image={bootcamp.image}\n              name={bootcamp.name}\n              subjects={bootcamp.subjects}\n            >\n              <Translation id={bootcamp.description} />\n            </ProductCard>\n          ))}\n        </StyledCardGrid>\n      </StackContainer>\n      <Content>\n        <CalloutBanner\n          image={getImage(data.learn)}\n          alt={translateMessageId(\n            \"page-index-sections-enterprise-image-alt\",\n            intl\n          )}\n          title={translateMessageId(\"page-learning-tools-documentation\", intl)}\n          description={translateMessageId(\n            \"page-learning-tools-documentation-desc\",\n            intl\n          )}\n        >\n          <div>\n            <ButtonLink to=\"/developers/docs/\">\n              <Translation id=\"page-learning-tools-browse-docs\" />\n            </ButtonLink>\n          </div>\n        </CalloutBanner>\n      </Content>\n    </StyledPage>\n  )\n}\n\nexport default LearningToolsPage\n\nexport const learningToolImage = graphql`\n  fragment learningToolImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        height: 100\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\n\nexport const query = graphql`\n  {\n    captureTheEther: file(\n      relativePath: { eq: \"dev-tools/capturetheether.png\" }\n    ) {\n      ...learningToolImage\n    }\n    chainshot: file(relativePath: { eq: \"dev-tools/chainshot.png\" }) {\n      ...learningToolImage\n    }\n    consensys: file(relativePath: { eq: \"dev-tools/consensys.png\" }) {\n      ...learningToolImage\n    }\n    bloomtech: file(relativePath: { eq: \"dev-tools/bloomtech.png\" }) {\n      ...learningToolImage\n    }\n    buildspace: file(relativePath: { eq: \"dev-tools/buildspace.png\" }) {\n      ...learningToolImage\n    }\n    cryptoZombie: file(relativePath: { eq: \"dev-tools/crypto-zombie.png\" }) {\n      ...learningToolImage\n    }\n    oz: file(relativePath: { eq: \"dev-tools/oz.png\" }) {\n      ...learningToolImage\n    }\n    vyperfun: file(relativePath: { eq: \"dev-tools/vyperfun.png\" }) {\n      ...learningToolImage\n    }\n    questbook: file(relativePath: { eq: \"dev-tools/questbook.png\" }) {\n      ...learningToolImage\n    }\n    remix: file(relativePath: { eq: \"dev-tools/remix.png\" }) {\n      ...learningToolImage\n    }\n    ethdotbuild: file(relativePath: { eq: \"dev-tools/eth-dot-build.png\" }) {\n      ...learningToolImage\n    }\n    nftschool: file(relativePath: { eq: \"dev-tools/nftschool.png\" }) {\n      ...learningToolImage\n    }\n    learn: file(relativePath: { eq: \"enterprise-eth.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 800\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n  }\n`\n"],"names":["StyledCard","styled","props","theme","breakpoints","l","s","Content","Description","colors","text200","Image","GatsbyImage","maxImageWidth","H2","image","title","description","alt","children","className","Container","Banner","shouldCenter","black300","isWarning","warning","infoBanner","warningLink","infoLink","warningLinkHover","infoLinkHover","margin","StyledEmoji","Emoji","shouldSpaceBetween","emoji","banner","text","size","Link","lightBorder","primary","Pill","StyledIcon","Icon","GlyphPill","fontSizes","Text","searchBackgroundEmpty","gitHubRepo","hideStars","starsString","stargazerCount","toString","rgx","test","replace","to","url","hideArrow","name","ImageWrapper","background","Card","searchBackground","Title","gitHidden","SubjectContainer","SubjectPill","subject","tagYellow","tagBlue","tagTurqouise","tagRed","tagMint","tagOrange","tagPink","tagGray","xs","StyledButtonLink","ButtonLink","Children","REPO_DATA","gql","githubUrl","repoLangCount","subjects","split","repoOwner","length","repoName","useQuery","variables","skip","error","data","hasRepoData","repository","isSvg","includes","src","map","idx","key","languages","nodes","toUpperCase","StyledPage","Page","Header","H1","fonts","monospace","Subtitle","text300","SubtitleTwo","StackContainer","border","ednBackground","StyledCardGrid","CardGrid","intl","useIntl","sandboxes","getImage","remix","ethdotbuild","games","cryptoZombie","oz","vyperfun","captureTheEther","bootcamps","chainshot","consensys","bloomtech","buildspace","questbook","nftschool","translateMessageId","id","sandbox","game","bootcamp","learn"],"sourceRoot":""}