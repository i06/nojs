{"version":3,"file":"component---src-pages-languages-js-b0304440661055af25a4.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/PageMetadata.js","webpack://ethereum-org-website/./src/pages/languages.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { Location } from \"@reach/router\"\nimport { getSrc } from \"gatsby-plugin-image\"\n\nimport { translateMessageId, languageMetadata } from \"../utils/translations\"\n\nconst supportedLanguages = Object.keys(languageMetadata)\n\nconst PageMetadata = ({ description, meta, title, image, canonicalUrl }) => {\n  const {\n    site,\n    ogImageDefault,\n    ogImageDevelopers,\n    ogImageDapps,\n    ogImageEthtwo,\n  } = useStaticQuery(\n    graphql`\n      {\n        site {\n          siteMetadata {\n            author\n            url\n          }\n        }\n        ogImageDefault: file(relativePath: { eq: \"home/hero.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageDevelopers: file(relativePath: { eq: \"enterprise-eth.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageDapps: file(relativePath: { eq: \"doge-computer.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageEthtwo: file(relativePath: { eq: \"eth2/eth2_doge.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n      }\n    `\n  )\n\n  const intl = useIntl()\n\n  const desc = description || translateMessageId(\"site-description\", intl)\n\n  const siteTitle = translateMessageId(\"site-title\", intl)\n\n  return (\n    <Location>\n      {({ location }) => {\n        /* Set canonical URL w/ language path to avoid duplicate content */\n        /* e.g. set ethereum.org/about/ to ethereum.org/en/about/ */\n        const { pathname } = location\n        let canonicalPath = pathname\n        const firstDirectory = canonicalPath.split(\"/\")[1]\n        if (!supportedLanguages.includes(firstDirectory)) {\n          canonicalPath = `/en${pathname}`\n        }\n        const canonical =\n          canonicalUrl || `${site.siteMetadata.url}${canonicalPath}`\n\n        /* Set fallback ogImage based on path */\n        const siteUrl = site.siteMetadata.url\n        let ogImage = getSrc(ogImageDefault)\n        if (pathname.includes(\"/developers/\")) {\n          ogImage = getSrc(ogImageDevelopers)\n        }\n        if (pathname.includes(\"/dapps/\")) {\n          ogImage = getSrc(ogImageDapps)\n        }\n        if (pathname.includes(\"/eth2/\")) {\n          ogImage = getSrc(ogImageEthtwo)\n        }\n        if (image) {\n          ogImage = image\n        }\n        const ogImageUrl = `${siteUrl}${ogImage}`\n\n        return (\n          <Helmet\n            htmlAttributes={{ lang: intl.locale }}\n            title={title}\n            titleTemplate={`%s | ${siteTitle}`}\n            link={[{ rel: \"canonical\", key: canonical, href: canonical }]}\n            meta={[\n              {\n                name: `description`,\n                content: desc,\n              },\n              {\n                name: `image`,\n                content: site.siteMetadata.image,\n              },\n              {\n                property: `og:title`,\n                content: `${title} | ${siteTitle}`,\n              },\n              {\n                property: `og:description`,\n                content: desc,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary_large_image`,\n              },\n              {\n                name: `twitter:creator`,\n                content: site.siteMetadata.author,\n              },\n              {\n                name: `twitter:site`,\n                content: site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: `${title} | ${siteTitle}`,\n              },\n              {\n                name: `twitter:description`,\n                content: desc,\n              },\n              {\n                name: `twitter:image`,\n                content: ogImageUrl,\n              },\n              {\n                property: `og:url`,\n                content: siteUrl,\n              },\n              {\n                property: `og:image`,\n                content: ogImageUrl,\n              },\n              {\n                property: `og:video`,\n                content: `https://www.youtube.com/channel/UCNOfzGXD_C9YMYmnefmPH0g`,\n              },\n              {\n                property: `og:site_name`,\n                content: `ethereum.org`,\n              },\n            ].concat(meta)}\n          >\n            <script type=\"application/ld+json\">\n              {`\n        {\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"Organization\",\n          \"url\": \"https://ethereum.org\",\n          \"email\": \"press@ethereum.org\",\n          \"name\": \"Ethereum\",\n          \"logo\": \"https://ethereum.org/og-image.png\"\n        }\n      `}\n            </script>\n          </Helmet>\n        )\n      }}\n    </Location>\n  )\n}\n\nPageMetadata.defaultProps = {\n  description: ``,\n  meta: [],\n  image: ``,\n  title: ``,\n}\n\nPageMetadata.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default PageMetadata\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useIntl } from \"gatsby-plugin-intl\"\n\nimport PageMetadata from \"../components/PageMetadata\"\nimport Translation from \"../components/Translation\"\nimport Link from \"../components/Link\"\nimport { Page, Content } from \"../components/SharedStyledComponents\"\n\nimport languageMetadata from \"../data/translations\"\nimport { translateMessageId } from \"../utils/translations\"\nimport { CardItem as LangItem } from \"../components/SharedStyledComponents\"\nimport Icon from \"../components/Icon\"\nimport NakedButton from \"../components/NakedButton\"\n\nconst StyledPage = styled(Page)`\n  margin-top: 4rem;\n`\n\nconst ContentContainer = styled.div``\n\nconst LangContainer = styled.div`\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`\n\nconst LangTitle = styled.div`\n  font-size: 0.875rem;\n  line-height: 1.6;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  margin: 1.14em 0;\n  text-transform: uppercase;\n`\n\nconst Form = styled.form`\n  margin: 0;\n  position: relative;\n  border-radius: 0.25em;\n  width: clamp(min(400px, 100%), 50%, 600px);\n`\n\nconst StyledInput = styled.input`\n  border: 1px solid ${(props) => props.theme.colors.searchBorder};\n  color: ${(props) => props.theme.colors.text};\n  background: ${(props) => props.theme.colors.searchBackground};\n  padding: 0.5rem;\n  padding-right: 2rem;\n  border-radius: 0.25em;\n  width: 100%;\n\n  &:focus {\n    outline: ${(props) => props.theme.colors.primary} auto 1px;\n  }\n`\n\nconst IconButton = styled(NakedButton)`\n  position: absolute;\n  top: 50%;\n  margin-top: -12px;\n  right: 6px;\n`\n\nconst ResetIcon = styled(Icon)`\n  fill: ${(props) => props.theme.colors.text};\n`\n\nconst LanguagesPage = () => {\n  const intl = useIntl()\n  const [keyword, setKeyword] = useState(\"\")\n  const resetKeyword = (e) => {\n    e.preventDefault()\n    setKeyword(\"\")\n  }\n  const searchString = translateMessageId(\n    \"page-languages-filter-placeholder\",\n    intl\n  )\n  let translationsCompleted = []\n  for (const lang in languageMetadata) {\n    const langMetadata = languageMetadata[lang]\n    langMetadata[\"path\"] = `/${lang}/`\n    langMetadata[\"name\"] = translateMessageId(`language-${lang}`, intl)\n    const nativeLangTitle = langMetadata[\"language\"]\n    const englishLangTitle = langMetadata[\"name\"]\n    if (\n      englishLangTitle.toLowerCase().includes(keyword.toLowerCase()) ||\n      nativeLangTitle.toLowerCase().includes(keyword.toLowerCase())\n    ) {\n      translationsCompleted.push(languageMetadata[lang])\n    }\n  }\n  translationsCompleted.sort((a, b) => a[\"name\"].localeCompare(b[\"name\"]))\n\n  return (\n    <StyledPage>\n      <PageMetadata\n        title={translateMessageId(\"page-languages-meta-title\", intl)}\n        description={translateMessageId(\"page-languages-meta-desc\", intl)}\n      />\n      <Content>\n        <ContentContainer>\n          <h1>\n            <Translation id=\"page-languages-h1\" />\n          </h1>\n          <p>\n            <Translation id=\"page-languages-p1\" />\n          </p>\n          <p>\n            <Translation id=\"page-languages-interested\" />{\" \"}\n            <Link to=\"/en/contributing/translation-program/\">\n              <Translation id=\"page-languages-learn-more\" />\n            </Link>\n            .\n          </p>\n          <h2>\n            <Translation id=\"page-languages-translations-available\" />:\n          </h2>\n          <Form>\n            <StyledInput\n              value={keyword}\n              placeholder={searchString}\n              onChange={(e) => setKeyword(e.target.value)}\n            />\n            {keyword === \"\" ? null : (\n              <IconButton onClick={resetKeyword}>\n                <ResetIcon name=\"close\" />\n              </IconButton>\n            )}\n          </Form>\n          <LangContainer>\n            {translationsCompleted.map((lang) => (\n              <LangItem to={lang.path} key={lang[\"name\"]}>\n                <LangTitle>{lang[\"name\"]}</LangTitle>\n                <h4>{lang.language}</h4>\n              </LangItem>\n            ))}\n          </LangContainer>\n          <h2>\n            <Translation id=\"page-languages-want-more-header\" />\n          </h2>\n          <p>\n            <Translation id=\"page-languages-want-more-paragraph\" />{\" \"}\n            <Link to=\"/en/contributing/translation-program/\">\n              <Translation id=\"page-languages-want-more-link\" />\n            </Link>\n            .\n          </p>\n        </ContentContainer>\n      </Content>\n    </StyledPage>\n  )\n}\n\nexport default LanguagesPage\n"],"names":["supportedLanguages","Object","keys","languageMetadata","PageMetadata","description","meta","title","image","canonicalUrl","useStaticQuery","site","ogImageDefault","ogImageDevelopers","ogImageDapps","ogImageEthtwo","intl","useIntl","desc","translateMessageId","siteTitle","Location","pathname","location","canonicalPath","firstDirectory","split","includes","canonical","siteMetadata","url","siteUrl","ogImage","getSrc","ogImageUrl","Helmet","htmlAttributes","lang","locale","titleTemplate","link","rel","key","href","name","content","property","author","concat","type","defaultProps","StyledPage","styled","Page","ContentContainer","LangContainer","LangTitle","Form","StyledInput","props","theme","colors","searchBorder","text","searchBackground","primary","IconButton","NakedButton","ResetIcon","Icon","useState","keyword","setKeyword","searchString","translationsCompleted","langMetadata","nativeLangTitle","toLowerCase","push","sort","a","b","localeCompare","id","to","value","placeholder","onChange","e","target","onClick","preventDefault","map","path","language"],"sourceRoot":""}