{"version":3,"file":"component---src-pages-conditional-wallets-index-js-ee135565ed61d55f81be.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Callout.js","webpack://ethereum-org-website/./src/components/CardList.js","webpack://ethereum-org-website/./src/components/HorizontalCard.js","webpack://ethereum-org-website/./src/components/PageHero.js","webpack://ethereum-org-website/./src/components/PageMetadata.js","webpack://ethereum-org-website/./src/pages-conditional/wallets/index.js","webpack://ethereum-org-website/./node_modules/lodash/_baseRandom.js","webpack://ethereum-org-website/./node_modules/lodash/_shuffleSelf.js","webpack://ethereum-org-website/./node_modules/lodash/shuffle.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(\n    49.21deg,\n    rgba(127, 127, 213, 0.2) 19.87%,\n    rgba(134, 168, 231, 0.2) 58.46%,\n    rgba(145, 234, 228, 0.2) 97.05%\n  );\n  padding: 1.5rem;\n  margin: 1rem;\n  margin-top: 8rem;\n  border-radius: 4px;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-bottom: 4rem;\n  }\n`\n\nconst Description = styled.p`\n  font-size: 20px;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n`\n\nconst Image = styled(GatsbyImage)`\n  margin-top: -10rem;\n  align-self: center;\n  max-width: 263px;\n  min-height: 200px;\n`\n\nconst Content = styled.div`\n  margin-top: 2.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`\n\nconst Callout = ({ image, alt, title, description, children, className }) => (\n  <StyledCard className={className}>\n    <Image image={image} alt={alt} />\n    <Content>\n      <div>\n        <h3>{title}</h3>\n        <Description>{description}</Description>\n      </div>\n      {children}\n    </Content>\n  </StyledCard>\n)\n\nexport default Callout\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Link from \"./Link\"\n\nconst Table = styled.div`\n  background-color: ${(props) => props.theme.colors.background};\n  box-shadow: ${(props) => props.theme.colors.tableBoxShadow};\n  width: 100%;\n  margin-bottom: 2rem;\n`\n\nconst Item = styled.div`\n  cursor: pointer;\n  text-decoration: none;\n  display: flex;\n  justify-content: space-between;\n  color: ${(props) => props.theme.colors.text} !important;\n  box-shadow: 0 1px 1px ${(props) => props.theme.colors.tableItemBoxShadow};\n  margin-bottom: 1px;\n  padding: 1rem;\n  width: 100%;\n  color: #000;\n  &:hover {\n    border-radius: 4px;\n    box-shadow: 0 0 1px ${(props) => props.theme.colors.primary};\n    background: ${(props) => props.theme.colors.tableBackgroundHover};\n  }\n`\n\nconst ItemLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  justify-content: space-between;\n  color: ${(props) => props.theme.colors.text} !important;\n  box-shadow: 0 1px 1px ${(props) => props.theme.colors.tableItemBoxShadow};\n  margin-bottom: 1px;\n  padding: 1rem;\n  width: 100%;\n  color: #000;\n  &:hover {\n    border-radius: 4px;\n    box-shadow: 0 0 1px ${(props) => props.theme.colors.primary};\n    background: ${(props) => props.theme.colors.tableBackgroundHover};\n  }\n`\n\nconst ItemTitle = styled.div``\n\nconst ItemDesc = styled.div`\n  font-size: ${(props) => props.theme.fontSizes.s};\n  margin-bottom: 0;\n  opacity: 0.6;\n`\n\nconst LeftContainer = styled.div`\n  flex: 1 1 75%;\n  display: flex;\n  flex-direction: column;\n  margin-right: 2rem;\n`\nconst RightContainer = styled.div`\n  flex: 1 0 25%;\n  display: flex;\n  align-items: center;\n  margin-right: 1rem;\n  flex-wrap: wrap;\n`\n\nconst Image = styled(GatsbyImage)`\n  min-width: 20px;\n  margin-right: 1rem;\n  margin-top: 4px;\n`\n\nconst CardList = ({ content, className, clickHandler }) => (\n  <Table className={className}>\n    {content.map((listItem, idx) => {\n      const { title, description, caption, link, image, alt, id } = listItem\n      const isLink = !!link\n      return isLink ? (\n        <ItemLink key={id || idx} to={link}>\n          {image && <Image image={image} alt={alt} />}\n          <LeftContainer>\n            <ItemTitle>{title}</ItemTitle>\n\n            <ItemDesc>{description}</ItemDesc>\n          </LeftContainer>\n          {caption && (\n            <RightContainer>\n              <ItemDesc>{caption}</ItemDesc>\n            </RightContainer>\n          )}\n        </ItemLink>\n      ) : (\n        <Item key={idx} onClick={() => clickHandler(idx)}>\n          {image && <Image image={image} alt={alt} />}\n          <LeftContainer>\n            <ItemTitle>{title}</ItemTitle>\n\n            <ItemDesc>{description}</ItemDesc>\n          </LeftContainer>\n          {caption && (\n            <RightContainer>\n              <ItemDesc>{caption}</ItemDesc>\n            </RightContainer>\n          )}\n        </Item>\n      )\n    })}\n  </Table>\n)\n\nexport default CardList\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Emoji from \"../components/Emoji\"\n\nconst StyledCard = styled.div`\n  border-radius: 4px;\n  display: flex;\n`\n\nconst Content = styled.div`\n  flex: 0 1 75%;\n  margin-left: 2rem;\n`\n\nconst Description = styled.p`\n  opacity: 0.8;\n  margin-top: -1rem;\n  margin-bottom: 0.5rem;\n`\n\nconst Title = styled.p`\n  font-size: 20px;\n`\n\nconst HorizontalCard = ({\n  emoji,\n  title,\n  description,\n  children,\n  className,\n  emojiSize,\n}) => (\n  <StyledCard className={className}>\n    <Emoji size={emojiSize} text={emoji} />\n    <Content>\n      <Title>{title}</Title>\n      <Description>{description}</Description>\n      {children}\n    </Content>\n  </StyledCard>\n)\n\nexport default HorizontalCard\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport ButtonLink from \"./ButtonLink\"\nimport { Content } from \"./SharedStyledComponents\"\n\nconst HeroContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n  margin-bottom: 0rem;\n  padding: 0rem 4rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: ${(props) =>\n      props.isReverse ? `column` : `column-reverse`};\n    /* accounts for when we want image above or below text */\n    padding: 0;\n  }\n`\n\nconst HeroContent = styled.div`\n  max-width: 640px;\n  padding: 8rem 0 8rem 2rem;\n  margin-right: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding: 4rem 0;\n    max-width: 100%;\n  }\n`\n\nconst HeroImg = styled(GatsbyImage)`\n  flex: 1 1 50%;\n  background-size: cover;\n  background-repeat: no-repeat;\n  align-self: center;\n  margin-top: 3rem;\n  margin-left: 3rem;\n  width: 100%;\n  max-width: 624px;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 0;\n    margin-left: 0;\n    max-width: 560px;\n  }\n`\n\nconst Header = styled.h2`\n  font-weight: 700;\n  font-size: 48px;\n  max-width: 100%;\n  margin-bottom: 0rem;\n  color: ${(props) => props.theme.colors.text00};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    font-size: 40px;\n  }\n`\n\nconst Title = styled.h1`\n  text-transform: uppercase;\n  font-size: 1rem;\n  font-weight: 400;\n  margin-bottom: 1rem;\n  color: ${(props) => props.theme.colors.text300};\n`\n\nconst Subtitle = styled.div`\n  font-size: 24px;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    font-size: 20px;\n  }\n`\n\nconst ButtonRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 1rem;\n  flex-wrap: wrap;\n`\n\nconst StyledButtonLink = styled(ButtonLink)`\n  margin-right: 1rem;\n  margin-bottom: 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-bottom: 1rem;\n  }\n`\n\nconst PageHero = ({ content, children, className, isReverse }) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Content>\n      <HeroContainer isReverse={isReverse} className={className}>\n        <HeroContent>\n          <Title>{title}</Title>\n          <Header>{header}</Header>\n          <Subtitle>{subtitle}</Subtitle>\n          {buttons && (\n            <ButtonRow>\n              {buttons.map((button, idx) => (\n                <StyledButtonLink\n                  isSecondary={button.isSecondary}\n                  key={idx}\n                  to={button.path}\n                >\n                  {button.content}\n                </StyledButtonLink>\n              ))}\n            </ButtonRow>\n          )}\n          {children}\n        </HeroContent>\n        <HeroImg image={image} alt={alt} loading=\"eager\" />\n      </HeroContainer>\n    </Content>\n  )\n}\n\nexport default PageHero\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { Location } from \"@reach/router\"\nimport { getSrc } from \"gatsby-plugin-image\"\n\nimport { translateMessageId, languageMetadata } from \"../utils/translations\"\n\nconst supportedLanguages = Object.keys(languageMetadata)\n\nconst PageMetadata = ({ description, meta, title, image, canonicalUrl }) => {\n  const {\n    site,\n    ogImageDefault,\n    ogImageDevelopers,\n    ogImageDapps,\n    ogImageEthtwo,\n  } = useStaticQuery(\n    graphql`\n      {\n        site {\n          siteMetadata {\n            author\n            url\n          }\n        }\n        ogImageDefault: file(relativePath: { eq: \"home/hero.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageDevelopers: file(relativePath: { eq: \"enterprise-eth.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageDapps: file(relativePath: { eq: \"doge-computer.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageEthtwo: file(relativePath: { eq: \"eth2/eth2_doge.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n      }\n    `\n  )\n\n  const intl = useIntl()\n\n  const desc = description || translateMessageId(\"site-description\", intl)\n\n  const siteTitle = translateMessageId(\"site-title\", intl)\n\n  return (\n    <Location>\n      {({ location }) => {\n        /* Set canonical URL w/ language path to avoid duplicate content */\n        /* e.g. set ethereum.org/about/ to ethereum.org/en/about/ */\n        const { pathname } = location\n        let canonicalPath = pathname\n        const firstDirectory = canonicalPath.split(\"/\")[1]\n        if (!supportedLanguages.includes(firstDirectory)) {\n          canonicalPath = `/en${pathname}`\n        }\n        const canonical =\n          canonicalUrl || `${site.siteMetadata.url}${canonicalPath}`\n\n        /* Set fallback ogImage based on path */\n        const siteUrl = site.siteMetadata.url\n        let ogImage = getSrc(ogImageDefault)\n        if (pathname.includes(\"/developers/\")) {\n          ogImage = getSrc(ogImageDevelopers)\n        }\n        if (pathname.includes(\"/dapps/\")) {\n          ogImage = getSrc(ogImageDapps)\n        }\n        if (pathname.includes(\"/eth2/\")) {\n          ogImage = getSrc(ogImageEthtwo)\n        }\n        if (image) {\n          ogImage = image\n        }\n        const ogImageUrl = `${siteUrl}${ogImage}`\n\n        return (\n          <Helmet\n            htmlAttributes={{ lang: intl.locale }}\n            title={title}\n            titleTemplate={`%s | ${siteTitle}`}\n            link={[{ rel: \"canonical\", key: canonical, href: canonical }]}\n            meta={[\n              {\n                name: `description`,\n                content: desc,\n              },\n              {\n                name: `image`,\n                content: site.siteMetadata.image,\n              },\n              {\n                property: `og:title`,\n                content: `${title} | ${siteTitle}`,\n              },\n              {\n                property: `og:description`,\n                content: desc,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary_large_image`,\n              },\n              {\n                name: `twitter:creator`,\n                content: site.siteMetadata.author,\n              },\n              {\n                name: `twitter:site`,\n                content: site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: `${title} | ${siteTitle}`,\n              },\n              {\n                name: `twitter:description`,\n                content: desc,\n              },\n              {\n                name: `twitter:image`,\n                content: ogImageUrl,\n              },\n              {\n                property: `og:url`,\n                content: siteUrl,\n              },\n              {\n                property: `og:image`,\n                content: ogImageUrl,\n              },\n              {\n                property: `og:video`,\n                content: `https://www.youtube.com/channel/UCNOfzGXD_C9YMYmnefmPH0g`,\n              },\n              {\n                property: `og:site_name`,\n                content: `ethereum.org`,\n              },\n            ].concat(meta)}\n          >\n            <script type=\"application/ld+json\">\n              {`\n        {\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"Organization\",\n          \"url\": \"https://ethereum.org\",\n          \"email\": \"press@ethereum.org\",\n          \"name\": \"Ethereum\",\n          \"logo\": \"https://ethereum.org/og-image.png\"\n        }\n      `}\n            </script>\n          </Helmet>\n        )\n      }}\n    </Location>\n  )\n}\n\nPageMetadata.defaultProps = {\n  description: ``,\n  meta: [],\n  image: ``,\n  title: ``,\n}\n\nPageMetadata.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default PageMetadata\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { graphql } from \"gatsby\"\nimport { shuffle } from \"lodash\"\n\nimport PageHero from \"../../components/PageHero\"\nimport Translation from \"../../components/Translation\"\nimport Callout from \"../../components/Callout\"\nimport Card from \"../../components/Card\"\nimport Link from \"../../components/Link\"\nimport ButtonLink from \"../../components/ButtonLink\"\nimport PageMetadata from \"../../components/PageMetadata\"\nimport HorizontalCard from \"../../components/HorizontalCard\"\nimport CardList from \"../../components/CardList\"\nimport {\n  CardContainer,\n  Content,\n  Divider,\n  GrayContainer,\n  Page,\n  StyledCard,\n  TwoColumnContent,\n} from \"../../components/SharedStyledComponents\"\n\nimport { translateMessageId } from \"../../utils/translations\"\n\nconst StyledTwoColumnContent = styled(TwoColumnContent)`\n  margin-bottom: -2rem;\n  margin-top: 2rem;\n`\n\nconst LeftColumn = styled.div`\n  flex: 0 1 50%;\n  margin-right: 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    max-width: 100%;\n    margin-right: 0;\n    margin-top: 0;\n  }\n`\n\nconst RightColumn = styled.div`\n  flex: 0 1 50%;\n  margin-left: 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 3rem;\n    max-width: 100%;\n    margin-left: 0;\n  }\n`\n\nconst StyledRightColumn = styled(RightColumn)`\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 0rem;\n  }\n`\n\nconst StyledGrayContainer = styled(GrayContainer)`\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 1rem;\n  }\n`\n\nconst SubtitleTwo = styled.div`\n  font-size: 20px;\n  line-height: 140%;\n  margin-bottom: 1.5rem;\n  color: ${(props) => props.theme.colors.text300};\n`\n\nconst SubtitleThree = styled.div`\n  font-size: 20px;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text};\n  margin-bottom: 1.5rem;\n  text-align: center;\n`\n\nconst FindWallet = styled(GatsbyImage)`\n  margin-top: 2rem;\n  max-width: 800px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  width: 100%;\n`\n\nconst Intro = styled(Content)`\n  padding-bottom: 0;\n  h2 {\n    margin-bottom: 0;\n  }\n`\n\nconst IntroTwoColumnContent = styled(TwoColumnContent)`\n  margin-bottom: 0;\n  padding-bottom: 0;\n`\n\nconst GradientContainer = styled(GrayContainer)`\n  background: linear-gradient(\n    49.21deg,\n    rgba(127, 127, 213, 0.2) 19.87%,\n    rgba(134, 168, 231, 0.2) 58.46%,\n    rgba(145, 234, 228, 0.2) 97.05%\n  );\n  margin: 3rem 0rem;\n  width: 100%;\n`\n\nconst ContainerCard = styled(Card)`\n  height: 100%;\n  justify-content: flex-start;\n`\n\nconst CodeBox = styled.div`\n  background: #000000;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border-radius: 4px;\n`\n\nconst Code = styled.p`\n  font-family: monospace;\n  color: #ffffff;\n  margin-bottom: 0rem;\n`\n\nconst ChecklistItem = styled(HorizontalCard)`\n  border: 0px;\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 1rem;\n`\n\nconst WalletType = styled(HorizontalCard)`\n  min-width: 100%;\n  margin: 0.5rem 0rem;\n  border-radius: 0px;\n  align-items: center;\n`\n\nconst StyledCallout = styled(Callout)`\n  flex: 1 1 424px;\n  min-height: 100%;\n`\n\nconst CentralColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 2rem;\n`\n\nconst CalloutCardContainer = styled(CardContainer)`\n  margin-top: 4rem;\n`\n\nconst H2 = styled.h2`\n  /* margin: 0; */\n`\n\nconst cards = [\n  {\n    emoji: \":dollar:\",\n    title: <Translation id=\"page-wallets-manage-funds\" />,\n    description: <Translation id=\"page-wallets-manage-funds-desc\" />,\n  },\n  {\n    emoji: \":frame_with_picture:\",\n    title: <Translation id=\"page-wallets-your-ethereum-account\" />,\n    description: <Translation id=\"page-wallets-your-ethereum-account-desc\" />,\n  },\n  {\n    emoji: \":bust_in_silhouette:\",\n    title: <Translation id=\"page-wallets-your-login\" />,\n    description: <Translation id=\"page-wallets-your-login-desc\" />,\n  },\n]\n\nconst types = [\n  {\n    emoji: \":cd:\",\n    description: <Translation id=\"page-wallets-cd\" />,\n  },\n  {\n    emoji: \":mobile_phone:\",\n    description: <Translation id=\"page-wallets-mobile\" />,\n  },\n  {\n    emoji: \":globe_with_meridians:\",\n    description: <Translation id=\"page-wallets-web-browser\" />,\n  },\n  {\n    emoji: \":desktop_computer:\",\n    description: <Translation id=\"page-wallets-desktop\" />,\n  },\n]\n\nconst articles = [\n  {\n    title: <Translation id=\"page-wallets-protecting-yourself\" />,\n    description: \"MyCrypto\",\n    link:\n      \"https://support.mycrypto.com/staying-safe/protecting-yourself-and-your-funds\",\n  },\n  {\n    title: <Translation id=\"page-wallets-keys-to-safety\" />,\n    description: <Translation id=\"page-wallets-blog\" />,\n    link:\n      \"https://blog.coinbase.com/the-keys-to-keeping-your-crypto-safe-96d497cce6cf\",\n  },\n  {\n    title: <Translation id=\"page-wallets-how-to-store\" />,\n    description: \"ConsenSys\",\n    link:\n      \"https://media.consensys.net/how-to-store-digital-assets-on-ethereum-a2bfdcf66bd0\",\n  },\n]\n\nconst WalletsPage = ({ data }) => {\n  const intl = useIntl()\n  const [wallets, setWallets] = useState([])\n\n  useEffect(() => {\n    const nodes = data.allWallets.nodes\n    // Add fields for CardList\n    const randomWallets = shuffle(\n      nodes.map((node) => {\n        node.image = getImage(data[node.id])\n        node.title = node.name\n        node.description = translateMessageId(\n          `page-find-wallet-description-${node.id}`,\n          intl\n        )\n        node.link = node.url\n        return node\n      })\n    )\n\n    setWallets(randomWallets)\n  }, [data, intl])\n\n  const cryptoCurious = wallets\n    .filter(\n      (wallet) =>\n        (wallet.has_card_deposits === \"TRUE\" ||\n          wallet.has_explore_dapps === \"TRUE\") &&\n        wallet.has_hardware !== \"TRUE\"\n    )\n    .slice(0, 4)\n\n  const cryptoConverted = wallets\n    .filter(\n      (wallet) =>\n        wallet.has_hardware === \"TRUE\" ||\n        wallet.has_high_volume_purchases === \"TRUE\" ||\n        wallet.has_limits_protection === \"TRUE\"\n    )\n    .slice(0, 4)\n\n  const heroContent = {\n    title: translateMessageId(\"page-wallets-title\", intl),\n    header: translateMessageId(\"page-wallets-slogan\", intl),\n    subtitle: translateMessageId(\"page-wallets-subtitle\", intl),\n    image: getImage(data.hero),\n    alt: translateMessageId(\"page-wallets-alt\", intl),\n    buttons: [\n      {\n        path: \"/wallets/find-wallet/\",\n        content: translateMessageId(\"page-wallets-find-wallet-link\", intl),\n      },\n    ],\n  }\n\n  return (\n    <Page>\n      <PageMetadata\n        title={translateMessageId(\"page-wallets-meta-title\", intl)}\n        description={translateMessageId(\"page-wallets-meta-description\", intl)}\n        image={getImage(data.ogImage)?.images.fallback.src}\n      />\n      <PageHero content={heroContent} />\n      <StyledGrayContainer>\n        <Intro>\n          <H2>\n            <Translation id=\"page-wallets-whats-a-wallet\" />\n          </H2>\n        </Intro>\n        <IntroTwoColumnContent>\n          <LeftColumn>\n            <p>\n              <Translation id=\"page-wallets-description\" />\n            </p>\n            <p>\n              <Translation id=\"page-wallets-desc-2\" />{\" \"}\n              <Link to=\"/eth/\">\n                <Translation id=\"page-wallets-desc-2-link\" />{\" \"}\n              </Link>\n            </p>\n          </LeftColumn>\n          <StyledRightColumn>\n            <p>\n              <Translation id=\"page-wallets-desc-3\" />\n            </p>\n            <p>\n              <Translation id=\"page-wallets-desc-4\" />\n            </p>\n          </StyledRightColumn>\n        </IntroTwoColumnContent>\n        <Content>\n          <CardContainer>\n            {cards.map((card, idx) => (\n              <StyledCard\n                key={idx}\n                emoji={card.emoji}\n                title={card.title}\n                description={card.description}\n              />\n            ))}\n          </CardContainer>\n        </Content>\n      </StyledGrayContainer>\n      <StyledTwoColumnContent>\n        <LeftColumn>\n          <H2>\n            <Translation id=\"page-wallets-accounts-addresses\" />\n          </H2>\n          <p>\n            <Translation id=\"page-wallets-accounts-addresses-desc\" />\n          </p>\n          <ul>\n            <li>\n              <p>\n                <Translation id=\"page-wallets-ethereum-account\" />\n              </p>\n            </li>\n            <li>\n              <p>\n                <Translation id=\"page-wallets-accounts-ethereum-addresses\" />\n              </p>\n            </li>\n            <li>\n              <p>\n                <Translation id=\"page-wallets-ethereum-wallet\" />\n              </p>\n            </li>\n          </ul>\n          <p>\n            <Translation id=\"page-wallets-most-wallets\" />\n          </p>\n        </LeftColumn>\n        <RightColumn>\n          <H2>\n            <Translation id=\"page-wallets-types\" />\n          </H2>\n          <div>\n            {types.map((type, idx) => (\n              <WalletType\n                key={idx}\n                emoji={type.emoji}\n                title={type.title}\n                description={type.description}\n                size={2.5}\n              />\n            ))}\n          </div>\n        </RightColumn>\n      </StyledTwoColumnContent>\n      <GradientContainer>\n        <Content>\n          <H2>\n            <Translation id=\"page-wallets-get-wallet\" />\n          </H2>\n          <p>\n            <Translation id=\"page-wallets-get-wallet-desc\" />\n          </p>\n          <p>\n            <em>\n              <Translation id=\"page-wallets-get-wallet-desc-2\" />\n            </em>\n          </p>\n        </Content>\n        <TwoColumnContent>\n          <LeftColumn>\n            <ContainerCard\n              emoji=\":thinking_face:\"\n              title={translateMessageId(\"page-wallets-curious\", intl)}\n              description={translateMessageId(\n                \"page-wallets-curious-desc\",\n                intl\n              )}\n            >\n              <CardList content={cryptoCurious} />\n            </ContainerCard>\n          </LeftColumn>\n          <RightColumn>\n            <ContainerCard\n              emoji=\":whale:\"\n              title={translateMessageId(\"page-wallets-converted\", intl)}\n              description={translateMessageId(\n                \"page-wallets-converted-desc\",\n                intl\n              )}\n            >\n              <CardList content={cryptoConverted} />\n            </ContainerCard>\n          </RightColumn>\n        </TwoColumnContent>\n        <Content>\n          <CentralColumn>\n            <Divider />\n            <H2>\n              <Translation id=\"page-wallets-features-title\" />\n            </H2>\n            <SubtitleThree>\n              <Translation id=\"page-wallets-features-desc\" />\n            </SubtitleThree>\n            <ButtonLink to=\"/wallets/find-wallet/\">\n              <Translation id=\"page-wallets-find-wallet-btn\" />\n            </ButtonLink>\n            <FindWallet image={getImage(data.findWallet)} alt=\"\" />\n          </CentralColumn>\n        </Content>\n      </GradientContainer>\n      <TwoColumnContent>\n        <LeftColumn>\n          <H2>\n            <Translation id=\"page-wallets-stay-safe\" />\n          </H2>\n          <SubtitleTwo>\n            <Translation id=\"page-wallets-stay-safe-desc\" />\n          </SubtitleTwo>\n          <div>\n            <ChecklistItem\n              key=\"0\"\n              emoji=\":white_check_mark:\"\n              title={translateMessageId(\n                \"page-wallets-take-responsibility\",\n                intl\n              )}\n              description={translateMessageId(\n                \"page-wallets-take-responsibility-desc\",\n                intl\n              )}\n            />\n            <ChecklistItem\n              key=\"1\"\n              emoji=\":white_check_mark:\"\n              title={translateMessageId(\"page-wallets-seed-phrase\", intl)}\n              description={translateMessageId(\n                \"page-wallets-seed-phrase-desc\",\n                intl\n              )}\n            >\n              <p>\n                <Translation id=\"page-wallets-seed-phrase-example\" />\n              </p>\n              <CodeBox>\n                <Code>\n                  <Translation id=\"page-wallets-seed-phrase-snippet\" />\n                </Code>\n              </CodeBox>\n              <p>\n                <Translation id=\"page-wallets-seed-phrase-write-down\" />\n              </p>\n            </ChecklistItem>\n            <ChecklistItem\n              key=\"2\"\n              emoji=\":white_check_mark:\"\n              title={translateMessageId(\"page-wallets-bookmarking\", intl)}\n              description={translateMessageId(\n                \"page-wallets-bookmarking-desc\",\n                intl\n              )}\n            />\n            <ChecklistItem\n              key=\"3\"\n              emoji=\":white_check_mark:\"\n              title={translateMessageId(\"page-wallets-triple-check\", intl)}\n              description={translateMessageId(\n                \"page-wallets-triple-check-desc\",\n                intl\n              )}\n            />\n          </div>\n        </LeftColumn>\n        <RightColumn>\n          <H2>\n            <Translation id=\"page-wallets-tips\" />\n          </H2>\n          <SubtitleTwo>\n            <Translation id=\"page-wallets-tips-community\" />\n          </SubtitleTwo>\n          <CardList content={articles} />\n        </RightColumn>\n      </TwoColumnContent>\n      <Content>\n        <Divider />\n        <H2>\n          <Translation id=\"page-wallets-explore\" />\n        </H2>\n        <CalloutCardContainer>\n          <StyledCallout\n            image={getImage(data.eth)}\n            title={translateMessageId(\"page-wallets-get-some\", intl)}\n            alt={translateMessageId(\"page-wallets-get-some-alt\", intl)}\n            description={translateMessageId(\"page-wallets-get-some-desc\", intl)}\n          >\n            <div>\n              <ButtonLink to=\"/get-eth/\">\n                <Translation id=\"page-wallets-get-some-btn\" />\n              </ButtonLink>\n            </div>\n          </StyledCallout>\n          <StyledCallout\n            image={getImage(data.dapps)}\n            title={translateMessageId(\"page-wallets-try-dapps\", intl)}\n            alt={translateMessageId(\"page-wallets-try-dapps-alt\", intl)}\n            description={translateMessageId(\n              \"page-wallets-try-dapps-desc\",\n              intl\n            )}\n          >\n            <div>\n              <ButtonLink to=\"/dapps/\">\n                <Translation id=\"page-wallets-more-on-dapps-btn\" />\n              </ButtonLink>\n            </div>\n          </StyledCallout>\n        </CalloutCardContainer>\n      </Content>\n    </Page>\n  )\n}\n\nexport default WalletsPage\n\nexport const calloutImage = graphql`\n  fragment calloutImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        height: 200\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\n\nexport const listImage = graphql`\n  fragment listImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        height: 20\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\n\nexport const query = graphql`\n  {\n    hero: file(relativePath: { eq: \"wallet.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    findWallet: file(relativePath: { eq: \"wallets/find-wallet.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 800\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    ogImage: file(relativePath: { eq: \"wallet-cropped.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 738\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    eth: file(relativePath: { eq: \"eth-logo.png\" }) {\n      ...calloutImage\n    }\n    dapps: file(relativePath: { eq: \"doge-computer.png\" }) {\n      ...calloutImage\n    }\n    allWallets: allWalletsCsv {\n      nodes {\n        id\n        name\n        url\n        brand_color\n        has_mobile\n        has_desktop\n        has_web\n        has_hardware\n        has_card_deposits\n        has_explore_dapps\n        has_defi_integrations\n        has_bank_withdrawals\n        has_limits_protection\n        has_high_volume_purchases\n        has_dex_integrations\n        has_multisig\n      }\n    }\n    timestamp: walletsCsv {\n      parent {\n        ... on File {\n          id\n          name\n          fields {\n            gitLogLatestDate\n          }\n        }\n      }\n    }\n    alpha: file(relativePath: { eq: \"wallets/alpha.png\" }) {\n      ...listImage\n    }\n    argent: file(relativePath: { eq: \"wallets/argent.png\" }) {\n      ...listImage\n    }\n    atomic: file(relativePath: { eq: \"wallets/atomic.png\" }) {\n      ...listImage\n    }\n    bitcoindotcom: file(relativePath: { eq: \"wallets/bitcoindotcom.png\" }) {\n      ...walletCardImage\n    }\n    bitski: file(relativePath: { eq: \"wallets/bitski.png\" }) {\n      ...listImage\n    }\n    blockchain: file(relativePath: { eq: \"wallets/blockchain.png\" }) {\n      ...listImage\n    }\n    coinbase: file(relativePath: { eq: \"wallets/coinbase.png\" }) {\n      ...listImage\n    }\n    coinomi: file(relativePath: { eq: \"wallets/coinomi.png\" }) {\n      ...listImage\n    }\n    dcent: file(relativePath: { eq: \"wallets/dcent.png\" }) {\n      ...listImage\n    }\n    dharma: file(relativePath: { eq: \"wallets/dharma.png\" }) {\n      ...listImage\n    }\n    eidoo: file(relativePath: { eq: \"wallets/eidoo.png\" }) {\n      ...listImage\n    }\n    enjin: file(relativePath: { eq: \"wallets/enjin.png\" }) {\n      ...listImage\n    }\n    eql: file(relativePath: { eq: \"wallets/eql.png\" }) {\n      ...listImage\n    }\n    fortmatic: file(relativePath: { eq: \"wallets/fortmatic.png\" }) {\n      ...listImage\n    }\n    gnosis: file(relativePath: { eq: \"wallets/gnosis.png\" }) {\n      ...listImage\n    }\n    guarda: file(relativePath: { eq: \"wallets/guarda.png\" }) {\n      ...listImage\n    }\n    hyperpay: file(relativePath: { eq: \"wallets/hyperpay.png\" }) {\n      ...listImage\n    }\n    imtoken: file(relativePath: { eq: \"wallets/imtoken.png\" }) {\n      ...listImage\n    }\n    ledger: file(relativePath: { eq: \"wallets/ledger.png\" }) {\n      ...listImage\n    }\n    linen: file(relativePath: { eq: \"wallets/linen.png\" }) {\n      ...listImage\n    }\n    lumi: file(relativePath: { eq: \"wallets/lumi.png\" }) {\n      ...listImage\n    }\n    mathwallet: file(relativePath: { eq: \"wallets/mathwallet.png\" }) {\n      ...listImage\n    }\n    metamask: file(relativePath: { eq: \"wallets/metamask.png\" }) {\n      ...listImage\n    }\n    monolith: file(relativePath: { eq: \"wallets/monolith.png\" }) {\n      ...listImage\n    }\n    multis: file(relativePath: { eq: \"wallets/multis.png\" }) {\n      ...listImage\n    }\n    mycrypto: file(relativePath: { eq: \"wallets/mycrypto.png\" }) {\n      ...listImage\n    }\n    myetherwallet: file(relativePath: { eq: \"wallets/myetherwallet.png\" }) {\n      ...listImage\n    }\n    pillar: file(relativePath: { eq: \"wallets/pillar.png\" }) {\n      ...listImage\n    }\n    portis: file(relativePath: { eq: \"wallets/portis.png\" }) {\n      ...listImage\n    }\n    rainbow: file(relativePath: { eq: \"wallets/rainbow.png\" }) {\n      ...listImage\n    }\n    samsung: file(relativePath: { eq: \"wallets/samsung.png\" }) {\n      ...listImage\n    }\n    squarelink: file(relativePath: { eq: \"wallets/squarelink.png\" }) {\n      ...listImage\n    }\n    status: file(relativePath: { eq: \"wallets/status.png\" }) {\n      ...listImage\n    }\n    torus: file(relativePath: { eq: \"wallets/torus.png\" }) {\n      ...listImage\n    }\n    trezor: file(relativePath: { eq: \"wallets/trezor.png\" }) {\n      ...listImage\n    }\n    trust: file(relativePath: { eq: \"wallets/trust.png\" }) {\n      ...listImage\n    }\n    unstoppable: file(relativePath: { eq: \"wallets/unstoppable.png\" }) {\n      ...listImage\n    }\n    zengo: file(relativePath: { eq: \"wallets/zengo.png\" }) {\n      ...listImage\n    }\n    tokenpocket: file(relativePath: { eq: \"wallets/tokenpocket.png\" }) {\n      ...listImage\n    }\n    walleth: file(relativePath: { eq: \"wallets/walleth.png\" }) {\n      ...listImage\n    }\n    safepal: file(relativePath: { eq: \"wallets/safepal.png\" }) {\n      ...listImage\n    }\n    opera: file(relativePath: { eq: \"wallets/opera.png\" }) {\n      ...listImage\n    }\n    coin98: file(relativePath: { eq: \"wallets/coin98.png\" }) {\n      ...listImage\n    }\n    bitkeep: file(relativePath: { eq: \"wallets/bitkeep.png\" }) {\n      ...listImage\n    }\n  }\n`\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n"],"names":["StyledCard","styled","props","theme","breakpoints","l","Description","colors","text200","Image","GatsbyImage","Content","image","alt","title","description","children","className","Table","background","tableBoxShadow","Item","text","tableItemBoxShadow","primary","tableBackgroundHover","ItemLink","Link","ItemTitle","ItemDesc","fontSizes","s","LeftContainer","RightContainer","content","clickHandler","map","listItem","idx","caption","link","id","key","to","onClick","Title","emoji","emojiSize","size","HeroContainer","isReverse","HeroContent","HeroImg","Header","text00","text300","Subtitle","ButtonRow","StyledButtonLink","ButtonLink","buttons","header","subtitle","button","isSecondary","path","loading","supportedLanguages","Object","keys","languageMetadata","PageMetadata","meta","canonicalUrl","useStaticQuery","site","ogImageDefault","ogImageDevelopers","ogImageDapps","ogImageEthtwo","intl","useIntl","desc","translateMessageId","siteTitle","Location","pathname","location","canonicalPath","firstDirectory","split","includes","canonical","siteMetadata","url","siteUrl","ogImage","getSrc","ogImageUrl","Helmet","htmlAttributes","lang","locale","titleTemplate","rel","href","name","property","author","concat","type","defaultProps","StyledTwoColumnContent","TwoColumnContent","LeftColumn","RightColumn","StyledRightColumn","StyledGrayContainer","GrayContainer","SubtitleTwo","SubtitleThree","FindWallet","Intro","IntroTwoColumnContent","GradientContainer","ContainerCard","Card","CodeBox","Code","ChecklistItem","HorizontalCard","WalletType","StyledCallout","Callout","CentralColumn","CalloutCardContainer","CardContainer","H2","cards","types","articles","data","useState","wallets","setWallets","useEffect","nodes","allWallets","randomWallets","node","getImage","cryptoCurious","filter","wallet","has_card_deposits","has_explore_dapps","has_hardware","slice","cryptoConverted","has_high_volume_purchases","has_limits_protection","heroContent","hero","images","fallback","src","card","findWallet","eth","dapps","nativeFloor","Math","floor","nativeRandom","random","module","exports","lower","upper","baseRandom","array","index","length","lastIndex","undefined","rand","value","copyArray","shuffleSelf"],"sourceRoot":""}