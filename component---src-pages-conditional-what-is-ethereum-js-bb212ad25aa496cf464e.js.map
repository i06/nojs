{"version":3,"file":"component---src-pages-conditional-what-is-ethereum-js-bb212ad25aa496cf464e.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/ActionCard.js","webpack://ethereum-org-website/./src/components/Callout.js","webpack://ethereum-org-website/./src/components/PageMetadata.js","webpack://ethereum-org-website/./src/pages-conditional/what-is-ethereum.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Link from \"./Link\"\n\nconst Content = styled.div`\n  padding: 1.5rem;\n`\n\nconst Description = styled.p`\n  opacity: 0.8;\n  margin-bottom: 0rem;\n`\n\nconst ChildrenContainer = styled.div`\n  margin-top: 2rem;\n`\n\nconst ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${(props) => (props.isRight ? `flex-end` : `center`)};\n  align-items: ${(props) => (props.isBottom ? `flex-end` : `center`)};\n  background: ${(props) => props.theme.colors.cardGradient};\n  box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.1);\n  min-height: 260px;\n`\n\nconst Title = styled.h3`\n  margin-top: 0.5rem;\n  margin-bottom: 1rem;\n`\n\nconst Image = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  min-width: 100px;\n  min-height: 100px;\n  max-width: 372px;\n  max-height: 257px;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    max-width: 311px;\n  }\n`\n\nconst Card = styled(Link)`\n  text-decoration: none;\n  flex: 1 1 372px;\n  color: ${(props) => props.theme.colors.text};\n  box-shadow: 0px 14px 66px rgba(0, 0, 0, 0.07),\n    0px 10px 17px rgba(0, 0, 0, 0.03), 0px 4px 7px rgba(0, 0, 0, 0.05);\n  margin: 1rem;\n\n  &:hover,\n  &:focus {\n    border-radius: 4px;\n    box-shadow: 0px 8px 17px rgba(0, 0, 0, 0.15);\n    background: ${(props) => props.theme.colors.tableBackgroundHover};\n    transition: transform 0.1s;\n    transform: scale(1.02);\n  }\n`\n\nconst ActionCard = ({\n  to,\n  alt,\n  image,\n  title,\n  description,\n  children,\n  className,\n  isRight,\n  isBottom = true,\n}) => {\n  const isImageURL = typeof image === \"string\" && image.includes(\"http\")\n  return (\n    <Card to={to} className={className} hideArrow={true}>\n      <ImageWrapper\n        isRight={isRight}\n        isBottom={isBottom}\n        className=\"action-card-image-wrapper\"\n      >\n        {!isImageURL && <Image image={image} alt={alt} />}\n        {isImageURL && (\n          <img src={image} alt={alt} className=\"action-card-image\" />\n        )}\n      </ImageWrapper>\n      <Content className=\"action-card-content\">\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n        {children && <ChildrenContainer>{children}</ChildrenContainer>}\n      </Content>\n    </Card>\n  )\n}\n\nexport default ActionCard\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(\n    49.21deg,\n    rgba(127, 127, 213, 0.2) 19.87%,\n    rgba(134, 168, 231, 0.2) 58.46%,\n    rgba(145, 234, 228, 0.2) 97.05%\n  );\n  padding: 1.5rem;\n  margin: 1rem;\n  margin-top: 8rem;\n  border-radius: 4px;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-bottom: 4rem;\n  }\n`\n\nconst Description = styled.p`\n  font-size: 20px;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n`\n\nconst Image = styled(GatsbyImage)`\n  margin-top: -10rem;\n  align-self: center;\n  max-width: 263px;\n  min-height: 200px;\n`\n\nconst Content = styled.div`\n  margin-top: 2.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`\n\nconst Callout = ({ image, alt, title, description, children, className }) => (\n  <StyledCard className={className}>\n    <Image image={image} alt={alt} />\n    <Content>\n      <div>\n        <h3>{title}</h3>\n        <Description>{description}</Description>\n      </div>\n      {children}\n    </Content>\n  </StyledCard>\n)\n\nexport default Callout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { Location } from \"@reach/router\"\nimport { getSrc } from \"gatsby-plugin-image\"\n\nimport { translateMessageId, languageMetadata } from \"../utils/translations\"\n\nconst supportedLanguages = Object.keys(languageMetadata)\n\nconst PageMetadata = ({ description, meta, title, image, canonicalUrl }) => {\n  const {\n    site,\n    ogImageDefault,\n    ogImageDevelopers,\n    ogImageDapps,\n    ogImageEthtwo,\n  } = useStaticQuery(\n    graphql`\n      {\n        site {\n          siteMetadata {\n            author\n            url\n          }\n        }\n        ogImageDefault: file(relativePath: { eq: \"home/hero.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageDevelopers: file(relativePath: { eq: \"enterprise-eth.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageDapps: file(relativePath: { eq: \"doge-computer.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageEthtwo: file(relativePath: { eq: \"eth2/eth2_doge.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n      }\n    `\n  )\n\n  const intl = useIntl()\n\n  const desc = description || translateMessageId(\"site-description\", intl)\n\n  const siteTitle = translateMessageId(\"site-title\", intl)\n\n  return (\n    <Location>\n      {({ location }) => {\n        /* Set canonical URL w/ language path to avoid duplicate content */\n        /* e.g. set ethereum.org/about/ to ethereum.org/en/about/ */\n        const { pathname } = location\n        let canonicalPath = pathname\n        const firstDirectory = canonicalPath.split(\"/\")[1]\n        if (!supportedLanguages.includes(firstDirectory)) {\n          canonicalPath = `/en${pathname}`\n        }\n        const canonical =\n          canonicalUrl || `${site.siteMetadata.url}${canonicalPath}`\n\n        /* Set fallback ogImage based on path */\n        const siteUrl = site.siteMetadata.url\n        let ogImage = getSrc(ogImageDefault)\n        if (pathname.includes(\"/developers/\")) {\n          ogImage = getSrc(ogImageDevelopers)\n        }\n        if (pathname.includes(\"/dapps/\")) {\n          ogImage = getSrc(ogImageDapps)\n        }\n        if (pathname.includes(\"/eth2/\")) {\n          ogImage = getSrc(ogImageEthtwo)\n        }\n        if (image) {\n          ogImage = image\n        }\n        const ogImageUrl = `${siteUrl}${ogImage}`\n\n        return (\n          <Helmet\n            htmlAttributes={{ lang: intl.locale }}\n            title={title}\n            titleTemplate={`%s | ${siteTitle}`}\n            link={[{ rel: \"canonical\", key: canonical, href: canonical }]}\n            meta={[\n              {\n                name: `description`,\n                content: desc,\n              },\n              {\n                name: `image`,\n                content: site.siteMetadata.image,\n              },\n              {\n                property: `og:title`,\n                content: `${title} | ${siteTitle}`,\n              },\n              {\n                property: `og:description`,\n                content: desc,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary_large_image`,\n              },\n              {\n                name: `twitter:creator`,\n                content: site.siteMetadata.author,\n              },\n              {\n                name: `twitter:site`,\n                content: site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: `${title} | ${siteTitle}`,\n              },\n              {\n                name: `twitter:description`,\n                content: desc,\n              },\n              {\n                name: `twitter:image`,\n                content: ogImageUrl,\n              },\n              {\n                property: `og:url`,\n                content: siteUrl,\n              },\n              {\n                property: `og:image`,\n                content: ogImageUrl,\n              },\n              {\n                property: `og:video`,\n                content: `https://www.youtube.com/channel/UCNOfzGXD_C9YMYmnefmPH0g`,\n              },\n              {\n                property: `og:site_name`,\n                content: `ethereum.org`,\n              },\n            ].concat(meta)}\n          >\n            <script type=\"application/ld+json\">\n              {`\n        {\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"Organization\",\n          \"url\": \"https://ethereum.org\",\n          \"email\": \"press@ethereum.org\",\n          \"name\": \"Ethereum\",\n          \"logo\": \"https://ethereum.org/og-image.png\"\n        }\n      `}\n            </script>\n          </Helmet>\n        )\n      }}\n    </Location>\n  )\n}\n\nPageMetadata.defaultProps = {\n  description: ``,\n  meta: [],\n  image: ``,\n  title: ``,\n}\n\nPageMetadata.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default PageMetadata\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { graphql } from \"gatsby\"\nimport { useIntl } from \"gatsby-plugin-intl\"\n\nimport { translateMessageId } from \"../utils/translations\"\nimport Translation from \"../components/Translation\"\nimport ActionCard from \"../components/ActionCard\"\nimport Callout from \"../components/Callout\"\nimport Card from \"../components/Card\"\nimport Link from \"../components/Link\"\nimport ButtonLink from \"../components/ButtonLink\"\nimport PageMetadata from \"../components/PageMetadata\"\nimport {\n  CardContainer,\n  Content,\n  Divider,\n  Intro,\n  GrayContainer,\n  Page,\n} from \"../components/SharedStyledComponents\"\n\nconst HeroContent = styled(Content)`\n  @media (max-width: ${(props) => props.theme.breakpoints.xl}) {\n    padding: 1rem 2rem 2rem;\n  }\n`\n\nconst Slogan = styled.p`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 32px;\n  line-height: 140%;\n`\n\nconst Title = styled.h1`\n  font-size: 14px;\n  line-height: 140%;\n  letter-spacing: 0.04em;\n  font-weight: 500;\n  margin-bottom: 1rem;\n  margin-top: 0;\n  text-transform: uppercase;\n  color: ${(props) => props.theme.colors.textTableOfContents};\n`\n\nconst Subtitle = styled.div`\n  font-size: 20px;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n`\nconst SubtitleTwo = styled.div`\n  font-size: 20px;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text300};\n`\n\nconst HeroContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column-reverse;\n  }\n`\n\nconst Hero = styled(GatsbyImage)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  background-size: cover;\n  background-repeat: no-repeat;\n`\n\nconst Header = styled.header`\n  margin-top: 12rem;\n  @media (max-width: 1280px) {\n    margin-top: 8rem;\n  }\n  @media (max-width: 1160px) {\n    margin-top: 7rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 4rem;\n  }\n  @media (max-width: 920px) {\n    margin-top: 2rem;\n  }\n  @media (max-width: 870px) {\n    margin-top: 1rem;\n  }\n  @media (max-width: 840px) {\n    margin-top: 0;\n  }\n`\n\nconst StyledGrayContatiner = styled(GrayContainer)`\n  padding: 4rem 2rem;\n  margin-top: -14rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.xl}) {\n    margin-top: -15rem;\n  }\n  @media (max-width: 1160px) {\n    margin-top: -14rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: -12rem;\n  }\n  @media (max-width: 920px) {\n    margin-top: -11rem;\n  }\n  @media (max-width: 870px) {\n    margin-top: -10rem;\n  }\n  @media (max-width: 810px) {\n    margin-top: -9rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    margin-top: 0rem;\n    box-shadow: none;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    padding: 2rem 2rem;\n  }\n`\n\nconst ActionCardContainer = styled(CardContainer)`\n  justify-content: center;\n  margin-bottom: 3rem;\n`\n\nconst StyledCard = styled(Card)`\n  flex: 1 1 30%;\n  min-width: 240px;\n  margin: 1rem;\n  padding: 1.5rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex: 1 1 30%;\n  }\n`\n\nconst Banner = styled(GatsbyImage)`\n  opacity: 0.3;\n  width: 100%;\n  height: 400px;\n`\n\nconst BannerContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  margin-bottom: 4rem;\n`\n\nconst BannerMessage = styled.h2`\n  position: absolute;\n  width: 100%;\n  padding: 0.5rem;\n  top: 30%;\n  text-align: center;\n  font-size: 48px;\n  line-height: 140%;\n  margin-top: 0;\n  color: ${(props) => props.theme.colors.text};\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    font-size: 32px;\n    top: 35%;\n  }\n`\n\nconst ActionIntro = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 3rem;\n`\n\nconst TwoColumnContent = styled(Content)`\n  display: flex;\n  align-items: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`\n\nconst Column = styled.div`\n  flex: 0 0 50%;\n  max-width: 75%;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    max-width: 100%;\n  }\n  margin-bottom: 1.5rem;\n`\n\nconst CardColumn = styled.div`\n  flex: 0 1 50%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n  margin-bottom: 3rem;\n`\n\nconst SingleCard = styled(StyledCard)`\n  max-width: 420px;\n  min-width: 320px;\n  margin: 0;\n  @media (min-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-right: 7rem;\n    margin-left: 7rem;\n  }\n`\n\nconst StyledCallout = styled(Callout)`\n  flex: 1 1 416px;\n  min-height: 100%;\n`\n\nconst cards = [\n  {\n    emoji: \":bank:\",\n    title: <Translation id=\"page-what-is-ethereum-banking-card\" />,\n    description: <Translation id=\"page-what-is-ethereum-banking-card-desc\" />,\n  },\n\n  {\n    emoji: \":detective:\",\n    title: <Translation id=\"page-what-is-ethereum-internet-card\" />,\n    description: <Translation id=\"page-what-is-ethereum-internet-card-desc\" />,\n  },\n  {\n    emoji: \":busts_in_silhouette:\",\n    title: <Translation id=\"page-what-is-ethereum-p2p-card\" />,\n    description: <Translation id=\"page-what-is-ethereum-p2p-card-desc\" />,\n  },\n  {\n    emoji: \":shield:\",\n    title: <Translation id=\"page-what-is-ethereum-censorless-card\" />,\n    description: (\n      <Translation id=\"page-what-is-ethereum-censorless-card-desc\" />\n    ),\n  },\n  {\n    emoji: \":shopping_bags:\",\n    title: <Translation id=\"page-what-is-ethereum-commerce-card\" />,\n    description: <Translation id=\"page-what-is-ethereum-commerce-card-desc\" />,\n  },\n  {\n    emoji: \":handshake:\",\n    title: <Translation id=\"page-what-is-ethereum-compatibility-card\" />,\n    description: (\n      <Translation id=\"page-what-is-ethereum-compatibility-card-desc\" />\n    ),\n  },\n]\n\nconst WhatIsEthereumPage = ({ data }) => {\n  const intl = useIntl()\n  const actions = [\n    {\n      title: <Translation id=\"page-what-is-ethereum-native-title\" />,\n      to: \"/eth/\",\n      alt: translateMessageId(\"page-what-is-ethereum-native-alt\", intl),\n      image: getImage(data.eth),\n      description: <Translation id=\"page-what-is-ethereum-native-crypto\" />,\n    },\n    {\n      title: <Translation id=\"page-what-is-ethereum-wallets\" />,\n      to: \"/wallets/\",\n      alt: translateMessageId(\"page-what-is-ethereum-native-img-alt\", intl),\n      image: getImage(data.wallets),\n\n      description: <Translation id=\"page-what-is-ethereum-wallets-desc\" />,\n    },\n    {\n      title: <Translation id=\"page-what-is-ethereum-dapps-title\" />,\n      to: \"/dapps/\",\n      alt: translateMessageId(\"page-what-is-ethereum-dapps-img-alt\", intl),\n      image: getImage(data.dapps),\n      description: <Translation id=\"page-what-is-ethereum-dapps-desc\" />,\n    },\n  ]\n  const usecases = [\n    {\n      title: <Translation id=\"page-what-is-ethereum-defi-title\" />,\n      to: \"/defi/\",\n      alt: translateMessageId(\"page-what-is-ethereum-defi-alt\", intl),\n      image: getImage(data.defi),\n      description: <Translation id=\"page-what-is-ethereum-defi-description\" />,\n    },\n    {\n      title: <Translation id=\"page-what-is-ethereum-nft-title\" />,\n      to: \"/nft/\",\n      alt: translateMessageId(\"page-what-is-ethereum-nft-alt\", intl),\n      image: getImage(data.nft),\n      description: <Translation id=\"page-what-is-ethereum-nft-description\" />,\n    },\n    {\n      title: <Translation id=\"page-what-is-ethereum-dao-title\" />,\n      to: \"/dao/\",\n      alt: translateMessageId(\"page-what-is-ethereum-dao-alt\", intl),\n      image: getImage(data.dao),\n      description: <Translation id=\"page-what-is-ethereum-dao-description\" />,\n    },\n  ]\n  return (\n    <Page>\n      <PageMetadata\n        title={translateMessageId(\"page-what-is-ethereum-meta-title\", intl)}\n        description={translateMessageId(\n          \"page-what-is-ethereum-meta-description\",\n          intl\n        )}\n        image={getImage(data.ogImage)?.images.fallback.src}\n      />\n      <HeroContent>\n        <HeroContainer>\n          <Header>\n            <Title>\n              <Translation id=\"page-what-is-ethereum-title\" />\n            </Title>\n            <Slogan>\n              <Translation id=\"page-what-is-ethereum-desc\" />\n            </Slogan>\n            <Subtitle>\n              <Translation id=\"page-what-is-ethereum-accessibility\" />\n            </Subtitle>\n            <SubtitleTwo>\n              <Translation id=\"page-what-is-ethereum-tools-needed\" />\n            </SubtitleTwo>\n          </Header>\n          <Hero\n            image={getImage(data.hero)}\n            alt={translateMessageId(\n              \"page-what-is-ethereum-alt-img-bazaar\",\n              intl\n            )}\n            loading=\"eager\"\n          />\n        </HeroContainer>\n      </HeroContent>\n      <StyledGrayContatiner>\n        <Intro>\n          <p>\n            <Translation id=\"page-what-is-ethereum-in-depth-description\" />\n          </p>\n        </Intro>\n        <CardContainer>\n          {cards.map((card, idx) => (\n            <StyledCard\n              key={idx}\n              emoji={card.emoji}\n              title={card.title}\n              description={card.description}\n            />\n          ))}\n        </CardContainer>\n      </StyledGrayContatiner>\n      <BannerContainer>\n        <Banner\n          image={getImage(data.banner)}\n          alt={translateMessageId(\"page-what-is-ethereum-alt-img-social\", intl)}\n        />\n        <BannerMessage>\n          <Translation id=\"page-what-is-ethereum-welcome\" /> <br />\n          <Translation id=\"page-what-is-ethereum-welcome-2\" />\n        </BannerMessage>\n      </BannerContainer>\n      <TwoColumnContent>\n        <Column>\n          <h2>\n            <Translation id=\"page-what-is-ethereum-101\" />\n          </h2>\n          <p>\n            <Translation id=\"page-what-is-ethereum-101-desc\" />\n          </p>\n          <p>\n            <strong>\n              <Translation id=\"page-what-is-ethereum-101-strong\" />\n              <i>\n                <Translation id=\"page-what-is-ethereum-101-italic\" />\n              </i>\n            </strong>\n          </p>\n          <p>\n            <Translation id=\"page-what-is-ethereum-101-desc-2\" />\n          </p>\n          <p>\n            <Translation id=\"page-what-is-ethereum-101-desc-3\" />\n          </p>\n          <p>\n            <Translation id=\"page-what-is-ethereum-101-desc-4\" />\n          </p>\n          <p>\n            <Translation id=\"page-what-is-ethereum-tryit\" />\n          </p>\n        </Column>\n        <CardColumn>\n          <SingleCard\n            emoji=\":gear:\"\n            title={translateMessageId(\n              \"page-what-is-ethereum-singlecard-title\",\n              intl\n            )}\n            description={translateMessageId(\n              \"page-what-is-ethereum-singlecard-desc\",\n              intl\n            )}\n          >\n            <Link to=\"/learn/\">\n              <Translation id=\"page-what-is-ethereum-singlecard-link\" />\n            </Link>\n          </SingleCard>\n        </CardColumn>\n      </TwoColumnContent>\n      <Content>\n        <Divider />\n        <ActionIntro>\n          <h2>\n            <Translation id=\"page-what-is-ethereum-try\" />\n          </h2>\n          <Subtitle>\n            <Translation id=\"page-what-is-ethereum-get-started\" />{\" \"}\n          </Subtitle>\n          <SubtitleTwo>\n            <Translation id=\"page-what-is-ethereum-adventure\" />\n          </SubtitleTwo>\n        </ActionIntro>\n        <ActionCardContainer>\n          {actions.map((action, idx) => (\n            <ActionCard\n              key={idx}\n              to={action.to}\n              alt={action.alt}\n              image={action.image}\n              title={action.title}\n              description={action.description}\n            />\n          ))}\n        </ActionCardContainer>\n      </Content>\n      <Content>\n        <ActionIntro>\n          <h2>\n            <Translation id=\"page-what-is-ethereum-use-cases-title\" />\n          </h2>\n          <Subtitle>\n            <Translation id=\"page-what-is-ethereum-use-cases-subtitle\" />\n          </Subtitle>\n          <SubtitleTwo>\n            <Translation id=\"page-what-is-ethereum-use-cases-subtitle-two\" />\n          </SubtitleTwo>\n        </ActionIntro>\n        <ActionCardContainer>\n          {usecases.map((usecase, idx) => (\n            <ActionCard\n              key={idx}\n              to={usecase.to}\n              alt={usecase.alt}\n              image={usecase.image}\n              title={usecase.title}\n              description={usecase.description}\n              isBottom={false}\n            />\n          ))}\n        </ActionCardContainer>\n      </Content>\n      <TwoColumnContent>\n        <Column>\n          <h2>\n            <Translation id=\"page-what-is-ethereum-explore\" />{\" \"}\n          </h2>\n        </Column>\n      </TwoColumnContent>\n      <Content>\n        <CardContainer>\n          <StyledCallout\n            image={getImage(data.developers)}\n            title={translateMessageId(\"page-what-is-ethereum-build\", intl)}\n            alt={translateMessageId(\"page-what-is-ethereum-alt-img-lego\", intl)}\n            description={translateMessageId(\n              \"page-what-is-ethereum-build-desc\",\n              intl\n            )}\n          >\n            <div>\n              <ButtonLink to=\"/developers/\">\n                <Translation id=\"page-what-is-ethereum-start-building-btn\" />\n              </ButtonLink>\n            </div>\n          </StyledCallout>\n          <StyledCallout\n            image={getImage(data.community)}\n            title={translateMessageId(\"page-what-is-ethereum-community\", intl)}\n            alt={translateMessageId(\"page-what-is-ethereum-alt-img-comm\", intl)}\n            description={translateMessageId(\n              \"page-what-is-ethereum-comm-desc\",\n              intl\n            )}\n          >\n            <div>\n              <ButtonLink to=\"/community/\">\n                <Translation id=\"page-what-is-ethereum-meet-comm\" />\n              </ButtonLink>\n            </div>\n          </StyledCallout>\n        </CardContainer>\n      </Content>\n    </Page>\n  )\n}\n\nexport default WhatIsEthereumPage\n\nexport const useCaseImage = graphql`\n  fragment useCaseImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        height: 260\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\nexport const actionCardImage = graphql`\n  fragment actionCardImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        width: 368\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\nexport const calloutImage = graphql`\n  fragment calloutImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        height: 200\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\n\nexport const query = graphql`\n  {\n    hero: file(relativePath: { eq: \"what-is-ethereum.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    ogImage: file(relativePath: { eq: \"what-is-ethereum.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    banner: file(relativePath: { eq: \"home/hero.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    dapps: file(relativePath: { eq: \"doge-computer.png\" }) {\n      ...actionCardImage\n    }\n    wallets: file(relativePath: { eq: \"wallet-cropped.png\" }) {\n      ...actionCardImage\n    }\n    eth: file(relativePath: { eq: \"eth.png\" }) {\n      ...actionCardImage\n    }\n    dao: file(relativePath: { eq: \"use-cases/dao-2.png\" }) {\n      ...useCaseImage\n    }\n    defi: file(relativePath: { eq: \"finance_transparent.png\" }) {\n      ...useCaseImage\n    }\n    nft: file(relativePath: { eq: \"infrastructure_transparent.png\" }) {\n      ...useCaseImage\n    }\n    developers: file(relativePath: { eq: \"developers-eth-blocks.png\" }) {\n      ...calloutImage\n    }\n    community: file(relativePath: { eq: \"enterprise.png\" }) {\n      ...calloutImage\n    }\n  }\n`\n"],"names":["Content","styled","Description","ChildrenContainer","ImageWrapper","props","isRight","isBottom","theme","colors","cardGradient","Title","Image","GatsbyImage","breakpoints","s","Card","Link","text","tableBackgroundHover","to","alt","image","title","description","children","className","isImageURL","includes","hideArrow","src","StyledCard","l","text200","supportedLanguages","Object","keys","languageMetadata","PageMetadata","meta","canonicalUrl","useStaticQuery","site","ogImageDefault","ogImageDevelopers","ogImageDapps","ogImageEthtwo","intl","useIntl","desc","translateMessageId","siteTitle","Location","pathname","location","canonicalPath","firstDirectory","split","canonical","siteMetadata","url","siteUrl","ogImage","getSrc","ogImageUrl","Helmet","htmlAttributes","lang","locale","titleTemplate","link","rel","key","href","name","content","property","author","concat","type","defaultProps","HeroContent","xl","Slogan","textTableOfContents","Subtitle","SubtitleTwo","text300","HeroContainer","m","Hero","Header","StyledGrayContatiner","GrayContainer","ActionCardContainer","CardContainer","Banner","BannerContainer","BannerMessage","ActionIntro","TwoColumnContent","Column","CardColumn","SingleCard","StyledCallout","Callout","cards","emoji","id","data","actions","getImage","eth","wallets","dapps","usecases","defi","nft","dao","images","fallback","hero","loading","map","card","idx","banner","action","usecase","developers","community"],"sourceRoot":""}