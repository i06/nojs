{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/bn/developers/tutorials/create-and-deploy-a-defi-app/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/create-and-deploy-a-defi-app/","readingTime":{"minutes":11.31}},"frontmatter":{"title":"Create and deploy a DeFi App","description":"Deposit ERC20 tokens to the smart contract and mint Farm Tokens","lang":"en","tags":["solidity","defi","web3.js","truffle","ganache","smart contracts"],"author":"strykerin","source":"github.com","sourceUrl":"https://github.com/strykerin/DeFi-Token-Farm","skill":"intermediate","published":"2020-12-31T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Create and deploy a DeFi App\",\n  \"description\": \"Deposit ERC20 tokens to the smart contract and mint Farm Tokens\",\n  \"author\": \"strykerin\",\n  \"tags\": [\"solidity\", \"defi\", \"web3.js\", \"truffle\", \"ganache\", \"smart contracts\"],\n  \"skill\": \"intermediate\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"published\": \"2020-12-31T00:00:00.000Z\",\n  \"source\": \"github.com\",\n  \"sourceUrl\": \"https://github.com/strykerin/DeFi-Token-Farm\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial we will build a DeFi Application with Solidity where users can deposit an ERC20 token to the smart contract and it will mint and transfer Farm Tokens to them. The users can later withdraw their ERC20 tokens by burning their Farm Token on smart contract and the ERC20 tokens will be transferred back to them.\"), mdx(\"h2\", {\n    \"id\": \"install-truffle-and-ganache\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#install-truffle-and-ganache\",\n    \"aria-label\": \"install truffle and ganache permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install Truffle and Ganache\"), mdx(\"p\", null, \"If this is the first time you are writing a smart contract, you will need to set up your environment. We are going to use two tools: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/\"\n  }, \"Truffle\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/ganache\"\n  }, \"Ganache\"), \".\"), mdx(\"p\", null, \"Truffle is a development environment and testing framework for developing smart contracts for Ethereum. With Truffle it is easy to build and deploy smart contracts to the blockchain. Ganache allows us to create a local Ethereum blockchain in order to test smart contracts. It simulates the features of the real network and the first 10 accounts are funded with 100 test ether, thus making the smart contract deployment and testing free and easy. Ganache is available as a desktop application and a command-line tool. For this article we will be using the UI desktop application.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2360/1*V1iQ5onbLbT5Ib2QaiOSyg.png\",\n    \"alt\": \"Ganache UI desktop application\"\n  }), mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ganache UI desktop application\")), mdx(\"p\", null, \"To create the project, run the following commands\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir your-project-name\\ncd your-project-name\\ntruffle init\\n\")), mdx(\"p\", null, \"This will create a blank project for the development and deployment of our smart contracts. The created project structure is the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contracts\"), \": Folder for the solidity smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrations\"), \": Folder for the deployment scripts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \": Folder for testing our smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle-config.js\"), \": Truffle configuration file\"))), mdx(\"h2\", {\n    \"id\": \"create-the-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-the-erc20-token\",\n    \"aria-label\": \"create the erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create the ERC20 Token\"), mdx(\"p\", null, \"First we need to create our ERC20 token that we will use to stake on the smart contract. To create our fungible token, we will first need to install the OpenZeppelin library. This library contains the implementations of standards such as the ERC20 and the ERC721. To install it, run the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install @openzeppelin/contracts\\n\")), mdx(\"p\", null, \"Using the OpenZeppelin library we can create our ERC20 token by writing to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contracts/MyToken.sol\"), \" with the following solidity code:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MyToken is ERC20 {\\n    constructor() public ERC20(\\\"MyToken\\\", \\\"MTKN\\\"){\\n        _mint(msg.sender, 1000000000000000000000000);\\n    }\\n}\\n\")), mdx(\"p\", null, \"In the code above on:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 3: We import the contract ERC20.sol from openzeppelin that contains the implementation for this token standard.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 5: We inherit from the ERC20.sol contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 6: We are calling the ERC20.sol constructor and passing for the name and symbol parameters as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"MyToken\\\"\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"MTKN\\\"\"), \" respectively.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 7: We are minting and transferring 1 million tokens for the account that is deploying the smart contract (we are using the default 18 decimals for the ERC20 token, that means that if we want to mint 1 token, you will represent it as 1000000000000000000, 1 with 18 zeros).\"))), mdx(\"p\", null, \"We can see below the ERC20.sol constructor implementation where the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_decimals\"), \" field is set to 18:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"string private _name;\\nstring private _symbol;\\nuint8 private _decimals;\\n\\nconstructor (string memory name_, string memory symbol_) public {\\n    _name = name_;\\n    _symbol = symbol_;\\n    _decimals = 18;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compile-the-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#compile-the-erc20-token\",\n    \"aria-label\": \"compile the erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Compile the ERC20 Token\"), mdx(\"p\", null, \"To compile our smart contract, we must first check our solidity compiler version. You can check that by running the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle version\\n\")), mdx(\"p\", null, \"The default version is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Solidity v0.5.16\"), \". Since our token is written using the solidity version \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.6.2\"), \", if we run the command to compile our contracts we will get a compiler error. In order to specify which solidity compiler version to use, go to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle-config.js\"), \" and set to the desired compiler version as seen below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"// Configure your compilers\\ncompilers: {\\n  solc: {\\n    version: \\\"^0.8.0\\\",    // Fetch exact version from solc-bin (default: truffle's version)\\n    // docker: true,        // Use \\\"0.5.1\\\" you've installed locally with docker (default: false)\\n    // settings: {          // See the solidity docs for advice about optimization and evmVersion\\n    //  optimizer: {\\n    //    enabled: false,\\n    //    runs: 200\\n    //  },\\n    //  evmVersion: \\\"byzantium\\\"\\n    // }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now we can compile our smart contract by running the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle compile\\n\")), mdx(\"h2\", {\n    \"id\": \"deploy-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#deploy-erc20-token\",\n    \"aria-label\": \"deploy erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Deploy ERC20 Token\"), mdx(\"p\", null, \"After compiling, we can now deploy our token.\"), mdx(\"p\", null, \"On the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrations\"), \" folder, create a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2_deploy_Tokens.js\"), \". This file is where we will deploy both our ERC20 Token and our FarmToken smart contract. The code below is used to deploy our MyToken.sol contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\n\\nmodule.exports = async function (deployer, network, accounts) {\\n  // Deploy MyToken\\n  await deployer.deploy(MyToken)\\n  const myToken = await MyToken.deployed()\\n}\\n\")), mdx(\"p\", null, \"Open Ganache and select the option \\\"Quickstart\\\" to start a local Ethereum blockchain. To deploy our contract, run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle migrate\\n\")), mdx(\"p\", null, \"The address used to deploy our contracts is the first one from the list of addresses that Ganache shows us. To verify that, we can open the Ganache desktop application and we can verify that the balance of ether for the first account has been reduced due to the cost of ether to deploy our smart contracts:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2346/1*1iJ9VRlyLuza58HL3DLfpg.png\",\n    \"alt\": \"Ganache desktop application\"\n  }), mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ganache desktop application\")), mdx(\"p\", null, \"To verify that 1 million MyToken tokens have been sent to the deployer address, we can use the Truffle Console to interact with our deployed smart contract.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/docs/truffle/getting-started/using-truffle-develop-and-the-console\"\n  }, \"Truffle Console is a a basic interactive console connecting to any Ethereum client.\"))), mdx(\"p\", null, \"In order to interact with our smart contract, run the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle console\\n\")), mdx(\"p\", null, \"Now we can write the following commands in the terminal:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the smart contract: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"myToken = await MyToken.deployed()\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the array of accounts from Ganache: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accounts = await web3.eth.getAccounts()\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the balance for the first account: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance = await myToken.balanceOf(accounts[0])\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Format the balance from 18 decimals: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"web3.utils.fromWei(balance.toString())\")))), mdx(\"p\", null, \"By running the commands above, we will see that the first address has in fact 1 million MyTokens:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*AQlj9A7dw-qtY4QAD3Bpxw.png\",\n    \"alt\": \"First address has 1000000 MyTokens\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"First address has 1000000 MyTokens\")), mdx(\"h2\", {\n    \"id\": \"create-farmtoken-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-farmtoken-smart-contract\",\n    \"aria-label\": \"create farmtoken smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create FarmToken Smart Contract\"), mdx(\"p\", null, \"The FarmToken smart contract will have 3 functions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance()\"), \": Get the MyToken balance on the FarmToken smart contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \": Transfer MyToken on behalf of the user to the FarmToken smart contract then mint and transfer FarmToken to the user.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withdraw(uint256 _amount)\"), \": Burn user's FarmTokens and transfer MyTokens to the user's address.\"))), mdx(\"p\", null, \"Let's look at the FarmToken constructor:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract FarmToken is ERC20 {\\n    using Address for address;\\n    using SafeMath for uint256; // As of Solidity v0.8.0, mathematical operations can be done safely without the need for SafeMath\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public token;\\n\\n    constructor(address _token)\\n        public\\n        ERC20(\\\"FarmToken\\\", \\\"FRM\\\")\\n    {\\n        token = IERC20(_token);\\n    }\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lines 3-6: We are importing the following contracts from openzeppelin: IERC20.sol, Address.sol, SafeERC20.sol and ERC20.sol.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 8: The FarmToken will inherit from the ERC20 contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lines 14-19: The FarmToken constructor will receive as parameter the address of MyToken contract and we will assign its contract to our public variable called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \".\"))), mdx(\"p\", null, \"Let's implement the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance()\"), \" function. It will receive no parameters and it will return the balance of MyToken on this smart contract. It is implemented as shown below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function balance() public view returns (uint256) {\\n    return token.balanceOf(address(this));\\n}\\n\")), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \" function, it will receive as parameter the amount the user wants to deposit and it will mint and transfer FarmTokens to the user:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function deposit(uint256 _amount) public {\\n    // Amount must be greater than zero\\n    require(_amount > 0, \\\"amount cannot be 0\\\");\\n\\n    // Transfer MyToken to smart contract\\n    token.safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    // Mint FarmToken to msg sender\\n    _mint(msg.sender, _amount);\\n}\\n\")), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withdraw(uint256 _amount)\"), \" function, we will receive as parameter the amount of FarmTokens the user wants to burn and then transfer the same amount of MyTokens back to the user:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function withdraw(uint256 _amount) public {\\n    // Burn FarmTokens from msg sender\\n    _burn(msg.sender, _amount);\\n\\n    // Transfer MyTokens from this smart contract to msg sender\\n    token.safeTransfer(msg.sender, _amount);\\n}\\n\")), mdx(\"p\", null, \"Now we will deploy our smart contract. To do so, we will go back to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2_deploy_Tokens.js\"), \" and add the new contract to be deployed:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (deployer, network, accounts) {\\n  // Deploy MyToken\\n  await deployer.deploy(MyToken)\\n  const myToken = await MyToken.deployed()\\n\\n  // Deploy Farm Token\\n  await deployer.deploy(FarmToken, myToken.address)\\n  const farmToken = await FarmToken.deployed()\\n}\\n\")), mdx(\"p\", null, \"Note that when deploying the FarmToken, we pass as parameter the address of the deployed MyToken contract.\"), mdx(\"p\", null, \"Now, run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle compile\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle migrate\"), \" to deploy our contracts.\"), mdx(\"p\", null, \"Let's test our smart contract. Instead of using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle console\"), \" to interact with our smart contract, we will create a script to automate this process. Create a folder called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scripts\"), \" and add the following file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getMyTokenBalance.js\"), \". It will check the balance of MyTokens on the FarmToken smart contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  myToken = await MyToken.deployed()\\n  farmToken = await FarmToken.deployed()\\n  balance = await myToken.balanceOf(farmToken.address)\\n  console.log(web3.utils.fromWei(balance.toString()))\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To execute this script, run the following cli command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle exec .\\\\scripts\\\\getMyTokenBalance.js\\n\")), mdx(\"p\", null, \"We will get the expected result that is 0. If you get an error about the FarmToken not being deployed yet, the truffle network has not received the latest version of your contract code. Just close truffle, quickstart it again and make sure to run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle migrate\"), \".\"), mdx(\"p\", null, \"Now, let's stake the MyToken to the smart contract. Since the function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \" calls the function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"safeTransferFrom\"), \" from the ERC20, the user must first approve the smart contract to transfer MyToken on the user's behalf. So on the script below, we will first approve this step then we will call the function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  const accounts = await new web3.eth.getAccounts()\\n  const myToken = await MyToken.deployed()\\n  const farmToken = await FarmToken.deployed()\\n\\n  // Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom.\\n  // This is zero by default.\\n  const allowanceBefore = await myToken.allowance(\\n    accounts[0],\\n    farmToken.address\\n  )\\n  console.log(\\n    \\\"Amount of MyToken FarmToken is allowed to transfer on our behalf Before: \\\" +\\n      allowanceBefore.toString()\\n  )\\n\\n  // In order to allow the Smart Contract to transfer to MyToken (ERC-20) on the accounts[0] behalf,\\n  // we must explicitly allow it.\\n  // We allow farmToken to transfer x amount of MyToken on our behalf\\n  await myToken.approve(farmToken.address, web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n\\n  // Validate that the farmToken can now move x amount of MyToken on our behalf\\n  const allowanceAfter = await myToken.allowance(accounts[0], farmToken.address)\\n  console.log(\\n    \\\"Amount of MyToken FarmToken is allowed to transfer on our behalf After: \\\" +\\n      allowanceAfter.toString()\\n  )\\n\\n  // Verify accounts[0] and farmToken balance of MyToken before and after the transfer\\n  balanceMyTokenBeforeAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenBeforeFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\\"*** My Token ***\\\")\\n  console.log(\\n    \\\"Balance MyToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenBeforeAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenBeforeFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeFarmToken.toString())\\n  )\\n  // Call Deposit function from FarmToken\\n  console.log(\\\"Call Deposit Function\\\")\\n  await farmToken.deposit(web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n  console.log(\\\"*** My Token ***\\\")\\n  balanceMyTokenAfterAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenAfterFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance MyToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenAfterAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenAfterFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterFarmToken.toString())\\n  )\\n\\n  // End function\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To run this script: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle exec .\\\\scripts\\\\transferMyTokenToFarmToken.js\"), \". You should see on your console:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*MoekE2QCw7vB98u5dl7ang.png\",\n    \"alt\": \"output of transferMyTokenToFarmToken.js\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output of transferMyTokenToFarmToken.js\")), mdx(\"p\", null, \"As we can see, we have successfully deposited MyTokens to the smart contract as the first account has now FarmTokens.\"), mdx(\"p\", null, \"In order to withdraw:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  const accounts = await new web3.eth.getAccounts()\\n  const myToken = await MyToken.deployed()\\n  const farmToken = await FarmToken.deployed()\\n\\n  // Verify accounts[0] and farmToken balance of MyToken before and after the transfer\\n  balanceMyTokenBeforeAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenBeforeFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\\"*** My Token ***\\\")\\n  console.log(\\n    \\\"Balance MyToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenBeforeAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenBeforeFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeFarmToken.toString())\\n  )\\n\\n  // Call Deposit function from FarmToken\\n  console.log(\\\"Call Withdraw Function\\\")\\n  await farmToken.withdraw(web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n\\n  console.log(\\\"*** My Token ***\\\")\\n  balanceMyTokenAfterAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenAfterFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance MyToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenAfterAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenAfterFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterFarmToken.toString())\\n  )\\n\\n  // End function\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To run this script: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle exec .\\\\scripts\\\\withdrawMyTokenFromTokenFarm.js\"), \". As we can see on the output below, we have successfully got the MyTokens back and we have burned the FarmTokens:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*jHYlTFg0NgGbhASpsRvc0w.png\",\n    \"alt\": \"output of withdrawMyTokenFromTokenFarm.js\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output of withdrawMyTokenFromTokenFarm.js\")), mdx(\"h2\", {\n    \"id\": \"references\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"References\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openzeppelin.com/contracts/3.x/\"\n  }, \"Contracts - OpenZeppelin Docs\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/\"\n  }, \"Sweet Tools for Smart Contracts | Truffle Suite\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/ganache\"\n  }, \"Ganache | Truffle Suite\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://99bitcoins.com/what-is-defi/\"\n  }, \"What is DeFi? A Beginner's Guide (2021 Updated) (99bitcoins.com)\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://defipulse.com/\"\n  }, \"DeFi - The Decentralized Finance Leaderboard at DeFi Pulse\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#install-truffle-and-ganache-install-truffle-and-ganache","title":"Install Truffle and Ganache {#install-truffle-and-ganache}"},{"url":"#create-the-erc20-token-create-the-erc20-token","title":"Create the ERC20 Token {#create-the-erc20-token}"},{"url":"#compile-the-erc20-token-compile-the-erc20-token","title":"Compile the ERC20 Token {#compile-the-erc20-token}"},{"url":"#deploy-erc20-token-deploy-erc20-token","title":"Deploy ERC20 Token {#deploy-erc20-token}"},{"url":"#create-farmtoken-smart-contract-create-farmtoken-smart-contract","title":"Create FarmToken Smart Contract {#create-farmtoken-smart-contract}"},{"url":"#references-references","title":"References {#references}"}]}}},"pageContext":{"slug":"/bn/developers/tutorials/create-and-deploy-a-defi-app/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/create-and-deploy-a-defi-app/index.md","intl":{"language":"bn","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"about-ethereum-org":"ethereum.org সম্বন্ধে","about-us":"আমাদের সম্পর্কে","brand-assets":"ব্র্যান্ড সম্পদ","community":"কমিউনিটি","contact":"যোগাযোগ","contributing":"অবদান রাখছে","cookie-policy":"কুকি বিষয়ক নীতি","decentralized-applications-dapps":"বিকেন্দ্রীভূত অ্যাপ্লিকেশন (dapps)","developers":"ডেভেলপার","developers-home":"ডেভেলপার-এর হোম","documentation":"নথিপত্র","ef-blog":"ইথেরিয়াম ফাউন্ডেশন ব্লগ","eips":"ইথেরিয়াম উন্নয়নের প্রস্তাব","enterprise":"উদ্যোগ এবং উদ্যোগতা","ethereum":"ইথেরিয়াম","ethereum-2-0":"ইথেরিয়াম 2.0","ethereum-brand-assets":"ইথেরিয়াম ব্র্যান্ড সম্পদ","ethereum-community":"ইথেরিয়াম কমিউনিটি","ethereum-glossary":"ইথেরিয়াম শব্দকোষ","ethereum-wallets":"ইথেরিয়াম ওয়ালেট","ethereum-whitepaper":"ইথেরিয়াম শ্বেতপত্র","get-eth":"ETH নিন","get-started":"শুরু করা যাক","guides-and-resources":"নির্দেশিকা ও সংস্থান","how-ethereum-works":"ইথেরিয়াম কীভাবে কাজ করে","individuals":"ব্যক্তি","individuals-menu":"ব্যক্তির মেনু","language-support":"ভাষা সহায়তা","languages":"ভাষা","learn":"শিখুন","learn-by-coding":"কোডিং-এর সাহায্যে শিখুন","learn-more":"আরও জানুন","mainnet-ethereum":"মেইননেট ইথেরিয়াম","nav-beginners":"শিক্ষানবিশ","page-404-copy":"আপনি যা সন্ধান করছেন তা খুঁজে পেতে বা হোমে ফিরতে অনুগ্রহ করে ওপরের সার্চ বক্সটি ব্যবহার করুন।","page-404-not-found":"পাওয়া যায় নি","page-enterprise":"এন্টারপ্রাইজ","page-index":"ইথেরিয়াম","page-index-section-beginners-item-one":"ইথেরিয়ামে সম্পূর্ণ নতুন?","page-index-section-beginners-item-three":"আমার  কেন দরকার ?","page-index-section-beginners-item-two":"ইথেরিয়াম কী?","page-index-section-beginners-title":"শিক্ষানবিশ","page-index-section-developers-item-one":"শুরু করার গাইডসমূহ","page-index-section-developers-item-three":"নবীনতম ডেভেলপার টুল","page-index-section-developers-item-two":"আধুনিক চুক্তি প্রোগ্রাম করতে শিখুন","page-index-section-developers-title":"ডেভেলপারদের জন্য","page-index-section-enterprise-item-one":"এন্টারপ্রাইজ ইথেরিয়াম কেন প্রয়োজন ?","page-index-section-enterprise-item-three":"এন্টারপ্রাইজ ডেভেলপারকারী সম্প্রদায়","page-index-section-enterprise-item-two":"এন্টারপ্রাইজ বৈশিষ্ট্য","page-index-section-enterprise-title":"প্রতিষ্ঠানের জন্য","page-index-section-individuals-item-one":"ইথেরিয়াম কী?","page-index-section-individuals-item-three":"নির্দেশিকা ও সংস্থান","page-index-section-individuals-item-two":"ইথেরিয়াম ব্যবহার করুন","page-index-section-individuals-title":"ব্যক্তিদের জন্য","page-index-section-learn-item-one":"আরম্ভকারীর কর্মসম্পদ","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"আমি ইথেরিয়ামের দ্বারা কী করতে পারি?","page-index-section-use-item-three":"ওয়ালেট কী?","page-index-section-use-item-two":"কিভাবে আমি ইথার পেতে পারি?","page-index-section-use-title":"ব্যবহার","page-last-updated":"শেষ পাতাটি আপডেট করা হয়েছে","page-learning-tools-consensys-academy-description":"অনলাইন ইথেরিয়াম ডেভেলপার বুটক্যাম্প","page-learning-tools-cryptozombies-description":"আপনার নিজস্ব জম্বি গেম তৈরি করে সলিডিটি শিখুন","page-learning-tools-ethernauts-description":"স্মার্ট কন্ট্র্যাক্ট হ্যাক করার দ্বারা স্তরগুলি সম্পূর্ণ করুন","privacy-policy":"গোপনীয়তার নীতি","private-ethereum":"প্রাইভেট ইথেরিয়াম","search":"অনুসন্ধান করুন","set-up-local-env":"স্থানীয় পরিবেশ সেট আপ করুন","stablecoins":"স্টেবলকয়েন","terms-of-use":"ব্যবহারের শর্তাবলী","translation-banner-body-new":"আপনি এই পাতাটি ইংরেজিতে দেখছেন কারণ আমরা এখনও এটি অনুবাদ করি নি। আমাদেরকে এই বিষয়বস্তু অনুবাদে সাহায্য করুন।","translation-banner-body-update":"এই পাতাটির একটি নতুন সংস্করণ আছে, কিন্তু এটি এই মুহূর্তে শুধুমাত্র ইংরেজিতে আছে। আমাদেরকে নবীনতম সংস্করণটি অনুবাদ করতে সাহায্য করুন।","translation-banner-button-join-translation-program":"অনুবাদ কর্মসূচিতে যোগ দিন","translation-banner-button-learn-more":"আরও জানুন","translation-banner-button-see-english":"ইংরেজি দেখুন","translation-banner-button-translate-page":"পাতাটি অনুবাদ করুন","translation-banner-title-new":"এই পাতাটি অনুবাদে সাহায্য করুন","translation-banner-title-update":"এই পাতাটি আপডেট করতে সাহায্য করুন","tutorials":"টিউটোরিয়াল","use":"ব্যবহার","use-ethereum":"ইথেরিয়াম ব্যবহার করুন","website-last-updated":"ওয়েবসাইট আপডেট করা হয়েছে","what-is-ether":"ইথার (ETH) কী?","what-is-ethereum":"ইথেরিয়াম কী?","page-developer-meta-title":"ইথেরিয়াম ডেভেলপার রিসোর্স","page-developers-about":"এই ডেভেলপার রিসোর্স সম্বন্ধে","page-developers-about-desc":"ভিত্তিমূলক ধারণাগুলির ওপরে ডকুমেন্টেশন এবং ডেভেলপমেন্ট স্ট্যাক সহ ইথেরিয়াম-এর সাথে বিল্ড করতে আপনাকে সাহায্য করার জন্য ethereum.org এখানে আছে। তাছাড়া আপনাকে আপনাকে এগিয়ে যেতে সাহায্য করার জন্য এখানে টিউটোরিয়ালও আছে।","page-developers-about-desc-2":"Mozilla Developer Network দ্বারা অনুপ্রাণিত হয়ে আমরা ভেবেছিলাম যে চমৎকার ডেভেলপার বিষয়বস্তু ও রিসোর্সকে স্থান দেওয়ার জন্য ইথেরিয়াম-এর একটি স্থান প্রয়োজন ছিল। Mozilla-এ আমাদের বন্ধুদের মত, এখানে সব কিছুই ওপেন-সোর্স এবং আপনার দ্বারা প্রসারণ ও উন্নয়নের জন্য প্রস্তুত।","page-developers-account-desc":"নেটওয়ার্কে কন্ট্র্যাক্ট বা ব্যক্তি","page-developers-accounts-link":"অ্যাকাউন্ট","page-developers-advanced":"উন্নত","page-developers-api-desc":"স্মার্ট কন্ট্র্যাক্ট-এর সাথে ইন্টার‍্যাক্ট করার জন্য লাইব্রেরিগুলিকে ব্যবহার করা","page-developers-api-link":"ব্যাকএন্ড এপিআইস","page-developers-aria-label":"ডেভেলপারদের মেনু","page-developers-block-desc":"ব্লকচেইনে যোগ করা লেনদেনগুলির ব্যাচ","page-developers-block-explorers-desc":"ইথেরিয়াম ডেটায় আপনার পোর্টাল","page-developers-block-explorers-link":"ব্লক এক্সপ্লোরার","page-developers-blocks-link":"ব্লক","page-developers-browse-tutorials":"টিউটোরিয়ালগুলি ব্রাউজ করুন","page-developers-choose-stack":"আপনার স্ট্যাক চয়ন করুন","page-developers-contribute":"অবদান রাখুন","page-developers-dev-env-desc":"যে IDE-গুলি ড্যাপ ডেভেলপমেন্টের জন্য উপযুক্ত","page-developers-dev-env-link":"ডেভেলপমেন্টের পরিবেশ","page-developers-discord":"ডিসকর্ড-এ যোগাদান করুন","page-developers-docs-introductions":"পরিচিতি","page-developers-evm-desc":"যে কম্পিউটার লেনদেনগুলিকে প্রক্রিয়া করে","page-developers-evm-link":"ইথেরিয়াম ভার্চুয়াল মেশিন (EVM)","page-developers-explore-documentation":"নথিপত্র অন্বেষণ করুন","page-developers-feedback":"আপনার কোনো প্রতিক্রিয়া থাকলে, একটি GitHub ইস্যুর মাধ্যমে অথবা আমাদের ডিসকর্ড সার্ভারে আমাদের সঙ্গে যোগাযোগ করুন।","page-developers-frameworks-desc":"ডেভেলপমেন্টের গতি বাড়াতে সাহায্য করার জন্য টুলস","page-developers-frameworks-link":"ডেভেলপমেন্ট ফ্রেমওয়ার্ক","page-developers-fundamentals":"মৌলিক বিষয়","page-developers-gas-desc":"লেনদেনগুলিকে চালনা করার জন্য প্রয়োজনীয় ইথার","page-developers-gas-link":"গ্যাস","page-developers-get-started":"আপনি কীভাবে শুরু করতে চাইবেন?","page-developers-improve-ethereum":"ethereum.org এর উন্নতি করতে আমাদের সাহায্য করুন","page-developers-improve-ethereum-desc":"ethereum.org এর মত, এই নথিগুলিও কমিউনিটির প্রচেষ্টা। আপনি কোনো ভুল, উন্নয়নের পরিসর বা ইথেরিয়াম ডেভেলপারদের সাহায্য করার নতুন সুযোগ দেখতে পেলে একটি PR তৈরি করুন।","page-developers-into-eth-desc":"ব্লকচেইন ও ইথেরিয়াম-এর একটি ভূমিকা","page-developers-intro-dapps-desc":"বিকেন্দ্রীভূত প্রয়োগগুলির একটি ভূমিকা","page-developers-intro-dapps-link":"ড্যাপস-এর ভূমিকা","page-developers-intro-eth-link":"ইথেরিয়াম-এর ভূমিকা","page-developers-intro-stack":"স্ট্যাকের ভূমিকা","page-developers-intro-stack-desc":"ইথেরিয়াম স্ট্যাকের একটি ভূমিকা","page-developers-js-libraries-desc":"স্মার্ট কন্ট্র্যাক্ট-এর সাথে ইন্টার‍্যাক্ট করার জন্য জাভাস্ক্রিপ্ট ব্যবহার করা","page-developers-js-libraries-link":"জাভাস্ক্রিপ্ট লাইব্রেরি","page-developers-language-desc":"পরিচিত ল্যাঙ্গুয়েজগুলির সঙ্গে ইথেরিয়াম ব্যবহার করা","page-developers-languages":"প্রোগ্রামিং ল্যাঙ্গুয়েজ","page-developers-learn":"ইথেরিয়াম ডেভেলপমেন্ট শিখুন","page-developers-learn-desc":"মূল ধারণা ও ইথেরিয়াম স্ট্যাক সম্বন্ধে আমাদের নথিগুলির সাথে পড়ুন","page-developers-learn-tutorials":"টিউটোরিয়ালের মাধ্যমে শিখুন","page-developers-learn-tutorials-cta":"টিউটোরিয়াল দেখুন","page-developers-learn-tutorials-desc":"যে বিল্ডারররা ইতিমধ্যেই এটা করেছেন তাদের থেকে ধাপে ধাপে ইথেরিয়াম ডেভেলপমেন্ট শিখুন।","page-developers-meta-desc":"ইথেরিয়াম-এ নির্মাণকারী ডেভেলপারদের জন্য নথিপত্র, টিউটোরিয়াল এবং টুলস।","page-developers-mining-desc":"কীভাবে নতুন ব্লক তৈরি করা হয় এবং সর্বসম্মতিতে পৌঁছানো হয়","page-developers-mining-link":"মাইনিং","page-developers-networks-desc":"মেইননেট এবং টেস্ট নেটওয়ার্কগুলির একটি সংক্ষিপ্ত বিবরণ","page-developers-networks-link":"নেটওয়ার্ক","page-developers-node-clients-desc":"নেটওয়ার্কে কীভাবে ব্লক ও লেনদেনগুলির সত্যতা যাচাই করা হয়","page-developers-node-clients-link":"নোড ও ক্লায়েন্ট","page-developers-oracle-desc":"আপনার স্মার্ট কন্ট্র্যাক্ট-এর মধ্যে অফ-চেইন ডেটা প্রবেশ করানো","page-developers-oracles-link":"ওরাকেলস","page-developers-play-code":"কোড নিয়ে খেলুন","page-developers-read-docs":"নথিগুলি পড়ুন","page-developers-scaling-desc":"দ্রুততর লেনদেনের জন্য সমাধান","page-developers-scaling-link":"স্কেলিং","page-developers-smart-contract-security-desc":"ডেভেলপমেন্টের সময়ে বিবেচনা করার জন্য সুরক্ষা ব্যবস্থা","page-developers-smart-contract-security-link":"নিরাপত্তা","page-developers-set-up":"স্থানীয় পরিবেশ সেট আপ করুন","page-developers-setup-desc":"একটি ডেভেলপমেন্ট এনভায়রনমেন্ট কনফিগার করে আপনার স্ট্যাককে বিল্ড করার জন্য প্রস্তুত করুন।","page-developers-smart-contracts-desc":"ড্যাপস-এর পিছনে যুক্তি - সেলফ-এক্সিকিউটিং এগ্রিমেন্ট","page-developers-smart-contracts-link":"স্মার্ট কন্ট্র্যাক্ট","page-developers-stack":"স্ট্যাক","page-developers-start":"পরীক্ষানিরীক্ষা শুরু করুন","page-developers-start-desc":"প্রথমে পরীক্ষানিরীক্ষা করতে চান আর পরে প্রশ্ন জিজ্ঞাসা করতে চান?","page-developers-storage-desc":"কীভাবে ড্যাপ স্টোরেজ পরিচালনা করতে হয়","page-developers-storage-link":"সংগ্রহস্থল","page-developers-subtitle":"ইথেরিয়াম-এর জন্য একটি বিল্ডারদের নির্দেশপুস্তিকা। বিল্ডারদের দ্বারা, বিল্ডারদের জন্য।","page-developers-title-1":"ইথেরিয়াম","page-developers-title-2":"ডেভেলপার","page-developers-title-3":"রিসোর্স","page-developers-token-standards-desc":"স্বীকৃত টোকেন স্ট্যান্ডার্ডগুলির একটি সংক্ষিপ্ত বিবরণ","page-developers-token-standards-link":"টোকেন স্ট্যান্ডার্ড","page-developers-transactions-desc":"ইথেরিয়াম-এর অবস্থা যেভাবে পরিবর্তিত হয়","page-developers-transactions-link":"লেনদেনসমূহ","page-developers-web3-desc":"web3 ডেভেলপমেন্টের বিশ্ব কীভাবে আলাদা","page-developers-web3-link":"Web2 বনাম Web3","page-index-hero-image-alt":"ethereum.org হিরো চিত্র","page-index-meta-description":"ইথেরিয়াম হল অর্থ এবং নতুন ধরনের অ্যাপ্লিকেশনগুলির জন্য একটি বিশ্বজনীন, বিকেন্দ্রীভূত প্ল্যাটফর্ম। ইথেরিয়াম-এ আপনি কোড লিখতে পারেন যা অর্থ নিয়ন্ত্রণ করে, এবং বিশ্বের যে কোনো জায়গা থেকে প্রবেশগম্য অ্যাপ্লিকেশন নির্মাণ করে।","page-index-meta-title":"হোম","page-index-sections-developers-desc":"ইথেরিয়াম-এর পশ্চাতে থাকা প্রযুক্তি এবং তার প্রয়োগগুলির সম্বন্ধে শিখুন, যাতে আমরা এর সাহায্যে বিল্ড করা শুরু করতে পারেন।","page-index-sections-developers-image-alt":"লেগো ব্রিক দিয়ে একটি ইথেরিয়াম গ্লিফ নির্মাণকারী একটি হাতের চিত্র","page-index-sections-developers-link-text":"বিল্ড করা শুরু করুন","page-index-sections-developers-title":"ডেভেলপার","page-index-sections-enterprise-desc":"ইথেরিয়াম কীভাবে নতুন ব্যবসার মডেল উন্মুক্ত করে দিতে পারে, আপনার খরচ কমাতে পারে এবং আপনার ব্যবসাকে ভবিষ্যতের জন্য সুরক্ষিত করতে পারে তা দেখুন।","page-index-sections-enterprise-image-alt":"একটি ল্যাপটপের আশেপাশে ইথেরিয়াম প্রোজেক্টে কর্মরত একটি দলের চিত্র","page-index-sections-enterprise-link-text":"এন্টারপ্রাইজের জন্য ইথেরিয়াম","page-index-sections-enterprise-title":"এন্টারপ্রাইজ","page-index-sections-individuals-desc":"ইথেরিয়াম, ইথার, ওয়ালেট, টোকেন এবং আরও অনেক কিছু সম্বন্ধে জানুন যাতে আপনি ইথেরিয়াম অ্যাপ্লিকেশনগুলি ব্যবহার করা শুরু করতে পারেন।","page-index-sections-individuals-image-alt":"কম্পিউটারে বসে থাকা ডগ কুকুরের চিত্র","page-index-sections-individuals-link-text":"ইথেরিয়াম দিয়ে শুরু করুন","page-index-sections-individuals-title":"ইথেরিয়াম সম্বন্ধে","page-index-subtitle":"ইথেরিয়ামে, আপনি এমন কোড লিখতে পারেন যা ডিজিটাল মান নিয়ন্ত্রণ করে, প্রোগ্রামের মতো ঠিক চালায় এবং বিশ্বের যে কোনও জায়গায় অ্যাক্সেসযোগ্য।","page-index-title":"ইথেরিয়াম বিকেন্দ্রীভূত অ্যাপ্লিকেশনগুলির জন্য একটি সার্বজনীন, ওপেন সোর্স প্ল্যাটফর্ম।"},"routed":true,"originalPath":"/developers/tutorials/create-and-deploy-a-defi-app/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}