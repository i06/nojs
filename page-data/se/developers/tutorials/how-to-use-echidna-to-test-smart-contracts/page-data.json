{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/se/developers/tutorials/how-to-use-echidna-to-test-smart-contracts/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/how-to-use-echidna-to-test-smart-contracts/","readingTime":{"minutes":13.27}},"frontmatter":{"title":"How to use Echidna to test smart contracts","description":"How to use Echidna to automatically test smart contracts","lang":"en","tags":["solidity","smart contracts","security","testing","fuzzing"],"author":"Trailofbits","source":"Building secure contracts","sourceUrl":"https://github.com/crytic/building-secure-contracts/tree/master/program-analysis/echidna","skill":"advanced","published":"2020-04-10T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to use Echidna to test smart contracts\",\n  \"description\": \"How to use Echidna to automatically test smart contracts\",\n  \"author\": \"Trailofbits\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"tags\": [\"solidity\", \"smart contracts\", \"security\", \"testing\", \"fuzzing\"],\n  \"skill\": \"advanced\",\n  \"published\": \"2020-04-10T00:00:00.000Z\",\n  \"source\": \"Building secure contracts\",\n  \"sourceUrl\": \"https://github.com/crytic/building-secure-contracts/tree/master/program-analysis/echidna\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"installation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#installation\",\n    \"aria-label\": \"installation permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Installation\"), mdx(\"p\", null, \"Echidna can be installed through docker or using the pre-compiled binary.\"), mdx(\"h3\", {\n    \"id\": \"echidna-through-docker\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#echidna-through-docker\",\n    \"aria-label\": \"echidna through docker permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Echidna through docker\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"docker pull trailofbits/eth-security-toolbox\\ndocker run -it -v \\\"$PWD\\\":/home/training trailofbits/eth-security-toolbox\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"The last command runs eth-security-toolbox in a docker that has access to your current directory. You can change the files from your host, and run the tools on the files from the docker\")), mdx(\"p\", null, \"Inside docker, run :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"solc-select 0.5.11\\ncd /home/training\\n\")), mdx(\"h3\", {\n    \"id\": \"binary\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#binary\",\n    \"aria-label\": \"binary permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Binary\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/crytic/echidna/releases/tag/v1.4.0.0\"\n  }, \"https://github.com/crytic/echidna/releases/tag/v1.4.0.0\")), mdx(\"h2\", {\n    \"id\": \"introduction-to-property-based-fuzzing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#introduction-to-property-based-fuzzing\",\n    \"aria-label\": \"introduction to property based fuzzing permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Introduction to property-based fuzzing\"), mdx(\"p\", null, \"Echidna is a property-based fuzzer, we described in our previous blogposts (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.trailofbits.com/2018/03/09/echidna-a-smart-fuzzer-for-ethereum/\"\n  }, \"1\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.trailofbits.com/2018/05/03/state-machine-testing-with-echidna/\"\n  }, \"2\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.trailofbits.com/2020/03/30/an-echidna-for-all-seasons/\"\n  }, \"3\"), \").\"), mdx(\"h3\", {\n    \"id\": \"fuzzing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#fuzzing\",\n    \"aria-label\": \"fuzzing permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Fuzzing\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Fuzzing\"\n  }, \"Fuzzing\"), \" is a well-known technique in the security community. It consists to generate more or less randomly inputs to find bugs in the program. Fuzzers for traditional software (such as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://lcamtuf.coredump.cx/afl/\"\n  }, \"AFL\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://llvm.org/docs/LibFuzzer.html\"\n  }, \"LibFuzzer\"), \") are known to be efficient tools to find bugs.\"), mdx(\"p\", null, \"Beyond the purely random generation of inputs, there are many techniques and strategies to generate good inputs, including:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Obtain feedback from each execution and guide generation using it. For example, if a newly generated input leads to the discovery of a new path, it can make sense to generate new inputs closes to it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generating the input respecting a structural constraint. For example, if your input contains a header with a checksum, it will make sense to let the fuzzer generates input validating the checksum.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using known inputs to generate new inputs: if you have access to a large dataset of valid input, your fuzzer can generate new inputs from them, rather than starting from scratch its generation. These are usually called \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"seeds\"), \".\")), mdx(\"h3\", {\n    \"id\": \"property-based-fuzzing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#property-based-fuzzing\",\n    \"aria-label\": \"property based fuzzing permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Property-based fuzzing\"), mdx(\"p\", null, \"Echidna belongs to a specific family of fuzzer: property-based fuzzing heavily inspired by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/QuickCheck\"\n  }, \"QuickCheck\"), \". In contrast to classic fuzzer that will try to find crashes, Echidna will try to break user-defined invariants.\"), mdx(\"p\", null, \"In smart contracts, invariants are Solidity functions, that can represent any incorrect or invalid state that the contract can reach, including:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect access control: the attacker became the owner of the contract.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect state machine: the tokens can be transferred while the contract is paused.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect arithmetic: the user can underflow its balance and get unlimited free tokens.\")), mdx(\"h3\", {\n    \"id\": \"testing-a-property-with-echidna\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#testing-a-property-with-echidna\",\n    \"aria-label\": \"testing a property with echidna permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Testing a property with Echidna\"), mdx(\"p\", null, \"We will see how to test a smart contract with Echidna. The target is the following smart contract \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/crytic/building-secure-contracts/blob/master/program-analysis/echidna/example/token.sol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"token.sol\")), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract Token{\\n  mapping(address => uint) public balances;\\n  function airdrop() public{\\n      balances[msg.sender] = 1000;\\n  }\\n  function consume() public{\\n      require(balances[msg.sender]>0);\\n      balances[msg.sender] -= 1;\\n  }\\n  function backdoor() public{\\n      balances[msg.sender] += 1;\\n  }\\n}\\n\")), mdx(\"p\", null, \"We will make the assumption that this token must have the following properties:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anyone can have at maximum 1000 tokens\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The token cannot be transferred (it is not an ERC20 token)\")), mdx(\"h3\", {\n    \"id\": \"write-a-property\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#write-a-property\",\n    \"aria-label\": \"write a property permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Write a property\"), mdx(\"p\", null, \"Echidna properties are Solidity functions. A property must:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Have no argument\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Return \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" if it is successful\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Have its name starting with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"echidna\"))), mdx(\"p\", null, \"Echidna will:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automatically generate arbitrary transactions to test the property.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Report any transactions leading a property to return \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \" or throw an error.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discard side-effect when calling a property (i.e. if the property changes a state variable, it is discarded after the test)\")), mdx(\"p\", null, \"The following property checks that the caller has no more than 1000 tokens:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function echidna_balance_under_1000() public view returns(bool){\\n      return balances[msg.sender] <= 1000;\\n}\\n\")), mdx(\"p\", null, \"Use inheritance to separate your contract from your properties:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract TestToken is Token{\\n      function echidna_balance_under_1000() public view returns(bool){\\n            return balances[msg.sender] <= 1000;\\n      }\\n  }\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/crytic/building-secure-contracts/blob/master/program-analysis/echidna/example/token.sol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"token.sol\")), \" implements the property and inherits from the token.\"), mdx(\"h3\", {\n    \"id\": \"initiate-a-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#initiate-a-contract\",\n    \"aria-label\": \"initiate a contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Initiate a contract\"), mdx(\"p\", null, \"Echidna needs a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/anatomy/#constructor-functions\"\n  }, \"constructor\"), \" without argument. If your contract needs a specific initialization, you need to do it in the constructor.\"), mdx(\"p\", null, \"There are some specific addresses in Echidna:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0x00a329c0648769A73afAc7F9381E08FB43dBEA72\"), \" which calls the constructor.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0x10000\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0x20000\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0x00a329C0648769a73afAC7F9381e08fb43DBEA70\"), \" which randomly calls the other functions.\")), mdx(\"p\", null, \"We do not need any particular initialization in our current example, as a result our constructor is empty.\"), mdx(\"h3\", {\n    \"id\": \"run-echidna\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#run-echidna\",\n    \"aria-label\": \"run echidna permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Run Echidna\"), mdx(\"p\", null, \"Echidna is launched with:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test contract.sol\\n\")), mdx(\"p\", null, \"If contract.sol contains multiple contracts, you can specify the target:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test contract.sol --contract MyContract\\n\")), mdx(\"h3\", {\n    \"id\": \"summary-testing-a-property\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#summary-testing-a-property\",\n    \"aria-label\": \"summary testing a property permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Summary: Testing a property\"), mdx(\"p\", null, \"The following summarizes the run of echidna on our example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract TestToken is Token{\\n    constructor() public {}\\n        function echidna_balance_under_1000() public view returns(bool){\\n          return balances[msg.sender] <= 1000;\\n        }\\n  }\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test testtoken.sol --contract TestToken\\n...\\n\\nechidna_balance_under_1000: failed!\\uD83D\\uDCA5\\n  Call sequence, shrinking (1205/5000):\\n    airdrop()\\n    backdoor()\\n\\n...\\n\")), mdx(\"p\", null, \"Echidna found that the property is violated if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"backdoor\"), \" is called.\"), mdx(\"h2\", {\n    \"id\": \"filtering-functions-to-call-during-a-fuzzing-campaign\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#filtering-functions-to-call-during-a-fuzzing-campaign\",\n    \"aria-label\": \"filtering functions to call during a fuzzing campaign permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Filtering functions to call during a fuzzing campaign\"), mdx(\"p\", null, \"We will see how to filter the functions to be fuzzed.\\nThe target is the following smart contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract C {\\n  bool state1 = false;\\n  bool state2 = false;\\n  bool state3 = false;\\n  bool state4 = false;\\n\\n  function f(uint x) public {\\n    require(x == 12);\\n    state1 = true;\\n  }\\n\\n  function g(uint x) public {\\n    require(state1);\\n    require(x == 8);\\n    state2 = true;\\n  }\\n\\n  function h(uint x) public {\\n    require(state2);\\n    require(x == 42);\\n    state3 = true;\\n  }\\n\\n function i() public {\\n    require(state3);\\n    state4 = true;\\n  }\\n\\n  function reset1() public {\\n    state1 = false;\\n    state2 = false;\\n    state3 = false;\\n    return;\\n  }\\n\\n  function reset2() public {\\n    state1 = false;\\n    state2 = false;\\n    state3 = false;\\n    return;\\n  }\\n\\n  function echidna_state4() public returns (bool) {\\n    return (!state4);\\n  }\\n}\\n\")), mdx(\"p\", null, \"This small example forces Echidna to find a certain sequence of transactions to change a state variable.\\nThis is hard for a fuzzer (it is recommended to use a symbolic execution tool like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/trailofbits/manticore\"\n  }, \"Manticore\"), \").\\nWe can run Echidna to verify this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test multi.sol\\n...\\nechidna_state4: passed! \\uD83C\\uDF89\\nSeed: -3684648582249875403\\n\")), mdx(\"h3\", {\n    \"id\": \"filtering-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#filtering-functions\",\n    \"aria-label\": \"filtering functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Filtering functions\"), mdx(\"p\", null, \"Echidna has trouble finding the correct sequence to test this contract because the two reset functions (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reset1\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reset2\"), \") will set all the state variables to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \".\\nHowever, we can use a special Echidna feature to either blacklist the reset function or to whitelist only the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"f\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"g\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"i\"), \" functions.\"), mdx(\"p\", null, \"To blacklist functions, we can use this configuration file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"filterBlacklist: true\\nfilterFunctions: [\\\"reset1\\\", \\\"reset2\\\"]\\n\")), mdx(\"p\", null, \"Another approach to filter functions is to list the whitelisted functions. To do that, we can use this configuration file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"filterBlacklist: false\\nfilterFunctions: [\\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\"]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"filterBlacklist\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" by default.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Filtering will be performed by name only (without parameters). If you have \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f(uint256)\"), \", the filter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"f\\\"\"), \" will match both functions.\")), mdx(\"h3\", {\n    \"id\": \"run-echidna-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#run-echidna-1\",\n    \"aria-label\": \"run echidna 1 permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Run Echidna\"), mdx(\"p\", null, \"To run Echidna with a configuration file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blacklist.yaml\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test multi.sol --config blacklist.yaml\\n...\\nechidna_state4: failed!\\uD83D\\uDCA5\\n  Call sequence:\\n    f(12)\\n    g(8)\\n    h(42)\\n    i()\\n\")), mdx(\"p\", null, \"Echidna will find the sequence of transactions to falsify the property almost inmmediately.\"), mdx(\"h3\", {\n    \"id\": \"summary-filtering-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#summary-filtering-functions\",\n    \"aria-label\": \"summary filtering functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Summary: Filtering functions\"), mdx(\"p\", null, \"Echidna can either blacklist or whitelist functions to call during a fuzzing campaign using:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"filterBlacklist: true\\nfilterFunctions: [\\\"f1\\\", \\\"f2\\\", \\\"f3\\\"]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test contract.sol --config config.yaml\\n...\\n\")), mdx(\"p\", null, \"Echidna starts a fuzzing campaign either blacklisting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"f1\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"f2\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"f3\"), \" or only calling these, according\\nto the value of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"filterBlacklist\"), \" boolean.\"), mdx(\"h2\", {\n    \"id\": \"how-to-test-soliditys-assert-with-echidna\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#how-to-test-soliditys-assert-with-echidna\",\n    \"aria-label\": \"how to test soliditys assert with echidna permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"How to test Solidity's assert with Echidna\"), mdx(\"p\", null, \"In this short tutorial, we are going to show how to use Echidna to test assertion checking in contracts. Let's suppose we have a contract like this one:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract Incrementor {\\n  uint private counter = 2**200;\\n\\n  function inc(uint val) public returns (uint){\\n    uint tmp = counter;\\n    counter += val;\\n    // tmp <= counter\\n    return (counter - tmp);\\n  }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"write-an-assertion\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#write-an-assertion\",\n    \"aria-label\": \"write an assertion permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Write an assertion\"), mdx(\"p\", null, \"We want to make sure that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tmp\"), \" is less or equal than \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"counter\"), \" after returning its difference. We could write an\\nEchidna property, but we will need to store the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tmp\"), \" value somewhere. Instead, we could use an assertion like this one:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract Incrementor {\\n  uint private counter = 2**200;\\n\\n  function inc(uint val) public returns (uint){\\n    uint tmp = counter;\\n    counter += val;\\n    assert (tmp <= counter);\\n    return (counter - tmp);\\n  }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"run-echidna-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#run-echidna-2\",\n    \"aria-label\": \"run echidna 2 permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Run Echidna\"), mdx(\"p\", null, \"To enable the assertion failure testing, create an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/crytic/echidna/wiki/Config\"\n  }, \"Echidna configuration file\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config.yaml\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"checkAsserts: true\\n\")), mdx(\"p\", null, \"When we run this contract in Echidna, we obtain the expected results:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test assert.sol --config config.yaml\\nAnalyzing contract: assert.sol:Incrementor\\nassertion in inc: failed!\\uD83D\\uDCA5\\n  Call sequence, shrinking (2596/5000):\\n    inc(21711016731996786641919559689128982722488122124807605757398297001483711807488)\\n    inc(7237005577332262213973186563042994240829374041602535252466099000494570602496)\\n    inc(86844066927987146567678238756515930889952488499230423029593188005934847229952)\\n\\nSeed: 1806480648350826486\\n\")), mdx(\"p\", null, \"As you can see, Echidna reports some assertion failure in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inc\"), \" function. Adding more than one assertion per function is possible, but Echidna cannot tell which assertion failed.\"), mdx(\"h3\", {\n    \"id\": \"when-and-how-use-assertions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#when-and-how-use-assertions\",\n    \"aria-label\": \"when and how use assertions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"When and how use assertions\"), mdx(\"p\", null, \"Assertions can be used as alternatives to explicit properties, specially if the conditions to check are directly related with the correct use of some operation \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"f\"), \". Adding assertions after some code will enforce that the check will happen immediately after it was executed:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function f(..) public {\\n    // some complex code\\n    ...\\n    assert (condition);\\n    ...\\n}\\n\\n\")), mdx(\"p\", null, \"On the contrary, using an explicit echidna property will randomly execution transactions and there is no easy way to enforce exactly when it will be checked. It is still possible to do this workaround:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function echidna_assert_after_f() public returns (bool) {\\n    f(..);\\n    return(condition);\\n}\\n\")), mdx(\"p\", null, \"However, there are some issues:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It fails if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f\"), \" is declared as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"internal\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"external\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is unclear which arguments should be used to call \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f\"), \" reverts, the property will fail.\")), mdx(\"p\", null, \"In general, we recommend following \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.regehr.org/archives/1091\"\n  }, \"John Regehr's recommendation\"), \" on how to use assertions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not force any side effect during the assertion checking. For instance: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"assert(ChangeStateAndReturn() == 1)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not assert obvious statements. For instance \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"assert(var >= 0)\"), \" where \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"var\"), \" is declared as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"uint\"), \".\")), mdx(\"p\", null, \"Finally, please \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"do not use\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" instead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"assert\"), \", since Echidna will not be able to detect it (but the contract will revert anyway).\"), mdx(\"h3\", {\n    \"id\": \"summary-assertion-checking\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#summary-assertion-checking\",\n    \"aria-label\": \"summary assertion checking permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Summary: Assertion Checking\"), mdx(\"p\", null, \"The following summarizes the run of echidna on our example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract Incrementor {\\n  uint private counter = 2**200;\\n\\n  function inc(uint val) public returns (uint){\\n    uint tmp = counter;\\n    counter += val;\\n    assert (tmp <= counter);\\n    return (counter - tmp);\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test assert.sol --config config.yaml\\nAnalyzing contract: assert.sol:Incrementor\\nassertion in inc: failed!\\uD83D\\uDCA5\\n  Call sequence, shrinking (2596/5000):\\n    inc(21711016731996786641919559689128982722488122124807605757398297001483711807488)\\n    inc(7237005577332262213973186563042994240829374041602535252466099000494570602496)\\n    inc(86844066927987146567678238756515930889952488499230423029593188005934847229952)\\n\\nSeed: 1806480648350826486\\n\")), mdx(\"p\", null, \"Echidna found that the assertion in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inc\"), \" can fail if this function is called multiple times with large arguments.\"), mdx(\"h2\", {\n    \"id\": \"collecting-and-modifying-an-echidna-corpus\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#collecting-and-modifying-an-echidna-corpus\",\n    \"aria-label\": \"collecting and modifying an echidna corpus permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Collecting and modifying an Echidna corpus\"), mdx(\"p\", null, \"We will see how to collect and use a corpus of transactions with Echidna. The target is the following smart contract \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/crytic/building-secure-contracts/blob/master/program-analysis/echidna/example/magic.sol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"magic.sol\")), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract C {\\n  bool value_found = false;\\n  function magic(uint magic_1, uint magic_2, uint magic_3, uint magic_4) public {\\n    require(magic_1 == 42);\\n    require(magic_2 == 129);\\n    require(magic_3 == magic_4+333);\\n    value_found = true;\\n    return;\\n  }\\n\\n  function echidna_magic_values() public returns (bool) {\\n    return !value_found;\\n  }\\n\\n}\\n\")), mdx(\"p\", null, \"This small example forces Echidna to find certain values to change a state variable. This is hard for a fuzzer\\n(it is recommended to use a symbolic execution tool like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/trailofbits/manticore\"\n  }, \"Manticore\"), \").\\nWe can run Echidna to verify this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test magic.sol\\n...\\n\\nechidna_magic_values: passed! \\uD83C\\uDF89\\n\\nSeed: 2221503356319272685\\n\")), mdx(\"p\", null, \"However, we can still use Echidna to collect corpus when running this fuzzing campaign.\"), mdx(\"h3\", {\n    \"id\": \"collecting-a-corpus\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#collecting-a-corpus\",\n    \"aria-label\": \"collecting a corpus permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Collecting a corpus\"), mdx(\"p\", null, \"To enable the corpus collection, create a corpus directory:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ mkdir corpus-magic\\n\")), mdx(\"p\", null, \"And an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/crytic/echidna/wiki/Config\"\n  }, \"Echidna configuration file\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config.yaml\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"coverage: true\\ncorpusDir: \\\"corpus-magic\\\"\\n\")), mdx(\"p\", null, \"Now we can run our tool and check the collected corpus:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test magic.sol --config config.yaml\\n\")), mdx(\"p\", null, \"Echidna still cannot find the correct magic values, but we can take look to the corpus it collected.\\nFor instance, one of these files was:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"[\\n  {\\n    \\\"_gas'\\\": \\\"0xffffffff\\\",\\n    \\\"_delay\\\": [\\\"0x13647\\\", \\\"0xccf6\\\"],\\n    \\\"_src\\\": \\\"00a329c0648769a73afac7f9381e08fb43dbea70\\\",\\n    \\\"_dst\\\": \\\"00a329c0648769a73afac7f9381e08fb43dbea72\\\",\\n    \\\"_value\\\": \\\"0x0\\\",\\n    \\\"_call\\\": {\\n      \\\"tag\\\": \\\"SolCall\\\",\\n      \\\"contents\\\": [\\n        \\\"magic\\\",\\n        [\\n          {\\n            \\\"contents\\\": [\\n              256,\\n              \\\"93723985220345906694500679277863898678726808528711107336895287282192244575836\\\"\\n            ],\\n            \\\"tag\\\": \\\"AbiUInt\\\"\\n          },\\n          {\\n            \\\"contents\\\": [256, \\\"334\\\"],\\n            \\\"tag\\\": \\\"AbiUInt\\\"\\n          },\\n          {\\n            \\\"contents\\\": [\\n              256,\\n              \\\"68093943901352437066264791224433559271778087297543421781073458233697135179558\\\"\\n            ],\\n            \\\"tag\\\": \\\"AbiUInt\\\"\\n          },\\n          {\\n            \\\"tag\\\": \\\"AbiUInt\\\",\\n            \\\"contents\\\": [256, \\\"332\\\"]\\n          }\\n        ]\\n      ]\\n    },\\n    \\\"_gasprice'\\\": \\\"0xa904461f1\\\"\\n  }\\n]\\n\")), mdx(\"p\", null, \"Clearly, this input will not trigger the failure in our property. However, in the next step, we will see how to modify it for that.\"), mdx(\"h3\", {\n    \"id\": \"seeding-a-corpus\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#seeding-a-corpus\",\n    \"aria-label\": \"seeding a corpus permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Seeding a corpus\"), mdx(\"p\", null, \"Echidna needs some help in order to deal with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"magic\"), \" function. We are going to copy and modify the input to use suitable\\nparameters for it:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ cp corpus/2712688662897926208.txt corpus/new.txt\\n\")), mdx(\"p\", null, \"We will modify \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"new.txt\"), \" to call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"magic(42,129,333,0)\"), \". Now, we can re-run Echidna:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test magic.sol --config config.yaml\\n...\\nechidna_magic_values: failed!\\uD83D\\uDCA5\\n  Call sequence:\\n    magic(42,129,333,0)\\n\\n\\nUnique instructions: 142\\nUnique codehashes: 1\\nSeed: -7293830866560616537\\n\\n\")), mdx(\"p\", null, \"This time, it found that the property is violated immediately.\"), mdx(\"h2\", {\n    \"id\": \"finding-transactions-with-high-gas-consumption\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#finding-transactions-with-high-gas-consumption\",\n    \"aria-label\": \"finding transactions with high gas consumption permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Finding transactions with high gas consumption\"), mdx(\"p\", null, \"We will see how to find the transactions with has gas consumption with Echidna. The target is the following smart contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract C {\\n  uint state;\\n\\n  function expensive(uint8 times) internal {\\n    for(uint8 i=0; i < times; i++)\\n      state = state + i;\\n  }\\n\\n  function f(uint x, uint y, uint8 times) public {\\n    if (x == 42 && y == 123)\\n      expensive(times);\\n    else\\n      state = 0;\\n  }\\n\\n  function echidna_test() public returns (bool) {\\n    return true;\\n  }\\n\\n}\\n\")), mdx(\"p\", null, \"Here \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"expensive\"), \" can have a large gas consumption.\"), mdx(\"p\", null, \"Currently, Echidna always need a property to test: here \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"echidna_test\"), \" always returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\\nWe can run Echidna to verify this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ echidna-test gas.sol\\n...\\nechidna_test: passed! \\uD83C\\uDF89\\n\\nSeed: 2320549945714142710\\n\")), mdx(\"h3\", {\n    \"id\": \"measuring-gas-consumption\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#measuring-gas-consumption\",\n    \"aria-label\": \"measuring gas consumption permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Measuring Gas Consumption\"), mdx(\"p\", null, \"To enable the gas consumption with Echidna, create an configuration file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config.yaml\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"estimateGas: true\\n\")), mdx(\"p\", null, \"In this example, we will also reduce the size of the transaction sequence to make the results easier to understand:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"seqLen: 2\\nestimateGas: true\\n\")), mdx(\"h3\", {\n    \"id\": \"run-echidna-3\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#run-echidna-3\",\n    \"aria-label\": \"run echidna 3 permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Run Echidna\"), mdx(\"p\", null, \"Once we have the configuration file created, we can run Echidna like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test gas.sol --config config.yaml\\n...\\nechidna_test: passed! \\uD83C\\uDF89\\n\\nf used a maximum of 1333608 gas\\n  Call sequence:\\n    f(42,123,249) Gas price: 0x10d5733f0a Time delay: 0x495e5 Block delay: 0x88b2\\n\\nUnique instructions: 157\\nUnique codehashes: 1\\nSeed: -325611019680165325\\n\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The gas shown is an estimation provided by \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dapphub/dapptools/tree/master/src/hevm#hevm-\"\n  }, \"HEVM\"), \".\")), mdx(\"h3\", {\n    \"id\": \"filtering-out-gas-reducing-calls\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#filtering-out-gas-reducing-calls\",\n    \"aria-label\": \"filtering out gas reducing calls permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Filtering Out Gas-Reducing Calls\"), mdx(\"p\", null, \"The tutorial on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"filtering functions to call during a fuzzing campaign\"), \" above shows how to\\nremove some functions from your testing.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"This can be critical for getting an accurate gas estimate.\\nConsider the following example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract C {\\n  address [] addrs;\\n  function push(address a) public {\\n    addrs.push(a);\\n  }\\n  function pop() public {\\n    addrs.pop();\\n  }\\n  function clear() public{\\n    addrs.length = 0;\\n  }\\n  function check() public{\\n    for(uint256 i = 0; i < addrs.length; i++)\\n      for(uint256 j = i+1; j < addrs.length; j++)\\n        if (addrs[i] == addrs[j])\\n          addrs[j] = address(0x0);\\n  }\\n  function echidna_test() public returns (bool) {\\n      return true;\\n  }\\n}\\n\")), mdx(\"p\", null, \"If Echidna can call all the functions, it won't easily find transactions with high gas cost:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ echidna-test pushpop.sol --config config.yaml\\n...\\npop used a maximum of 10746 gas\\n...\\ncheck used a maximum of 23730 gas\\n...\\nclear used a maximum of 35916 gas\\n...\\npush used a maximum of 40839 gas\\n\")), mdx(\"p\", null, \"That's because the cost depends on the size of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addrs\"), \" and random calls tend to leave the array almost empty.\\nBlacklisting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pop\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"clear\"), \", however, gives us much better results:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"filterBlacklist: true\\nfilterFunctions: [\\\"pop\\\", \\\"clear\\\"]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ echidna-test pushpop.sol --config config.yaml\\n...\\npush used a maximum of 40839 gas\\n...\\ncheck used a maximum of 1484472 gas\\n\")), mdx(\"h3\", {\n    \"id\": \"summary-finding-transactions-with-high-gas-consumption\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#summary-finding-transactions-with-high-gas-consumption\",\n    \"aria-label\": \"summary finding transactions with high gas consumption permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Summary: Finding transactions with high gas consumption\"), mdx(\"p\", null, \"Echidna can find transactions with high gas consumption using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"estimateGas\"), \" configuration option:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"estimateGas: true\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ echidna-test contract.sol --config config.yaml\\n...\\n\")), mdx(\"p\", null, \"Echidna will report a sequence with the maximum gas consumption for every function, once the fuzzing campaign is over.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#installation-installation","title":"Installation {#installation}","items":[{"url":"#echidna-through-docker-echidna-through-docker","title":"Echidna through docker {#echidna-through-docker}"},{"url":"#binary-binary","title":"Binary {#binary}"}]},{"url":"#introduction-to-property-based-fuzzing-introduction-to-property-based-fuzzing","title":"Introduction to property-based fuzzing {#introduction-to-property-based-fuzzing}","items":[{"url":"#fuzzing-fuzzing","title":"Fuzzing {#fuzzing}"},{"url":"#property-based-fuzzing-property-based-fuzzing","title":"Property-based fuzzing {#property-based-fuzzing}"},{"url":"#testing-a-property-with-echidna-testing-a-property-with-echidna","title":"Testing a property with Echidna {#testing-a-property-with-echidna}"},{"url":"#write-a-property-write-a-property","title":"Write a property {#write-a-property}"},{"url":"#initiate-a-contract-initiate-a-contract","title":"Initiate a contract {#initiate-a-contract}"},{"url":"#run-echidna-run-echidna","title":"Run Echidna {#run-echidna}"},{"url":"#summary-testing-a-property-summary-testing-a-property","title":"Summary: Testing a property {#summary-testing-a-property}"}]},{"url":"#filtering-functions-to-call-during-a-fuzzing-campaign-filtering-functions-to-call-during-a-fuzzing-campaign","title":"Filtering functions to call during a fuzzing campaign {#filtering-functions-to-call-during-a-fuzzing-campaign}","items":[{"url":"#filtering-functions-filtering-functions","title":"Filtering functions {#filtering-functions}"},{"url":"#run-echidna-run-echidna-1","title":"Run Echidna {#run-echidna-1}"},{"url":"#summary-filtering-functions-summary-filtering-functions","title":"Summary: Filtering functions {#summary-filtering-functions}"}]},{"url":"#how-to-test-soliditys-assert-with-echidna-how-to-test-soliditys-assert-with-echidna","title":"How to test Solidity's assert with Echidna {#how-to-test-soliditys-assert-with-echidna}","items":[{"url":"#write-an-assertion-write-an-assertion","title":"Write an assertion {#write-an-assertion}"},{"url":"#run-echidna-run-echidna-2","title":"Run Echidna {#run-echidna-2}"},{"url":"#when-and-how-use-assertions-when-and-how-use-assertions","title":"When and how use assertions {#when-and-how-use-assertions}"},{"url":"#summary-assertion-checking-summary-assertion-checking","title":"Summary: Assertion Checking {#summary-assertion-checking}"}]},{"url":"#collecting-and-modifying-an-echidna-corpus-collecting-and-modifying-an-echidna-corpus","title":"Collecting and modifying an Echidna corpus {#collecting-and-modifying-an-echidna-corpus}","items":[{"url":"#collecting-a-corpus-collecting-a-corpus","title":"Collecting a corpus {#collecting-a-corpus}"},{"url":"#seeding-a-corpus-seeding-a-corpus","title":"Seeding a corpus {#seeding-a-corpus}"}]},{"url":"#finding-transactions-with-high-gas-consumption-finding-transactions-with-high-gas-consumption","title":"Finding transactions with high gas consumption {#finding-transactions-with-high-gas-consumption}","items":[{"url":"#measuring-gas-consumption-measuring-gas-consumption","title":"Measuring Gas Consumption {#measuring-gas-consumption}"},{"url":"#run-echidna-run-echidna-3","title":"Run Echidna {#run-echidna-3}"},{"url":"#filtering-out-gas-reducing-calls-filtering-out-gas-reducing-calls","title":"Filtering Out Gas-Reducing Calls {#filtering-out-gas-reducing-calls}"},{"url":"#summary-finding-transactions-with-high-gas-consumption-summary-finding-transactions-with-high-gas-consumption","title":"Summary: Finding transactions with high gas consumption {#summary-finding-transactions-with-high-gas-consumption}"}]}]}}},"pageContext":{"slug":"/se/developers/tutorials/how-to-use-echidna-to-test-smart-contracts/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/how-to-use-echidna-to-test-smart-contracts/index.md","intl":{"language":"se","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"page-developer-meta-title":"Ethereum utvecklarresurser","page-developers-about":"Om dessa utvecklarresurser","page-developers-about-desc":"ethereum.org är här för att hjälpa dig skapa med Ethereum, med dokumentation om grundläggande begrepp såväl som utvecklingsstacken. Dessutom finns det handledningar för att hjälpa dig komma igång.","page-developers-about-desc-2":"Inspirerad av Mozillas Developer Network tyckte vi att Ethereum behövde en plats för att rymma bra innehåll och resurser. Liksom hos våra vänner på Mozilla är allt här öppen källkod, redo för dig att utöka och förbättra.","page-developers-account-desc":"Kontrakt eller personer i nätverket","page-developers-accounts-link":"Konton","page-developers-advanced":"Avancerat","page-developers-api-desc":"Använda bibliotek för att interagera med smarta kontrakt","page-developers-api-link":"Serverdel-API:er","page-developers-aria-label":"Utvecklarmeny","page-developers-block-desc":"Batcher av transaktioner som lagts till i blockkedjan","page-developers-block-explorers-desc":"Din portal till Ethereum-data","page-developers-block-explorers-link":"Blockutforskare","page-developers-blocks-link":"Block","page-developers-browse-tutorials":"Bläddra i handledningar","page-developers-choose-stack":"Välj din stack","page-developers-contribute":"Bidra","page-developers-dev-env-desc":"IDE:er som är lämpliga för dapp-utveckling","page-developers-dev-env-link":"Utvecklingsmiljöer","page-developers-discord":"Gå med i Discord","page-developers-docs-introductions":"Introduktioner","page-developers-evm-desc":"Datorn som bearbetar transaktioner","page-developers-evm-link":"Den virtuella Ethereum-maskinen (EVM)","page-developers-explore-documentation":"Utforska dokumentationen","page-developers-feedback":"Om du har någon feedback kan du kontakta oss via ett GitHub-problem eller via vår Discord-server.","page-developers-frameworks-desc":"Verktyg för att hjälpa till att påskynda utvecklingen","page-developers-frameworks-link":"Ramverk för utveckling","page-developers-fundamentals":"Grundläggande principer","page-developers-gas-desc":"Ether behövs för att driva transaktioner","page-developers-gas-link":"Bränsle","page-developers-get-started":"Hur vill du komma igång?","page-developers-improve-ethereum":"Hjälp oss att göra ethereum.org bättre","page-developers-improve-ethereum-desc":"Precis som ethereum.org är dessa dokument är en gemensam ansträngning. Skapa en PR om du hittar misstag, utrymme för förbättring, eller nya möjligheter att hjälpa Ethereum-utvecklare.","page-developers-into-eth-desc":"En introduktion till blockchain och Ethereum","page-developers-intro-dapps-desc":"En introduktion till decentraliserade program","page-developers-intro-dapps-link":"Introduktion till dapps","page-developers-intro-eth-link":"Introduktion till Ethereum","page-developers-intro-stack":"Introduktion till stacken","page-developers-intro-stack-desc":"En introduktion till Ethereum-stacken","page-developers-js-libraries-desc":"Använda javascript för att interagera med smarta kontrakt","page-developers-js-libraries-link":"Javascript-bibliotek","page-developers-language-desc":"Använda Ethereum med välkända språk","page-developers-languages":"Programmeringsspråk","page-developers-learn":"Lär dig Ethereum-utveckling","page-developers-learn-desc":"Läs mer om kärnkoncepten och Ethereum-stacken i våra dokument","page-developers-learn-tutorials":"Lär dig genom självstudier","page-developers-learn-tutorials-cta":"Visa handledningar","page-developers-learn-tutorials-desc":"Lär dig Ethereum-utveckling steg för steg från utvecklare som redan har gjort det.","page-developers-meta-desc":"Dokumentation, handledningar och verktyg för utvecklare som bygger på Ethereum.","page-developers-mining-desc":"Hur nya block skapas och samstämmighet uppnås","page-developers-mining-link":"Utvinning","page-developers-networks-desc":"En översikt över Mainnet och testnätverken","page-developers-networks-link":"Nätverk","page-developers-node-clients-desc":"Hur block och transaktioner verifieras i nätverket","page-developers-node-clients-link":" Noder och klienter","page-developers-oracle-desc":"Få off-chain-data till dina smarta kontrakt","page-developers-oracles-link":"Orakel","page-developers-play-code":"Lek med koder","page-developers-read-docs":"Läs dokumenten","page-developers-scaling-desc":"Lösningar för snabbare transaktioner","page-developers-scaling-link":"Skalning","page-developers-smart-contract-security-desc":"Säkerhetsåtgärder att beakta vid utveckling","page-developers-smart-contract-security-link":"Säkerhet","page-developers-set-up":"Konfigurera lokal miljö","page-developers-setup-desc":"Förbered stacken för utveckling genom att skapa en utvecklingsmiljö.","page-developers-smart-contracts-desc":"Logiken bakom dapps – självverkande avtal","page-developers-smart-contracts-link":"Smarta kontrakt","page-developers-stack":"Stacken","page-developers-start":"Börja experimentera","page-developers-start-desc":"Vill du experimentera först och ställa frågor senare?","page-developers-storage-desc":"Hur du hanterar dapp-lagring","page-developers-storage-link":"Lagring","page-developers-subtitle":"En bygghandbok för Ethereum. Av byggare, för byggare.","page-developers-title-1":"Ethereum","page-developers-title-2":"utvecklare","page-developers-title-3":"resurser","page-developers-token-standards-desc":"En översikt över accepterade tokenstandarder","page-developers-token-standards-link":"Tokenstandarder","page-developers-transactions-desc":"Hur Ethereum-tillstånd förändras","page-developers-transactions-link":"Transaktioner","page-developers-web3-desc":"Hur web3-utvecklingsvärlden är annorlunda","page-developers-web3-link":"Web2 kontra Web3","page-index-hero-image-alt":"ethereum.org bild av hjälte","page-index-meta-description":"Ethereum är en global, decentraliserad plattform för pengar och nya slags applikationer. På Ethereum kan du skriva kod som styr pengar och bygga appar som är tillgängliga var som helst i världen.","page-index-meta-title":"Startsida","page-index-sections-developers-desc":"Lär dig mer om tekniken bakom Ethereum och dess appar så att du kan börja skapa med den.","page-index-sections-developers-image-alt":"Illustration av en hand som bygger en Ethereum-glyf gjord av lego-tegel","page-index-sections-developers-link-text":"Börja skapa","page-index-sections-developers-title":"Utvecklare","page-index-sections-enterprise-desc":"Se hur Ethereum kan öppna nya affärsmodeller, minska dina kostnader och framtidssäkra din verksamhet.","page-index-sections-enterprise-image-alt":"Illustration av en grupp som arbetar med ett Ethereum-projekt runt en bärbar dator","page-index-sections-enterprise-link-text":"Ethereum för storföretag","page-index-sections-enterprise-title":"Enterprise","page-index-sections-individuals-desc":"Lär känna Ethereum, Ether, plånböcker, token och mer så att du kan börja använda Ethereum-appar.","page-index-sections-individuals-image-alt":"Illustration av hund som sitter vid en dator","page-index-sections-individuals-link-text":"Kom igång med Ethereum","page-index-sections-individuals-title":"Om Ethereum","page-index-subtitle":"På Ethereum kan du skriva kod som styr digitalt värde, körs exakt som programmerat och är tillgängligt var som helst i världen.","page-index-title":"Ethereum är en global plattform med öppen källkod för decentraliserade appar.","about-ethereum-org":"Om ethereum.org","about-us":"Om oss","brand-assets":"Varumärkestillgångar","community":"Community","contact":"Kontakta oss","contributing":"Bidragande","cookie-policy":"Cookie-policy","decentralized-applications-dapps":"Decentraliserade program (dapps)","developers":"Utvecklare","developers-home":"Startsida för utvecklare","documentation":"Dokumentation","ef-blog":"Ethereum Foundation-blogg","eips":"Förbättringsförslag för Ethereum","enterprise":"Enterprise","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Ethereum varumärkestillgångar","ethereum-community":"Ethereum Community","ethereum-glossary":"Ethereum-ordlista","ethereum-wallets":"Ethereum-plånböcker","ethereum-whitepaper":"Ethereum-vitbok","get-eth":"Skaffa ETH","get-started":"Kom igång","guides-and-resources":"Guider och resurser","how-ethereum-works":"Hur Ethereum fungerar","individuals":"Privatpersoner","language-support":"Språksupport","languages":"Språk","learn":"Lär dig","learn-by-coding":"Lär dig genom kodning","learn-more":"Lär dig mer","mainnet-ethereum":"Mainnet Ethereum","nav-beginners":"Nybörjare","page-404-copy":"Använd sökrutan ovan för att hitta det du letar efter eller återvända hem.","page-404-not-found":"Hittades inte","page-enterprise":"Enterprise","page-index":"Ethereum","page-index-section-beginners-item-one":"Helt ny på Ethereum?","page-index-section-beginners-item-three":"Varför ska jag bry mig?","page-index-section-beginners-item-two":"Vad är Ethereum?","page-index-section-beginners-title":"Nybörjare","page-index-section-developers-item-one":"Komma igång-guider","page-index-section-developers-item-three":"Senaste utvecklarverktyg","page-index-section-developers-item-two":"Lär dig att programmera smarta kontrakt","page-index-section-developers-title":"För utvecklare","page-index-section-enterprise-item-one":"Varför Enterprise Ethereum?","page-index-section-enterprise-item-three":"Enterprise utvecklargemenskap","page-index-section-enterprise-item-two":"Enterprise-funktioner","page-index-section-enterprise-title":"För Enterprise","page-index-section-individuals-item-one":"Vad är Ethereum?","page-index-section-individuals-item-three":"Guider och resurser","page-index-section-individuals-item-two":"Använda Ethereum","page-index-section-individuals-title":"För privatpersoner","page-index-section-learn-item-one":"Nybörjarresurser","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"Vad kan jag göra med Ethereum idag?","page-index-section-use-item-three":"Vad är en plånbok?","page-index-section-use-item-two":"Hur får jag tag i ether?","page-index-section-use-title":"Använd","page-last-updated":"Sidan uppdaterades senast","page-learning-tools-consensys-academy-description":"Online-bootcamp för Ethereum-utvecklare","page-learning-tools-cryptozombies-description":"Lär dig Solidity genom att skapa ditt eget Zombie-spel","page-learning-tools-ethernauts-description":"Hacka smarta kontrakt för att komma upp till nästa nivå","privacy-policy":"Sekretesspolicy","private-ethereum":"Privat Ethereum","search":"Sök","set-up-local-env":"Konfigurera lokal miljö","stablecoins":"Stablecoins","terms-of-use":"Användarvillkor","translation-banner-body-new":"Du tittar på den här sidan på engelska eftersom vi inte har översatt den än. Hjälp oss att översätta detta innehåll.","translation-banner-body-update":"Det finns en ny version av den här sidan, men den finns bara på engelska just nu. Hjälp oss att översätta den senaste versionen.","translation-banner-button-join-translation-program":"Gå med i översättningsprogrammet","translation-banner-button-learn-more":"Lär dig mer","translation-banner-button-see-english":"Visa på engelska","translation-banner-button-translate-page":"Översätt sidan","translation-banner-title-new":"Hjälp till att översätta denna sida","translation-banner-title-update":"Hjälp till att uppdatera den här sidan","tutorials":"Handledningar","use":"Använd","use-ethereum":"Använda Ethereum","website-last-updated":"Webbplatsen senast uppdaterad","what-is-ether":"Vad är Ether (ETH)?","what-is-ethereum":"Vad är Ethereum?"},"routed":true,"originalPath":"/developers/tutorials/how-to-use-echidna-to-test-smart-contracts/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}