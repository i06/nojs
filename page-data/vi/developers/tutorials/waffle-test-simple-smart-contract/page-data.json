{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/vi/developers/tutorials/waffle-test-simple-smart-contract/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/waffle-test-simple-smart-contract/","readingTime":{"minutes":6.145}},"frontmatter":{"title":"Testing simple smart contract with Waffle library","description":"Tutorial for beginners","lang":"en","tags":["smart contracts","solidity","Waffle","testing"],"author":"Ewa Kowalska","source":null,"sourceUrl":null,"skill":"beginner","published":"2021-02-26T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Testing simple smart contract with Waffle library\",\n  \"description\": \"Tutorial for beginners\",\n  \"author\": \"Ewa Kowalska\",\n  \"tags\": [\"smart contracts\", \"solidity\", \"Waffle\", \"testing\"],\n  \"skill\": \"beginner\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"published\": \"2021-02-26T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"in-this-tutorial-youll-learn-how-to\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#in-this-tutorial-youll-learn-how-to\",\n    \"aria-label\": \"in this tutorial youll learn how to permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"In this tutorial you'll learn how to\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test the changes of wallet balance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test emission of events with specified arguments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Assert that a transaction was reverted\")), mdx(\"h2\", {\n    \"id\": \"assumptions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#assumptions\",\n    \"aria-label\": \"assumptions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Assumptions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can create a new JavaScript or TypeScript project\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have some basic experience with tests in Javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have used some package managers like yarn or npm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You possess very basic knowledge of smart contracts and Solidity\")), mdx(\"h1\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Getting started\"), mdx(\"p\", null, \"The tutorial demonstrates test setup and run using yarn, but there is no problem if you prefer npm - I will provide proper references to the official Waffle \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/index.html\"\n  }, \"documentation\"), \".\"), mdx(\"h2\", {\n    \"id\": \"install-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#install-dependencies\",\n    \"aria-label\": \"install dependencies permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install Dependencies\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#installation\"\n  }, \"Add\"), \" ethereum-waffle and typescript dependencies to the dev dependencies of your project.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"yarn add --dev ethereum-waffle ts-node typescript @types/jest\\n\")), mdx(\"h2\", {\n    \"id\": \"example-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example-smart-contract\",\n    \"aria-label\": \"example smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example smart contract\"), mdx(\"p\", null, \"During the tutorial we'll work on a simple smart contract example - EtherSplitter. It does not much apart from allowing anyone to send some wei and split it evenly between two predefined receivers.\\nThe split function requires the number of wei to be even, otherwise it will revert. For both receivers it performs a wei transfer followed by emission of the Transfer event.\"), mdx(\"p\", null, \"Place the snippet of EtherSplitter code in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/EtherSplitter.sol\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.0;\\n\\ncontract EtherSplitter {\\n    address payable receiver1;\\n    address payable receiver2;\\n\\n    event Transfer(address from, address to, uint256 amount);\\n\\n    constructor(address payable _address1, address payable _address2) public {\\n        receiver1 = _address1;\\n        receiver2 = _address2;\\n    }\\n\\n    function split() public payable {\\n        require(msg.value % 2 == 0, 'Uneven wei amount not allowed');\\n        receiver1.transfer(msg.value / 2);\\n        emit Transfer(msg.sender, receiver1, msg.value / 2);\\n        receiver2.transfer(msg.value / 2);\\n        emit Transfer(msg.sender, receiver2, msg.value / 2);\\n    }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compile-the-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#compile-the-contract\",\n    \"aria-label\": \"compile the contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Compile the contract\"), mdx(\"p\", null, \"To \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#compiling-the-contract\"\n  }, \"compile\"), \" the contract add the following entry to the package.json file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"scripts\\\": {\\n    \\\"build\\\": \\\"waffle\\\"\\n  }\\n\")), mdx(\"p\", null, \"Next, create the Waffle configuration file in the project root directory - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"waffle.json\"), \" - and then paste the following configuration there:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"compilerType\\\": \\\"solcjs\\\",\\n  \\\"compilerVersion\\\": \\\"0.6.2\\\",\\n  \\\"sourceDirectory\\\": \\\"./src\\\",\\n  \\\"outputDirectory\\\": \\\"./build\\\"\\n}\\n\")), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn build\"), \". As the result, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" directory will appear with the EtherSplitter compiled contract in JSON format.\"), mdx(\"h2\", {\n    \"id\": \"test-setup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#test-setup\",\n    \"aria-label\": \"test setup permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Test setup\"), mdx(\"p\", null, \"Testing with Waffle requires using Chai matchers and Mocha, so you need to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#writing-tests\"\n  }, \"add\"), \" them to your project. Update your package.json file and add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \" entry in the scripts part:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"scripts\\\": {\\n    \\\"build\\\": \\\"waffle\\\",\\n    \\\"test\\\": \\\"export NODE_ENV=test && mocha -r ts-node/register 'test/**/*.test.ts'\\\"\\n  }\\n\")), mdx(\"p\", null, \"If you want to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#running-tests\"\n  }, \"execute\"), \" your tests, just run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn test\"), \" .\"), mdx(\"h1\", {\n    \"id\": \"testing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#testing\",\n    \"aria-label\": \"testing permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Testing\"), mdx(\"p\", null, \"Now create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \" directory and create the new file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\\\\EtherSplitter.test.ts\"), \".\\nCopy the snippet below and paste it to our test file.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { expect, use } from \\\"chai\\\"\\nimport { Contract } from \\\"ethers\\\"\\nimport { deployContract, MockProvider, solidity } from \\\"ethereum-waffle\\\"\\nimport EtherSplitter from \\\"../build/EtherSplitter.json\\\"\\n\\nuse(solidity)\\n\\ndescribe(\\\"Ether Splitter\\\", () => {\\n  const [sender, receiver1, receiver2] = new MockProvider().getWallets()\\n  let splitter: Contract\\n\\n  beforeEach(async () => {\\n    splitter = await deployContract(sender, EtherSplitter, [\\n      receiver1.address,\\n      receiver2.address,\\n    ])\\n  })\\n\\n  // add the tests here\\n})\\n\")), mdx(\"p\", null, \"A few words before we start.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MockProvider\"), \" comes up with a mock version of the blockchain. It also delivers mock wallets that will serve us for testing EtherSplitter contract. We can get up to ten wallets by calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getWallets()\"), \" method on the provider. In the example, we get three wallets - for the sender and for two receivers.\"), mdx(\"p\", null, \"Next, we declare a variable called 'splitter' - this is our mock EtherSplitter contract. It is created before each execution of a single test by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deployContract\"), \" method. This method simulates deployment of a contract from the wallet passed as the first parameter (sender's wallet in our case). The second parameter is the ABI and the bytecode of the tested contract - we pass there the json file of the compiled EtherSplitter contract from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" directory. The third parameter is an array with the contract's constructor arguments, which in our case, are the two addresses of the receivers.\"), mdx(\"h2\", {\n    \"id\": \"changebalances\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#changebalances\",\n    \"aria-label\": \"changebalances permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"changeBalances\"), mdx(\"p\", null, \"First, we will check if the split method actually changes the balances of receivers' wallets. If we split 50 wei from senders account, we would expect the balances of both receivers to increase by 25 wei. We will use Waffle's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalances\"), \" matcher:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Changes accounts balances\\\", async () => {\\n  await expect(() => splitter.split({ value: 50 })).to.changeBalances(\\n    [receiver1, receiver2],\\n    [25, 25]\\n  )\\n})\\n\")), mdx(\"p\", null, \"As the first parameter of the matcher, we pass an array of receivers' wallets, and as the second - an array of expected increases on corresponding accounts.\\nIf we wanted to check the balance of one specific wallet, we could also use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalance\"), \" matcher, which does not require passing arrays, as in the example below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Changes account balance\\\", async () => {\\n  await expect(() => splitter.split({ value: 50 })).to.changeBalance(\\n    receiver1,\\n    25\\n  )\\n})\\n\")), mdx(\"p\", null, \"Note that in both cases of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalance\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalances\"), \" we pass the split function as a callback because the matcher needs to access the state of balances before and after the call.\"), mdx(\"p\", null, \"Next, we'll test if the Transfer event was emitted after each transfer of wei. We'll turn to another matcher from Waffle:\"), mdx(\"h2\", {\n    \"id\": \"emit\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#emit\",\n    \"aria-label\": \"emit permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Emit\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Emits event on the transfer to the first receiver\\\", async () => {\\n  await expect(splitter.split({ value: 50 }))\\n    .to.emit(splitter, \\\"Transfer\\\")\\n    .withArgs(sender.address, receiver1.address, 25)\\n})\\n\\nit(\\\"Emits event on the transfer to the second receiver\\\", async () => {\\n  await expect(splitter.split({ value: 50 }))\\n    .to.emit(splitter, \\\"Transfer\\\")\\n    .withArgs(sender.address, receiver2.address, 25)\\n})\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"emit\"), \" matcher allows us to check if a contract emitted an event on calling a method. As the parameters to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"emit\"), \" matcher, we provide the mock contract that we predict to emit the event, along with the name of that event. In our case, the mock contract is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"splitter\"), \" and the name of the event - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Transfer\"), \". We can also verify the precise values of arguments that the event was emitted with - we pass as many arguments to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withArgs\"), \" matcher, as our event declaration expects. In case of EtherSplitter contract, we pass the addresses of the sender and the receiver along with the transferred wei amount.\"), mdx(\"h2\", {\n    \"id\": \"revertedwith\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#revertedwith\",\n    \"aria-label\": \"revertedwith permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"revertedWith\"), mdx(\"p\", null, \"As the last example, we'll check if the transaction was reverted in case of uneven number of wei. We'll use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"revertedWith\"), \" matcher:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Reverts when Vei amount uneven\\\", async () => {\\n  await expect(splitter.split({ value: 51 })).to.be.revertedWith(\\n    \\\"Uneven wei amount not allowed\\\"\\n  )\\n})\\n\")), mdx(\"p\", null, \"The test, if passed, will assure us that the transaction was reverted indeed. However, there must be also an exact match between the messages that we passed in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" statement and the message we expect in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"revertedWith\"), \". If we go back to the code of EtherSplitter contract, in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" statement for the wei amount, we provide the message: 'Uneven wei amount not allowed'. This matches the message we expect in our test. If they were not equal, the test would fail.\"), mdx(\"h1\", {\n    \"id\": \"congratulations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#congratulations\",\n    \"aria-label\": \"congratulations permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Congratulations!\"), mdx(\"p\", null, \"You've made your first big step towards testing smart contracts with Waffle! You might be interested in other Waffle tutorials:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/testing-erc-20-tokens-with-waffle/\"\n  }, \"Testing ERC20 with Waffle\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/waffle-dynamic-mocking-and-testing-calls/#gatsby-focus-wrapper\"\n  }, \"Waffle: Dynamic mocking and testing contract calls\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/waffle-hello-world-with-buidler-tutorial/\"\n  }, \"Waffle say hello world tutorial with hardhat and ethers\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#in-this-tutorial-youll-learn-how-to-in-this-tutorial-youll-learn-how-to","title":"In this tutorial you'll learn how to {#in-this-tutorial-youll-learn-how-to}"},{"url":"#assumptions-assumptions","title":"Assumptions {#assumptions}"}]},{"url":"#getting-started-getting-started","title":"Getting started {#getting-started}","items":[{"url":"#install-dependencies-install-dependencies","title":"Install Dependencies {#install-dependencies}"},{"url":"#example-smart-contract-example-smart-contract","title":"Example smart contract {#example-smart-contract}"},{"url":"#compile-the-contract-compile-the-contract","title":"Compile the contract {#compile-the-contract}"},{"url":"#test-setup-test-setup","title":"Test setup {#test-setup}"}]},{"url":"#testing-testing","title":"Testing {#testing}","items":[{"url":"#changebalances-changebalances","title":"changeBalances {#changebalances}"},{"url":"#emit-emit","title":"Emit {#emit}"},{"url":"#revertedwith-revertedwith","title":"revertedWith {#revertedwith}"}]},{"url":"#congratulations-congratulations","title":"Congratulations! {#congratulations}"}]}}},"pageContext":{"slug":"/vi/developers/tutorials/waffle-test-simple-smart-contract/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/waffle-test-simple-smart-contract/index.md","intl":{"language":"vi","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"page-developer-meta-title":"Tài nguyên dành cho nhà phát triển Ethereum","page-developers-about":"Giới thiệu về các tài nguyên dành cho nhà phát triển này","page-developers-about-desc":"ethereum.org là nơi giúp bạn xây dựng cùng Ethereum bằng tài liệu tham khảo về các khái niệm nền tảng cũng như ngăn xếp phát triển. Ngoài ra còn có các hướng dẫn để bắt đầu triển khai và đi vào hoạt động.","page-developers-about-desc-2":"Lấy cảm hứng từ Mạng lưới Nhà phát triển của Mozilla, chúng tôi nghĩ rằng Ethereum cần một nơi để lưu giữ nội dung và tài nguyên dành cho nhà phát triển. Giống như các bạn chúng tôi tại Mozilla, mọi thứ ở đây đều là nguồn mở và sẵn sàng để bạn phát triển và cải thiện.","page-developers-account-desc":"Hợp đồng hoặc những người trên mạng lưới này","page-developers-accounts-link":"Tài khoản","page-developers-advanced":"Nâng cao","page-developers-api-desc":"Sử dụng các thư viện để tương tác với các hợp đồng thông minh","page-developers-api-link":"API đầu cuối","page-developers-aria-label":"Menu của nhà phát triển","page-developers-block-desc":"Hàng loạt giao dịch được bổ sung vào chuỗi khối","page-developers-block-explorers-desc":"Cổng thông tin vào dữ liệu Ethereum của bạn","page-developers-block-explorers-link":"Trình duyệt khối","page-developers-blocks-link":"Khối","page-developers-browse-tutorials":"Duyệt tìm hướng dẫn","page-developers-choose-stack":"Chọn ngăn xếp","page-developers-contribute":"Đóng góp","page-developers-dev-env-desc":"IDE phù hợp cho việc phát triển ứng dụng phi tập trung","page-developers-dev-env-link":"Môi trường phát triển","page-developers-discord":"Tham gia Discord","page-developers-docs-introductions":"Giới thiệu","page-developers-evm-desc":"Máy tính xử lý các giao dịch","page-developers-evm-link":"Máy ảo Ethereum (EVM)","page-developers-explore-documentation":"Khám phá tài liệu tham khảo","page-developers-feedback":"Nếu bạn có bất kỳ ý kiến gì, hãy liên hệ với chúng tôi qua vấn đề GitHub hoặc máy tính Discord của chúng tôi.","page-developers-frameworks-desc":"Các công cụ giúp tăng tốc phát triển","page-developers-frameworks-link":"Khuôn khổ phát triển","page-developers-fundamentals":"Nguyên tắc cơ bản","page-developers-gas-desc":"Cần Ether để cho phép giao dịch","page-developers-gas-link":"Gas","page-developers-get-started":"Bạn muốn bắt đầu như thế nào?","page-developers-improve-ethereum":"Giúp chúng tôi hoàn thiện thêm ethereum.org","page-developers-improve-ethereum-desc":"Cũng giống như ethereum.org, các tài liệu này là nỗ lực của cả cộng đồng. Hãy tạo một PR nếu bạn thấy lỗi, các điểm có thể cải tiến, hoặc các cơ hội mới để giúp các nhà phát triển Ethereum.","page-developers-into-eth-desc":"Giới thiệu về chuỗi khối và Ethereum","page-developers-intro-dapps-desc":"Giới thiệu về ứng dụng phi tập trung","page-developers-intro-dapps-link":"Giới thiệu về ứng dụng phi tập trung","page-developers-intro-eth-link":"Giới thiệu về Ethereum","page-developers-intro-stack":"Giới thiệu về ngăn xếp","page-developers-intro-stack-desc":"Giới thiệu về ngăn xếp Ethereum","page-developers-js-libraries-desc":"Sử dụng javascript để tương tác với các hợp đồng thông minh","page-developers-js-libraries-link":"Thư viện javascript","page-developers-language-desc":"Sử dụng Ethereum với các ngôn ngữ quen thuộc","page-developers-languages":"Ngôn ngữ lập trình","page-developers-learn":"Học cách phát triển Ethereum","page-developers-learn-desc":"Tìm hiểu các khái niệm chính và ngăn xếp Ethereum bằng các tài liệu của chúng tôi","page-developers-learn-tutorials":"Học thông qua các hướng dẫn","page-developers-learn-tutorials-cta":"Xem hướng dẫn","page-developers-learn-tutorials-desc":"Học cách phát triển Ethereum từng bước từ các nhà phát triển đã từng làm điều đó.","page-developers-meta-desc":"Tài liệu tham khảo, hướng dẫn và công cụ để các nhà phát triển xây dựng trên Ethereum.","page-developers-mining-desc":"Cách các khối mới được tạo và đạt đến sự đồng thuận","page-developers-mining-link":"Khai thác","page-developers-networks-desc":"Tổng quan về mạng chính và các mạng kiểm thử","page-developers-networks-link":"Mạng","page-developers-node-clients-desc":"Cách các khối và giao dịch được xác minh trong mạng","page-developers-node-clients-link":" Nút và ứng dụng","page-developers-oracle-desc":"Đưa dữ liệu ngoài chuỗi vào các hợp đồng thông minh","page-developers-oracles-link":"Oracles","page-developers-play-code":"Sử dụng mã","page-developers-read-docs":"Đọc tài liệu","page-developers-scaling-desc":"Các giải pháp để giao dịch nhanh hơn","page-developers-scaling-link":"Thay đổi quy mô","page-developers-smart-contract-security-desc":"Các biện pháp bảo mật cần xem xét trong quá trình phát triển","page-developers-smart-contract-security-link":"Bảo mật","page-developers-set-up":"Thiết lập môi trường cục bộ","page-developers-setup-desc":"Chuẩn bị ngăn xếp sẵn sàng để xây dựng bằng cách định cấu hình môi trường phát triển.","page-developers-smart-contracts-desc":"Lôgic đằng sau các ứng dụng phi tập trung - thỏa thuận tự thực thi","page-developers-smart-contracts-link":"Hợp đồng thông minh","page-developers-stack":"Ngăn xếp","page-developers-start":"Bắt đầu thử nghiệm","page-developers-start-desc":"Bạn muốn thử nghiệm trước, đặt câu hỏi sau?","page-developers-storage-desc":"Cách xử lý việc lưu trữ ứng dụng phi tập trung","page-developers-storage-link":"Lưu trữ","page-developers-subtitle":"Hướng dành cho nhà phát triển về Ethereum. Bởi nhà phát triển, dành cho nhà phát triển.","page-developers-title-1":"Ethereum","page-developers-title-2":"nhà phát triển","page-developers-title-3":"tài nguyên","page-developers-token-standards-desc":"Tổng quan về các tiêu chuẩn mã thông báo được chấp nhận","page-developers-token-standards-link":"Tiêu chuẩn mã thông báo","page-developers-transactions-desc":"Cách Ethereum tuyên bố thay đổi","page-developers-transactions-link":"Giao dịch","page-developers-web3-desc":"Sự khác biệt của thế giới phát triển web3","page-developers-web3-link":"Web2 vs Web3","page-index-hero-image-alt":"hình ảnh anh hùng ethereum.org","page-index-meta-description":"Ethereum là một nền tảng toàn cầu, phi tập trung dành cho các ứng dụng về tài chính và các loại ứng dụng mới. Trên Ethereum, bạn có thể viết mã kiểm soát tài chính và xây dựng các ứng dụng có thể truy cập được từ bất cứ đâu trên thế giới.","page-index-meta-title":"Trang chủ","page-index-sections-developers-desc":"Tìm hiểu thêm về công nghệ đằng sau Ethereum và các ứng dụng của nền tảng này để bạn có thể bắt đầu xây dựng cùng nó.","page-index-sections-developers-image-alt":"Minh họa việc xây dựng thủ công một nét khắc Ethereum được làm từ các khối lego","page-index-sections-developers-link-text":"Bắt đầu xây dựng","page-index-sections-developers-title":"Nhà phát triển","page-index-sections-enterprise-desc":"Xem cách Ethereum có thể mở ra các mô hình kinh doanh mới, giảm chi phí và chuẩn bị doanh nghiệp sẵn sàng cho tương lai.","page-index-sections-enterprise-image-alt":"Minh họa một nhóm đang thực hiện một dự án Ethereum quanh một máy tính để bàn","page-index-sections-enterprise-link-text":"Ethereum cho Doanh nghiệp","page-index-sections-enterprise-title":"Doanh nghiệp","page-index-sections-individuals-desc":"Làm quen với Ethereum, Ether, ví, mã thông báo, v. v. để bạn có thể bắt đầu sử dụng các ứng dụng Ethereum.","page-index-sections-individuals-image-alt":"Minh họa một chú chó doge ngồi cạnh máy tính","page-index-sections-individuals-link-text":"Bắt đầu với Ethereum","page-index-sections-individuals-title":"Giới thiệu về Ethereum","page-index-subtitle":"Trên Ethereum, bạn có thể viết mã kiểm soát giá trị kỹ thuật số, chạy chính xác như được lập trình và có thể truy cập ở mọi nơi trên thế giới.","page-index-title":"Ethereum là một nền tảng, nguồn mở toàn cầu cho các ứng dụng phi tập trung.","about-ethereum-org":"Giới thiệu về ethereum.org","about-us":"Về chúng tôi","brand-assets":"Tài sản thương hiệu","community":"Cộng đồng","contact":"Liên hệ","contributing":"Đóng góp","cookie-policy":"Chính sách về Cookie","decentralized-applications-dapps":"Ứng dụng phi tập trung (dapps)","developers":"Nhà phát triển","developers-home":"Trang chủ dành cho nhà phát triển","documentation":"Tài liệu tham khảo","ef-blog":"Blog về Nền tảng Ethereum","eips":"Đề xuất Cải tiến Ethereum","enterprise":"Doanh nghiệp","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Tài sản Thương hiệu Ethereum","ethereum-community":"Cộng đồng Ethereum","ethereum-glossary":"Thuật ngữ về Ethereum","ethereum-wallets":"Ví Ethereum","ethereum-whitepaper":"Sách trắng Ethereum","get-eth":"Tải ETH","get-started":"Bắt đầu","guides-and-resources":"Hướng dẫn và tài nguyên","how-ethereum-works":"Cách Ethereum hoạt động","individuals":"Cá nhân","individuals-menu":"Menu của cá nhân","language-support":"Hỗ trợ ngôn ngữ","languages":"Ngôn ngữ","learn":"Tìm hiểu","learn-by-coding":"Học lập trình","learn-more":"Tìm hiểu thêm","mainnet-ethereum":"Ethereum Mạng chính","nav-beginners":"Người mới bắt đầu","page-404-copy":"Vui lòng sử dụng hộp tìm kiếm ở trên để tìm những gì bạn cần tìm hoặc trở về trang chủ.","page-404-not-found":"Không tìm thấy","page-enterprise":"Doanh nghiệp","page-index":"Ethereum","page-index-section-beginners-item-one":"Bạn chưa từng dùng Etherereum?","page-index-section-beginners-item-three":"Tại sao tôi phải quan tâm?","page-index-section-beginners-item-two":"Ethereum là gì?","page-index-section-beginners-title":"Người mới bắt đầu","page-index-section-developers-item-one":"Hướng dẫn bắt đầu","page-index-section-developers-item-three":"Các công cụ mới nhất cho nhà phát triển","page-index-section-developers-item-two":"Tìm hiểu về hợp đồng thông minh","page-index-section-developers-title":"Dành cho nhà phát triển","page-index-section-enterprise-item-one":"Vì sao nên sử dụng Enterprise Ethereum?","page-index-section-enterprise-item-three":"Cộng đồng nhà phát triển doanh nghiệp","page-index-section-enterprise-item-two":"Tính năng doanh nghiệp","page-index-section-enterprise-title":"Dành cho Doanh nghiệp","page-index-section-individuals-item-one":"Ethereum là gì?","page-index-section-individuals-item-three":"Hướng dẫn và tài nguyên","page-index-section-individuals-item-two":"Sử dụng Ethereum","page-index-section-individuals-title":"Dành cho cá nhân","page-index-section-learn-item-one":"Tài nguyên cho người mới bắt đầu","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"Hôm nay tôi có thể làm gì với Ethereum?","page-index-section-use-item-three":"Ví là gì?","page-index-section-use-item-two":"Làm thế nào để có được ether?","page-index-section-use-title":"Sử dụng","page-last-updated":"Trang cập nhật mới nhất","page-learning-tools-consensys-academy-description":"Trại huấn luyện dành cho nhà phát triển Ethereum trực tuyến","page-learning-tools-cryptozombies-description":"Tìm hiểu Solidity xây dựng trò chơi Zombie của riêng bạn","page-learning-tools-ethernauts-description":"Hoàn thành các cấp độ bằng cách bẻ khóa các hợp đồng thông minh","privacy-policy":"Chính sách quyền riêng tư","private-ethereum":"Ethereum riêng","search":"Tìm kiếm","set-up-local-env":"Thiết lập môi trường cục bộ","stablecoins":"Stablecoin","terms-of-use":"Điều khoản Sử dụng","translation-banner-body-new":"Bạn đang xem trang này bằng tiếng Anh vì chúng tôi chưa dịch trang này. Giúp chúng tôi dịch nội dung này.","translation-banner-body-update":"Có phiên bản mới của trang này nhưng hiện chỉ có bằng tiếng Anh. Giúp chúng tôi dịch phiên bản mới nhất.","translation-banner-button-join-translation-program":"Tham gia chương trình dịch","translation-banner-button-learn-more":"Tìm hiểu thêm","translation-banner-button-see-english":"Xem tiếng Anh","translation-banner-button-translate-page":"Dịch trang","translation-banner-title-new":"Giúp dịch trang này","translation-banner-title-update":"Giúp cập nhật trang này","tutorials":"Hướng dẫn","use":"Sử dụng","use-ethereum":"Sử dụng Ethereum","website-last-updated":"Trang cập nhật mới nhất","what-is-ether":"Ether (ETH) là gì?","what-is-ethereum":"Ethereum là gì?"},"routed":true,"originalPath":"/developers/tutorials/waffle-test-simple-smart-contract/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}