{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/id/developers/tutorials/create-and-deploy-a-defi-app/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/create-and-deploy-a-defi-app/","readingTime":{"minutes":11.31}},"frontmatter":{"title":"Create and deploy a DeFi App","description":"Deposit ERC20 tokens to the smart contract and mint Farm Tokens","lang":"en","tags":["solidity","defi","web3.js","truffle","ganache","smart contracts"],"author":"strykerin","source":"github.com","sourceUrl":"https://github.com/strykerin/DeFi-Token-Farm","skill":"intermediate","published":"2020-12-31T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Create and deploy a DeFi App\",\n  \"description\": \"Deposit ERC20 tokens to the smart contract and mint Farm Tokens\",\n  \"author\": \"strykerin\",\n  \"tags\": [\"solidity\", \"defi\", \"web3.js\", \"truffle\", \"ganache\", \"smart contracts\"],\n  \"skill\": \"intermediate\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"published\": \"2020-12-31T00:00:00.000Z\",\n  \"source\": \"github.com\",\n  \"sourceUrl\": \"https://github.com/strykerin/DeFi-Token-Farm\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial we will build a DeFi Application with Solidity where users can deposit an ERC20 token to the smart contract and it will mint and transfer Farm Tokens to them. The users can later withdraw their ERC20 tokens by burning their Farm Token on smart contract and the ERC20 tokens will be transferred back to them.\"), mdx(\"h2\", {\n    \"id\": \"install-truffle-and-ganache\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#install-truffle-and-ganache\",\n    \"aria-label\": \"install truffle and ganache permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install Truffle and Ganache\"), mdx(\"p\", null, \"If this is the first time you are writing a smart contract, you will need to set up your environment. We are going to use two tools: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/\"\n  }, \"Truffle\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/ganache\"\n  }, \"Ganache\"), \".\"), mdx(\"p\", null, \"Truffle is a development environment and testing framework for developing smart contracts for Ethereum. With Truffle it is easy to build and deploy smart contracts to the blockchain. Ganache allows us to create a local Ethereum blockchain in order to test smart contracts. It simulates the features of the real network and the first 10 accounts are funded with 100 test ether, thus making the smart contract deployment and testing free and easy. Ganache is available as a desktop application and a command-line tool. For this article we will be using the UI desktop application.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2360/1*V1iQ5onbLbT5Ib2QaiOSyg.png\",\n    \"alt\": \"Ganache UI desktop application\"\n  }), mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ganache UI desktop application\")), mdx(\"p\", null, \"To create the project, run the following commands\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir your-project-name\\ncd your-project-name\\ntruffle init\\n\")), mdx(\"p\", null, \"This will create a blank project for the development and deployment of our smart contracts. The created project structure is the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contracts\"), \": Folder for the solidity smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrations\"), \": Folder for the deployment scripts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \": Folder for testing our smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle-config.js\"), \": Truffle configuration file\"))), mdx(\"h2\", {\n    \"id\": \"create-the-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-the-erc20-token\",\n    \"aria-label\": \"create the erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create the ERC20 Token\"), mdx(\"p\", null, \"First we need to create our ERC20 token that we will use to stake on the smart contract. To create our fungible token, we will first need to install the OpenZeppelin library. This library contains the implementations of standards such as the ERC20 and the ERC721. To install it, run the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install @openzeppelin/contracts\\n\")), mdx(\"p\", null, \"Using the OpenZeppelin library we can create our ERC20 token by writing to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contracts/MyToken.sol\"), \" with the following solidity code:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MyToken is ERC20 {\\n    constructor() public ERC20(\\\"MyToken\\\", \\\"MTKN\\\"){\\n        _mint(msg.sender, 1000000000000000000000000);\\n    }\\n}\\n\")), mdx(\"p\", null, \"In the code above on:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 3: We import the contract ERC20.sol from openzeppelin that contains the implementation for this token standard.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 5: We inherit from the ERC20.sol contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 6: We are calling the ERC20.sol constructor and passing for the name and symbol parameters as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"MyToken\\\"\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"MTKN\\\"\"), \" respectively.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 7: We are minting and transferring 1 million tokens for the account that is deploying the smart contract (we are using the default 18 decimals for the ERC20 token, that means that if we want to mint 1 token, you will represent it as 1000000000000000000, 1 with 18 zeros).\"))), mdx(\"p\", null, \"We can see below the ERC20.sol constructor implementation where the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_decimals\"), \" field is set to 18:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"string private _name;\\nstring private _symbol;\\nuint8 private _decimals;\\n\\nconstructor (string memory name_, string memory symbol_) public {\\n    _name = name_;\\n    _symbol = symbol_;\\n    _decimals = 18;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compile-the-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#compile-the-erc20-token\",\n    \"aria-label\": \"compile the erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Compile the ERC20 Token\"), mdx(\"p\", null, \"To compile our smart contract, we must first check our solidity compiler version. You can check that by running the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle version\\n\")), mdx(\"p\", null, \"The default version is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Solidity v0.5.16\"), \". Since our token is written using the solidity version \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.6.2\"), \", if we run the command to compile our contracts we will get a compiler error. In order to specify which solidity compiler version to use, go to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle-config.js\"), \" and set to the desired compiler version as seen below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"// Configure your compilers\\ncompilers: {\\n  solc: {\\n    version: \\\"^0.8.0\\\",    // Fetch exact version from solc-bin (default: truffle's version)\\n    // docker: true,        // Use \\\"0.5.1\\\" you've installed locally with docker (default: false)\\n    // settings: {          // See the solidity docs for advice about optimization and evmVersion\\n    //  optimizer: {\\n    //    enabled: false,\\n    //    runs: 200\\n    //  },\\n    //  evmVersion: \\\"byzantium\\\"\\n    // }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now we can compile our smart contract by running the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle compile\\n\")), mdx(\"h2\", {\n    \"id\": \"deploy-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#deploy-erc20-token\",\n    \"aria-label\": \"deploy erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Deploy ERC20 Token\"), mdx(\"p\", null, \"After compiling, we can now deploy our token.\"), mdx(\"p\", null, \"On the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrations\"), \" folder, create a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2_deploy_Tokens.js\"), \". This file is where we will deploy both our ERC20 Token and our FarmToken smart contract. The code below is used to deploy our MyToken.sol contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\n\\nmodule.exports = async function (deployer, network, accounts) {\\n  // Deploy MyToken\\n  await deployer.deploy(MyToken)\\n  const myToken = await MyToken.deployed()\\n}\\n\")), mdx(\"p\", null, \"Open Ganache and select the option \\\"Quickstart\\\" to start a local Ethereum blockchain. To deploy our contract, run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle migrate\\n\")), mdx(\"p\", null, \"The address used to deploy our contracts is the first one from the list of addresses that Ganache shows us. To verify that, we can open the Ganache desktop application and we can verify that the balance of ether for the first account has been reduced due to the cost of ether to deploy our smart contracts:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2346/1*1iJ9VRlyLuza58HL3DLfpg.png\",\n    \"alt\": \"Ganache desktop application\"\n  }), mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ganache desktop application\")), mdx(\"p\", null, \"To verify that 1 million MyToken tokens have been sent to the deployer address, we can use the Truffle Console to interact with our deployed smart contract.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/docs/truffle/getting-started/using-truffle-develop-and-the-console\"\n  }, \"Truffle Console is a a basic interactive console connecting to any Ethereum client.\"))), mdx(\"p\", null, \"In order to interact with our smart contract, run the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle console\\n\")), mdx(\"p\", null, \"Now we can write the following commands in the terminal:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the smart contract: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"myToken = await MyToken.deployed()\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the array of accounts from Ganache: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accounts = await web3.eth.getAccounts()\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the balance for the first account: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance = await myToken.balanceOf(accounts[0])\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Format the balance from 18 decimals: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"web3.utils.fromWei(balance.toString())\")))), mdx(\"p\", null, \"By running the commands above, we will see that the first address has in fact 1 million MyTokens:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*AQlj9A7dw-qtY4QAD3Bpxw.png\",\n    \"alt\": \"First address has 1000000 MyTokens\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"First address has 1000000 MyTokens\")), mdx(\"h2\", {\n    \"id\": \"create-farmtoken-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-farmtoken-smart-contract\",\n    \"aria-label\": \"create farmtoken smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create FarmToken Smart Contract\"), mdx(\"p\", null, \"The FarmToken smart contract will have 3 functions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance()\"), \": Get the MyToken balance on the FarmToken smart contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \": Transfer MyToken on behalf of the user to the FarmToken smart contract then mint and transfer FarmToken to the user.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withdraw(uint256 _amount)\"), \": Burn user's FarmTokens and transfer MyTokens to the user's address.\"))), mdx(\"p\", null, \"Let's look at the FarmToken constructor:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract FarmToken is ERC20 {\\n    using Address for address;\\n    using SafeMath for uint256; // As of Solidity v0.8.0, mathematical operations can be done safely without the need for SafeMath\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public token;\\n\\n    constructor(address _token)\\n        public\\n        ERC20(\\\"FarmToken\\\", \\\"FRM\\\")\\n    {\\n        token = IERC20(_token);\\n    }\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lines 3-6: We are importing the following contracts from openzeppelin: IERC20.sol, Address.sol, SafeERC20.sol and ERC20.sol.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 8: The FarmToken will inherit from the ERC20 contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lines 14-19: The FarmToken constructor will receive as parameter the address of MyToken contract and we will assign its contract to our public variable called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \".\"))), mdx(\"p\", null, \"Let's implement the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance()\"), \" function. It will receive no parameters and it will return the balance of MyToken on this smart contract. It is implemented as shown below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function balance() public view returns (uint256) {\\n    return token.balanceOf(address(this));\\n}\\n\")), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \" function, it will receive as parameter the amount the user wants to deposit and it will mint and transfer FarmTokens to the user:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function deposit(uint256 _amount) public {\\n    // Amount must be greater than zero\\n    require(_amount > 0, \\\"amount cannot be 0\\\");\\n\\n    // Transfer MyToken to smart contract\\n    token.safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    // Mint FarmToken to msg sender\\n    _mint(msg.sender, _amount);\\n}\\n\")), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withdraw(uint256 _amount)\"), \" function, we will receive as parameter the amount of FarmTokens the user wants to burn and then transfer the same amount of MyTokens back to the user:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function withdraw(uint256 _amount) public {\\n    // Burn FarmTokens from msg sender\\n    _burn(msg.sender, _amount);\\n\\n    // Transfer MyTokens from this smart contract to msg sender\\n    token.safeTransfer(msg.sender, _amount);\\n}\\n\")), mdx(\"p\", null, \"Now we will deploy our smart contract. To do so, we will go back to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2_deploy_Tokens.js\"), \" and add the new contract to be deployed:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (deployer, network, accounts) {\\n  // Deploy MyToken\\n  await deployer.deploy(MyToken)\\n  const myToken = await MyToken.deployed()\\n\\n  // Deploy Farm Token\\n  await deployer.deploy(FarmToken, myToken.address)\\n  const farmToken = await FarmToken.deployed()\\n}\\n\")), mdx(\"p\", null, \"Note that when deploying the FarmToken, we pass as parameter the address of the deployed MyToken contract.\"), mdx(\"p\", null, \"Now, run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle compile\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle migrate\"), \" to deploy our contracts.\"), mdx(\"p\", null, \"Let's test our smart contract. Instead of using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle console\"), \" to interact with our smart contract, we will create a script to automate this process. Create a folder called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scripts\"), \" and add the following file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getMyTokenBalance.js\"), \". It will check the balance of MyTokens on the FarmToken smart contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  myToken = await MyToken.deployed()\\n  farmToken = await FarmToken.deployed()\\n  balance = await myToken.balanceOf(farmToken.address)\\n  console.log(web3.utils.fromWei(balance.toString()))\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To execute this script, run the following cli command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle exec .\\\\scripts\\\\getMyTokenBalance.js\\n\")), mdx(\"p\", null, \"We will get the expected result that is 0. If you get an error about the FarmToken not being deployed yet, the truffle network has not received the latest version of your contract code. Just close truffle, quickstart it again and make sure to run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle migrate\"), \".\"), mdx(\"p\", null, \"Now, let's stake the MyToken to the smart contract. Since the function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \" calls the function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"safeTransferFrom\"), \" from the ERC20, the user must first approve the smart contract to transfer MyToken on the user's behalf. So on the script below, we will first approve this step then we will call the function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  const accounts = await new web3.eth.getAccounts()\\n  const myToken = await MyToken.deployed()\\n  const farmToken = await FarmToken.deployed()\\n\\n  // Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom.\\n  // This is zero by default.\\n  const allowanceBefore = await myToken.allowance(\\n    accounts[0],\\n    farmToken.address\\n  )\\n  console.log(\\n    \\\"Amount of MyToken FarmToken is allowed to transfer on our behalf Before: \\\" +\\n      allowanceBefore.toString()\\n  )\\n\\n  // In order to allow the Smart Contract to transfer to MyToken (ERC-20) on the accounts[0] behalf,\\n  // we must explicitly allow it.\\n  // We allow farmToken to transfer x amount of MyToken on our behalf\\n  await myToken.approve(farmToken.address, web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n\\n  // Validate that the farmToken can now move x amount of MyToken on our behalf\\n  const allowanceAfter = await myToken.allowance(accounts[0], farmToken.address)\\n  console.log(\\n    \\\"Amount of MyToken FarmToken is allowed to transfer on our behalf After: \\\" +\\n      allowanceAfter.toString()\\n  )\\n\\n  // Verify accounts[0] and farmToken balance of MyToken before and after the transfer\\n  balanceMyTokenBeforeAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenBeforeFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\\"*** My Token ***\\\")\\n  console.log(\\n    \\\"Balance MyToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenBeforeAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenBeforeFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeFarmToken.toString())\\n  )\\n  // Call Deposit function from FarmToken\\n  console.log(\\\"Call Deposit Function\\\")\\n  await farmToken.deposit(web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n  console.log(\\\"*** My Token ***\\\")\\n  balanceMyTokenAfterAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenAfterFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance MyToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenAfterAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenAfterFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterFarmToken.toString())\\n  )\\n\\n  // End function\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To run this script: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle exec .\\\\scripts\\\\transferMyTokenToFarmToken.js\"), \". You should see on your console:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*MoekE2QCw7vB98u5dl7ang.png\",\n    \"alt\": \"output of transferMyTokenToFarmToken.js\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output of transferMyTokenToFarmToken.js\")), mdx(\"p\", null, \"As we can see, we have successfully deposited MyTokens to the smart contract as the first account has now FarmTokens.\"), mdx(\"p\", null, \"In order to withdraw:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  const accounts = await new web3.eth.getAccounts()\\n  const myToken = await MyToken.deployed()\\n  const farmToken = await FarmToken.deployed()\\n\\n  // Verify accounts[0] and farmToken balance of MyToken before and after the transfer\\n  balanceMyTokenBeforeAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenBeforeFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\\"*** My Token ***\\\")\\n  console.log(\\n    \\\"Balance MyToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenBeforeAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenBeforeFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeFarmToken.toString())\\n  )\\n\\n  // Call Deposit function from FarmToken\\n  console.log(\\\"Call Withdraw Function\\\")\\n  await farmToken.withdraw(web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n\\n  console.log(\\\"*** My Token ***\\\")\\n  balanceMyTokenAfterAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenAfterFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance MyToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenAfterAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenAfterFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterFarmToken.toString())\\n  )\\n\\n  // End function\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To run this script: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle exec .\\\\scripts\\\\withdrawMyTokenFromTokenFarm.js\"), \". As we can see on the output below, we have successfully got the MyTokens back and we have burned the FarmTokens:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*jHYlTFg0NgGbhASpsRvc0w.png\",\n    \"alt\": \"output of withdrawMyTokenFromTokenFarm.js\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output of withdrawMyTokenFromTokenFarm.js\")), mdx(\"h2\", {\n    \"id\": \"references\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"References\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openzeppelin.com/contracts/3.x/\"\n  }, \"Contracts - OpenZeppelin Docs\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/\"\n  }, \"Sweet Tools for Smart Contracts | Truffle Suite\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/ganache\"\n  }, \"Ganache | Truffle Suite\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://99bitcoins.com/what-is-defi/\"\n  }, \"What is DeFi? A Beginner's Guide (2021 Updated) (99bitcoins.com)\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://defipulse.com/\"\n  }, \"DeFi - The Decentralized Finance Leaderboard at DeFi Pulse\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#install-truffle-and-ganache-install-truffle-and-ganache","title":"Install Truffle and Ganache {#install-truffle-and-ganache}"},{"url":"#create-the-erc20-token-create-the-erc20-token","title":"Create the ERC20 Token {#create-the-erc20-token}"},{"url":"#compile-the-erc20-token-compile-the-erc20-token","title":"Compile the ERC20 Token {#compile-the-erc20-token}"},{"url":"#deploy-erc20-token-deploy-erc20-token","title":"Deploy ERC20 Token {#deploy-erc20-token}"},{"url":"#create-farmtoken-smart-contract-create-farmtoken-smart-contract","title":"Create FarmToken Smart Contract {#create-farmtoken-smart-contract}"},{"url":"#references-references","title":"References {#references}"}]}}},"pageContext":{"slug":"/id/developers/tutorials/create-and-deploy-a-defi-app/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/create-and-deploy-a-defi-app/index.md","intl":{"language":"id","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"1inch-logo":"Logo 1inch","aave-logo":"Logo Aave","about":"Tentang","about-ethereum-org":"Tentang ethereum.org","about-us":"Tentang kami","alt-eth-blocks":"Ilustrasi blok yang diorganisir seperti simbol ETH","aria-toggle-search-button":"Tombol pencarian toggle","aria-toggle-menu-button":"Tombol menu toggle","back-to-top":"Kembali ke atas","banner-page-incomplete":"Halaman ini tidak lengkap dan kami butuh bantuan Anda. Edit halaman ini dan tambahkan apa pun yang menurut Anda berguna bagi orang lain.","beacon-chain":"Rantai Suar","binance-logo":"Logo Binance","bittrex-logo":"Logo Bittrex","brand-assets":"Aset merek","bug-bounty":"Hadiah Bug","coinbase-logo":"Logo Coinbase","coinmama-logo":"Logo Coinmama","community":"Komunitas","community-menu":"Menu Komunitas","compound-logo":"Logo Compound","cons":"Kontra","contact":"Kontak","content-versions":"Versi Konten","contributing":"Berkontribusi","contributors":"Kontributor","contributors-thanks":"Semua orang yang telah berkontribusi pada halaman ini – terima kasih!","cookie-policy":"Kebijakan Cookie","copied":"Disalin","copy":"Salin","dark-mode":"Gelap","data-provided-by":"Sumber data:","decentralized-applications-dapps":"Decentralized applications (dapp)","deposit-contract":"Kontrak deposit","devcon":"Devcon","developer-resources":"Sumber Daya Pengembang","developers":"Pengembang","developers-home":"Beranda Pengembang","docs":"Dokumen","documentation":"Dokumentasi","dydx-logo":"Logo Dydx","ecosystem":"Ekosistem","edit-page":"Edit halaman","ef-blog":"Blog Yayasan Ethereum","eips":"Proposal Penyempurnaan Ethereum","enterprise":"Perusahaan","enterprise-menu":"Menu Perusahaan","esp":"Program Dukungan Ekosistem","eth-current-price":"Harga ETH saat ini (USD)","eth2":"Eth2","eth2-beaconcha-in-desc":"Penjelajah Rantai Suar Eth2 open source","eth2-beaconscan-desc":"Penjelajah Rantai Suar Eth2 – Etherscan untuk Eth2","eth2-become-staker":"Menjadi penaruh","eth2-become-staker-desc":"Penaruhan sudah berjalan! Jika Anda ingin menaruhkan ETH Anda untuk membantu mengamankan jaringan, pastikan Anda mengetahui setiap resikonya.","eth2-explore":"Jelajahi data","eth2-no-action-needed":"Anda tidak perlu melakukan apa pun dengan ETH yang sudah anda miliki. Waspadalah terhadap penipu yang meminta Anda mengirim ETH untuk menukarnya.","eth2-run-beacon-chain":"Operasikan klien suar","eth2-run-beacon-chain-desc":"Ethereum membutuhkan klien yang aktif sebanyak mungkin. Bantu dengan barang publik Ethereum ini!","eth2-service-announcement":"Pengumuman layanan Eth2","eth2-what-shipping":"Kapan pengirimannya?","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Aset Merek Ethereum","ethereum-community":"Komunitas Ethereum","ethereum-foundation":"Yayasan Ethereum","ethereum-foundation-logo":"Logo Yayasan Ethereum","ethereum-glossary":"Glosarium Ethereum","ethereum-governance":"Tata Kelola Ethereum","ethereum-logo":"Logo Ethereum","ethereum-security":"Keamanan dan pencegahan penipuan Ethereum","ethereum-studio":"Studio Ethereum","ethereum-wallets":"Dompet Ethereum","ethereum-whitepaper":"Laporan Resmi Ethereum","example-projects":"Contoh proyek","find-wallet":"Temukan dompet","foundation":"Yayasan","gemini-logo":"Logo Gemini","get-eth":"Dapatkan ETH","get-involved":"Ikut terlibat","get-started":"Mulai","gitcoin-logo":"Logo Gitcoin","glossary":"Glosarium","governance":"Tata Kelola","grants":"Hibah","grant-programs":"Program Hibah Ekosistem","guides-and-resources":"Panduan dan sumber daya komunitas","history":"Riwayat","history-of-ethereum":"Riwayat Ethereum","home":"Beranda","how-ethereum-works":"Cara kerja Ethereum","image":"gambar","in-this-section":"Di bagian ini","individuals":"Individual","individuals-menu":"Menu Individual","jobs":"Pekerjaan","kraken-logo":"Logo Kraken","language-ar":"Arab","language-bg":"Bulgaria","language-bn":"Bengali","language-ca":"Katalan","language-cs":"Ceska","language-de":"Jerman","language-el":"Yunani","language-en":"Inggris","language-es":"Spanyol","language-fa":"Persia","language-fi":"Finlandia","language-fr":"Prancis","language-hu":"Hongaria","language-hr":"Kroasia","language-hi":"Hindi","language-id":"Indonesia","language-ig":"Igbo","language-it":"Italia","language-ja":"Jepang","language-ko":"Korea","language-lt":"Lithuania","language-ml":"Malayalam","language-nb":"Norwegia","language-nl":"Belanda","language-pl":"Polandia","language-pt":"Portugis","language-pt-br":"Portugis (Brasil)","language-ro":"Romania","language-ru":"Rusia","language-se":"Swedia","language-sk":"Slovakia","language-sl":"Slovenia","language-support":"Dukungan Bahasa","language-tr":"Turki","language-uk":"Ukraina","language-vi":"Vietnam","language-zh":"Cina Sederhana","language-zh-tw":"Cina Tradisional","languages":"Bahasa","last-24-hrs":"24 jam terakhir","last-edit":"Terakhir diedit","learn":"Belajar","learn-by-coding":"Belajar melalui pengodean","learn-menu":"Pelajari menu","learn-more":"Pelajari lebih lanjut","less":"Kurangi","light-mode":"Cerah","listing-policy-disclaimer":"Semua produk yang tercantum di halaman ini bukanlah dukungan resmi, dan disediakan dengan tujuan sebagai informasi. Jika Anda ingin menambahkan produk atau memberikan umpan balik tentang kebijakan ini, ajukan masalah di GitHub.","listing-policy-raise-issue-link":"Ajukan masalah","live-help":"Bantuan langsung","live-help-menu":"Menu bantuan langsung","loading":"Memuat...","loading-error":"Kesalahan memuat.","loading-error-refresh":"Gagal, silahkan muat ulang.","logo":"logo","loopring-logo":"Logo Loopring","london-upgrade-banner":"Peningkatan London diluncurkan pada: ","london-upgrade-banner-released":"Peningkatan London telah dirilis!","mainnet-ethereum":"Jaringan Utama Ethereum","makerdao-logo":"Logo MakerDao","matcha-logo":"Logo Matcha","merge":"Gabungkan","more":"Lainnya","nav-beginners":"Pemula","next":"Selanjutnya","oasis-logo":"Logo Oasis","on-this-page":"Pada halaman ini","page-content":"Konten halaman","page-enterprise":"Perusahaan","page-last-updated":"Halaman terakhir kali diperbaharui","previous":"Sebelumnya","privacy-policy":"Kebijakan privasi","private-ethereum":"Ethereum Privat","pros":"Pro","read-more":"Baca lebih lanjut","refresh":"Silahkan muat ulang halaman.","review-progress":"Tinjau kemajuan","search":"Cari","search-box-blank-state-text":"Cari saja!","search-eth-address":"Ini terlihat seperti alamat Ethereum. Kami tidak memberikan data khusus untuk alamat. Coba cari di penjelajah blok seperti","search-no-results":"Tidak ada hasil untuk pencarian Anda","security":"Keamanan","see-contributors":"Lihat kontributor","set-up-local-env":"Setel lingkungan lokal","shard-chains":"Rantai shard","show-all":"Tampilkan semua","show-less":"Tampilkan lebih sedikit","site-description":"Ethereum merupakan suatu platform global terdesentralisasi untuk uang dan jenis aplikasi baru. Di Ethereum, Anda dapat menulis kode yang mengontrol uang, dan membangun aplikasi yang dapat diakses di mana saja di dunia.","site-title":"ethereum.org","stablecoins":"Stablecoin","staking":"Penaruhan","summary":"Ringkasan","terms-of-use":"Ketentuan Penggunaan","transaction-fees":"Apa itu biaya transaksi?","translation-banner-body-new":"Anda melihat halaman ini dalam bahasa Inggris karena kami belum menerjemahkannya. Bantu kami menerjemahkan konten ini.","translation-banner-body-update":"Terdapat versi baru halaman ini namun sementara ini hanya dalam bahasa Inggris. Bantu kami menerjemahkan versi terkini.","translation-banner-button-join-translation-program":"Gabung ke program penerjemahan","translation-banner-button-learn-more":"Pelajari lebih lanjut","translation-banner-button-see-english":"Lihat Bahasa Inggris","translation-banner-button-translate-page":"Terjemahkan halaman","translation-banner-title-new":"Bantu menerjemahkan halaman ini","translation-banner-title-update":"Bantu memperbarui halaman ini","translation-program":"Program Penerjemahan","translation-progress":"Perkembangan penerjemahan","tutorials":"Tutorial","uniswap-logo":"Logo Uniswap","use":"Gunakan","use-ethereum":"Gunakan Ethereum","use-ethereum-menu":"Gunakan menu Ethereum","vision":"Visi","wallets":"Dompet","website-last-updated":"Situs web terakhir kali diperbarui","what-is-ether":"Apa itu ether (ETH)?","what-is-ethereum":"Apa itu Ethereum?","whitepaper":"Laporan Resmi","defi-page":"Decentralized finance (DeFi)","dao-page":"Decentralized autonomous organisations (DAO)","nft-page":"Non-fungible token (NFT)","page-developer-meta-title":"Sumber Daya Pengembang Ethereum","page-developers-about":"Tentang sumber daya pengembang ini","page-developers-about-desc":"ethereum.org hadir membantu Anda membangun dengan Ethereum disertai dokumentasi mengenai konsep dasar serta tumpukan pengembangan. Selain itu ada tutorial untuk membuat Anda siap dan bekerja.","page-developers-about-desc-2":"Terinspirasi oleh Jaringan Pengembang Mozilla, kami pikir Ethereum membutuhkan tempat untuk menampung konten dan sumber daya pengembang yang hebat. Seperti teman-teman kami di Mozilla, semua yang ada di sini bersumber terbuka dan siap untuk Anda kembangkan dan tingkatkan.","page-developers-account-desc":"Kontrak atau orang di jaringan","page-developers-accounts-link":"Akun","page-developers-advanced":"Tingkat Lanjut","page-developers-api-desc":"Menggunakan perpustakaan (library) untuk berinteraksi dengan kontrak pintar","page-developers-api-link":"API Backend","page-developers-aria-label":"Menu Pengembang","page-developers-block-desc":"Sekumpulan transaksi ditambahkan ke blockchain","page-developers-block-explorers-desc":"Portal Anda ke data Ethereum","page-developers-block-explorers-link":"Penjelajah block","page-developers-blocks-link":"Block","page-developers-browse-tutorials":"Jelajah tutorial","page-developers-choose-stack":"Pilih tumpukan Anda","page-developers-contribute":"Berkontribusi","page-developers-dev-env-desc":"IDE yang cocok untuk pengembangan dapp","page-developers-dev-env-link":"Lingkungan pengembangan","page-developers-discord":"Bergabung ke Discord","page-developers-docs-introductions":"Pendahuluan","page-developers-evm-desc":"Komputer yang memproses transaksi","page-developers-evm-link":"Mesin virtual Ethereum (EVM)","page-developers-explore-documentation":"Jelajahi dokumentasi","page-developers-feedback":"Jika Anda memiliki umpan balik, hubungi kami melalui pesan di GitHub atau di server Discord kami.","page-developers-frameworks-desc":"Peralatan untuk membantu mempercepat pengembangan","page-developers-frameworks-link":"Kerangka kerja pengembangan","page-developers-fundamentals":"Dasar-dasar","page-developers-gas-desc":"Diperlukan Ether untuk mendayai transaksi","page-developers-gas-link":"Gas","page-developers-get-started":"Bagaimana Anda ingin memulai?","page-developers-improve-ethereum":"Bantu kami membuat ethereum.org lebih baik","page-developers-improve-ethereum-desc":"Seperti ethereum.org, dokumen ini merupakan suatu upaya komunitas. Buat PR jika Anda melihat kesalahan, ruang untuk perbaikan, atau peluang baru untuk membantu pengembang Ethereum.","page-developers-into-eth-desc":"Pengenalan ke blockchain dan Ethereum","page-developers-intro-dapps-desc":"Pengenalan ke aplikasi terdesentralisasi","page-developers-intro-dapps-link":"Pendahuluan ke dapps","page-developers-intro-eth-link":"Pendahuluan ke Ethereum","page-developers-intro-stack":"Pendahuluan ke tumpukan","page-developers-intro-stack-desc":"Pendahuluan ke tumpukan Ethereum","page-developers-js-libraries-desc":"Menggunakan javascript untuk berinteraksi dengan kontrak pintar","page-developers-js-libraries-link":"Perpustakaan (library) Javascript","page-developers-language-desc":"Menggunakan Ethereum dengan bahasa yang populer","page-developers-languages":"Bahasa pemrograman","page-developers-learn":"Pelajari pengembangan Ethereum","page-developers-learn-desc":"Baca tentang konsep inti dan tumpukan Ethereum dengan dokumen kami","page-developers-learn-tutorials":"Pelajari melalui tutorial","page-developers-learn-tutorials-cta":"Lihat tutorial","page-developers-learn-tutorials-desc":"Pelajari pengembangan Ethereum langkah demi langkah dari pembangun yang telah berhasil melakukannya.","page-developers-meta-desc":"Dokumentasi, tutorial, dan peralatan untuk pengembang yang membangun di Ethereum.","page-developers-mining-desc":"Bagaimana cara blok baru dibuat dan konsensus dicapai","page-developers-mining-link":"Penambangan","page-developers-networks-desc":"Gambaran Mainnet dan jaringan pengujian","page-developers-networks-link":"Jaringan","page-developers-node-clients-desc":"Bagaimana cara blok dan transaksi diverifikasi di jaringan","page-developers-node-clients-link":" Node dan klien","page-developers-oracle-desc":"Memasukkan data diluar blockchain ke dalam kontrak pintar Anda","page-developers-oracles-link":"Oracle","page-developers-play-code":"Bermain dengan kode","page-developers-read-docs":"Baca dokumentasi","page-developers-scaling-desc":"Solusi untuk transaksi lebih cepat","page-developers-scaling-link":"Menskalakan","page-developers-smart-contract-security-desc":"Langkah-langkah keamanan yang perlu dipertimbangkan selama pengembangan","page-developers-smart-contract-security-link":"Keamanan","page-developers-set-up":"Setel lingkungan lokal","page-developers-setup-desc":"Siapkan tumpukan Anda untuk dibangun dengan mengonfigurasi lingkungan pengembangan.","page-developers-smart-contracts-desc":"Logika di balik dapps – perjanjian yang dijalankan sendiri","page-developers-smart-contracts-link":"Kontrak pintar","page-developers-stack":"Tumpukan","page-developers-start":"Mulai bereksperimen","page-developers-start-desc":"Ingin bereksperimen dulu, ajukan pertanyaan nanti?","page-developers-storage-desc":"Bagaimana menangani penyimpanan dapp","page-developers-storage-link":"Penyimpanan","page-developers-subtitle":"Manual pembangun untuk Ethereum. Oleh pembangun, untuk pembangun.","page-developers-title-1":"Ethereum","page-developers-title-2":"pengembang","page-developers-title-3":"sumber Daya","page-developers-token-standards-desc":"Gambaran umum standar token yang diterima","page-developers-token-standards-link":"Standar token","page-developers-transactions-desc":"Cara status Ethereum berubah","page-developers-transactions-link":"Transaksi","page-developers-web3-desc":"Bagaimana dunia pengembangan Web3 berbeda","page-developers-web3-link":"Web2 vs Web3","page-index-hero-image-alt":"Sebuah ilustrasi kota yang futuristik, menggambarkan ekosistem Ethereum.","page-index-meta-description":"Ethereum merupakan suatu platform global terdesentralisasi untuk uang dan jenis aplikasi baru. Di Ethereum, Anda dapat menulis kode yang mengontrol uang, dan membangun aplikasi yang dapat diakses di mana saja di dunia.","page-index-meta-title":"Beranda","page-index-title":"Selamat Datang di Ethereum","page-index-description":"Ethereum adalah teknologi yang dijalankan komunitas yang bergotong royong untuk membangun mata uang kripto, ether (ETH), dan ribuan aplikasi mata uang digital yang terdesentralisasi.","page-index-title-button":"Jelajahi Ethereum","page-index-get-started":"Mulai","page-index-get-started-description":"ethereum.org adalah portal Anda menuju dunia Ethereum. Teknologi ini baru dan terus berkembang – dan berisi panduan untuk membantu Anda. Inilah yang kami sarankan jika Anda ingin menjelajahinya.","page-index-get-started-image-alt":"Ilustrasi seseorang sedang bekerja di depan komputer.","page-index-get-started-wallet-title":"Tentukan dompet","page-index-get-started-wallet-description":"Sebuah dompet memungkinkan Anda terhubung ke Ethereum dan mengelola dana Anda.","page-index-get-started-wallet-image-alt":"Ilustrasi sebuah robot berlemari besi di tubuhnya, menggambarkan sebuah dompet Ethereum.","page-index-get-started-eth-title":"Dapatkan ETH","page-index-get-started-eth-description":"ETH adalah mata uang Ethereum – Anda dapat menggunakannya di dalam aplikasi.","page-index-get-started-eth-image-alt":"Ilustrasi sekelompok orang yang mengagumi simbol ether (ETH).","page-index-get-started-dapps-title":"Gunakan dapp","page-index-get-started-dapps-description":"Dapp adalah aplikasi yang didukung oleh Ethereum. Lihat apa yang dapat Anda lakukan.","page-index-get-started-dapps-image-alt":"Ilustrasi seekor anjing menggunakan komputer.","page-index-get-started-devs-title":"Mulai menyusun","page-index-get-started-devs-description":"Jika Anda ingin memulai pengodean dengan Ethereum, kami memiliki dokumentasi, tutorial, dan lainnya di portal pengembang kami.","page-index-get-started-devs-image-alt":"Ilustrasi sebuah tangan membuat sebuah logo ETH yang terbuat dari batu bata lego.","page-index-what-is-ethereum":"Apa itu Ethereum?","page-index-what-is-ethereum-description":"Ethereum adalah teknologi yang menjadi rumah bagi uang digital, pembayaran global, dan aplikasi. Komunitas ini telah membangun ekonomi digital yang berkembang pesat, memberanikan diri memberi cara-cara jelas bagi pembuat konten untuk menghasilkan uang secara online, dan banyak lagi. Ini terbuka untuk semua orang, di mana pun Anda berada di dunia – yang Anda butuhkan hanyalah internet.","page-index-what-is-ethereum-button":"Apa itu Ethereum?","page-index-what-is-ethereum-secondary-button":"Lebih lanjut mengenai uang digital","page-index-what-is-ethereum-image-alt":"Ilustrasi seorang yang sedang mengintai bazar, yang dimaksudkan untuk menggambarkan Ethereum.","page-index-defi":"Sistem keuangan yang lebih adil","page-index-defi-description":"Saat ini, miliaran orang tidak dapat membuka rekening bank, sementara yang lain pembayarannya diblokir. Sistem keuangan terdesentralisasi (DeFi) Ethereum tidak pernah tidur atau membeda-bedakan. Hanya dengan koneksi internet, Anda dapat mengirim, menerima, meminjam, dan mendapatkan bunga, dan bahkan mengalirkan dana ke mana saja di dunia.","page-index-defi-button":"Jelajahi DeFi","page-index-defi-image-alt":"Ilustrasi tangan yang menyerahkan simbol ETH.","page-index-internet":"Internet terbuka","page-index-internet-description":"Saat ini, kami mendapatkan akses ke layanan internet 'gratis' dengan memberikan kendali atas data pribadi kami. Layanan Ethereum terbuka secara default – yang Anda butuhkan hanyalah dompet. Gratis dan mudah diatur, dengan kendali Anda, dan berfungsi tanpa menyediakan informasi pribadi apa pun.","page-index-internet-button":"Jelajahi internet terbuka","page-index-internet-secondary-button":"Lebih lanjut tentang dompet","page-index-internet-image-alt":"Ilustrasi pengaturan komputer futuristik, didukung oleh kristal Ethereum.","page-index-developers":"Sebuah garda baru bagi pengembangan","page-index-developers-description":"Ethereum dan aplikasinya transparan dan open source. Anda dapat melakukan kode fork dan menggunakan kembali fungsionalitas yang telah dibuat oleh orang lain. Jika Anda tidak mau mempelajari bahasa baru, Anda cukup berinteraksi dengan kode open-source menggunakan JavaScript dan bahasa-bahasa lain yang tersedia.","page-index-developers-button":"Portal pengembang","page-index-developers-code-example-title-0":"Bank Anda sendiri","page-index-developers-code-example-description-0":"Anda dapat membangun bank yang dijalankan dengan logika yang telah Anda programkan.","page-index-developers-code-example-title-1":"Mata uang Anda sendiri","page-index-developers-code-example-description-1":"Anda dapat membuat token yang dapat Anda transfer dan gunakan di seluruh aplikasi.","page-index-developers-code-example-title-2":"Dompet Ethereum JavaScript","page-index-developers-code-example-description-2":"Anda dapat menggunakan bahasa yang ada untuk berinteraksi dengan Ethereum dan aplikasi lainnya.","page-index-developers-code-example-title-3":"DNS terbuka tanpa izin","page-index-developers-code-example-description-3":"Anda dapat membayangkan kembali layanan yang ada sebagai apilkasi terbuka yang terdesentralisasi.","page-index-network-stats-title":"Ethereum sekarang","page-index-network-stats-subtitle":"Statistik jaringan terbaru","page-index-network-stats-eth-price-description":"Harga ETH (USD)","page-index-network-stats-eth-price-explainer":"Harga terbaru untuk 1 ether. Anda dapat membeli paling sedikit 0,000000000000000001 – Anda tidak perlu membeli 1 ETH utuh.","page-index-network-stats-tx-day-description":"Transaksi saat ini","page-index-network-stats-tx-day-explainer":"Jumlah transaksi yang berhasil diproses di jaringan dalam 24 jam terakhir.","page-index-network-stats-value-defi-description":"Nilai terkunci di DeFi (USD)","page-index-network-stats-value-defi-explainer":"Jumlah uang dalam aplikasi terdesentralisasi (DeFi), ekonomi digital Ethereum.","page-index-network-stats-nodes-description":"Node","page-index-network-stats-nodes-explainer":"Ethereum dijalankan oleh ribuan sukarelawan di seluruh dunia, yang dikenal sebagai node.","page-index-touts-header":"Jelajahi ethereum.org","page-index-contribution-banner-title":"Kontribusi ke ethereum.org","page-index-contribution-banner-description":"Situs web ini bersifat open source dengan ratusan kontributor komunitas. Anda dapat mengusulkan perubahan pada konten apa pun di situs ini, menyarankan fitur baru yang keren, atau membantu kami mengatasi bug.","page-index-contribution-banner-image-alt":"Logo Ethereum yang dibuat dari batu bata lego.","page-index-contribution-banner-button":"Lebih lanjut mengenai berkontribusi","page-index-tout-eth2-title":"Tingkatkan pengetahuan Eth2 Anda","page-index-tout-eth2-description":"Ethereum 2.0 adalah program peningkatan yang sudah terhubungkan dirancang untuk membuat Ethereum lebih terukur, aman, dan berkelanjutan.","page-index-tout-eth2-image-alt":"Ilustrasi pesawat luar angkasa yang mewakili peningkatan kekuatan Eth2.","page-index-tout-enterprise-title":"Ethereum untuk perusahaan","page-index-tout-enterprise-description":"Lihat bagaimana Ethereum dapat membuka model bisnis baru, mengurangi biaya, dan menyiapkan bisnis Anda untuk masa depan.","page-index-tout-enterprise-image-alt":"Ilustrasi komputer/perangkat futuristik.","page-index-tout-community-title":"Komunitas Ethereum","page-index-tout-community-description":"Ethereum adalah tentang komunitas. Terdiri dari orang-orang dari semua latar belakang dan minat berbeda. Lihat bagaimana cara Anda dapat bergabung di dalamnya.","page-index-tout-community-image-alt":"Ilustrasi satu grup pembangun yang bekerja bersama.","page-index-nft":"Internet aset","page-index-nft-description":"Ethereum bukan hanya untuk uang digital. Apa pun yang Anda miliki dapat direpresentasikan, dipergadangkan, dan digunakan sebagai non-fungible token (NFT). Anda dapat melakukan tokenisasi karya seni Anda dan mendapatkan royalti secara otomatis setiap kali karya seni itu dijual kembali. Atau gunakan token untuk sesuatu yang Anda miliki untuk mengeluarkan pinjaman. Kemungkinannya terus berkembang setiap saat.","page-index-nft-button":"Lebih lanjut mengenai NFT","page-index-nft-alt":"Logo Eth yang ditampilkan melalui hologram."},"routed":true,"originalPath":"/developers/tutorials/create-and-deploy-a-defi-app/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}