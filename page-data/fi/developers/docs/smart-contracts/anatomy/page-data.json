{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/fi/developers/docs/smart-contracts/anatomy/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/docs/smart-contracts/anatomy/"},"frontmatter":{"title":"Anatomy of smart contracts","description":"An in-depth look into the anatomy of a smart contact – the functions, data, and variables.","lang":"en","incomplete":null,"sidebar":true,"sidebarDepth":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Anatomy of smart contracts\",\n  \"description\": \"An in-depth look into the anatomy of a smart contact – the functions, data, and variables.\",\n  \"lang\": \"en\",\n  \"sidebar\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A smart contract is a program that runs at an address on Ethereum. They're made up of data and functions that can execute upon receiving a transaction. Here's an overview of what makes up a smart contract.\"), mdx(\"h3\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Prerequisites\"), mdx(\"p\", null, \"Make sure you've read about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/\"\n  }, \"smart contracts\"), \" first. This document assumes you're already familiar with programming languages such as JavaScript or Python.\"), mdx(\"h2\", {\n    \"id\": \"data\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#data\",\n    \"aria-label\": \"data permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Data\"), mdx(\"p\", null, \"Any contract data must be assigned to a location: either to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"storage\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"memory\"), \". It's costly to modify storage in a smart contract so you need to consider where your data should live.\"), mdx(\"h3\", {\n    \"id\": \"storage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#storage\",\n    \"aria-label\": \"storage permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Storage\"), mdx(\"p\", null, \"Persistent data is referred to as storage and is represented by state variables. These values get stored permanently on the blockchain. You need to declare the type so that the contract can keep track of how much storage on the blockchain it needs when it compiles.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Solidity example\\ncontract SimpleStorage {\\n    uint storedData; // State variable\\n    // ...\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"# Vyper example\\nstoredData: int128\\n\")), mdx(\"p\", null, \"If you've already programmed object-oriented languages, you'll likely be familiar with most types. However \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"address\"), \" should be new to you if you're new to Ethereum development.\"), mdx(\"p\", null, \"An \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"address\"), \" type can hold an Ethereum address which equates to 20 bytes or 160 bits. It returns in hexadecimal notation with a leading 0x.\"), mdx(\"p\", null, \"Other types include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"boolean\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"integer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fixed point numbers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fixed-size byte arrays\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dynamically-sized byte arrays\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rational and integer literals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"String literals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hexadecimal literals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enums\")), mdx(\"p\", null, \"For more explanation, take a look at the docs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://vyper.readthedocs.io/en/v0.1.0-beta.6/types.html#value-types\"\n  }, \"See Vyper types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://solidity.readthedocs.io/en/latest/types.html#value-types\"\n  }, \"See Solidity types\"))), mdx(\"h3\", {\n    \"id\": \"memory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#memory\",\n    \"aria-label\": \"memory permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Memory\"), mdx(\"p\", null, \"Values that are only stored for the lifetime of a contract function's execution are called memory variables. Since these are not stored permanently on the blockchain, they are much cheaper to use.\"), mdx(\"p\", null, \"Learn more about how the EVM stores data (Storage, Memory, and the Stack) in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://solidity.readthedocs.io/en/latest/introduction-to-smart-contracts.html?highlight=memory#storage-memory-and-the-stack\"\n  }, \"Solidity docs\"), \".\"), mdx(\"h3\", {\n    \"id\": \"environment-variables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#environment-variables\",\n    \"aria-label\": \"environment variables permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Environment variables\"), mdx(\"p\", null, \"In addition to the variables you define on your contract, there are some special global variables. They are primarily used to provide information about the blockchain or current transaction.\"), mdx(\"p\", null, \"Examples:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"Prop\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"State variable\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"Description\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"block.timestamp\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"uint256\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Current block epoch timestamp\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"msg.sender\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"address\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Sender of the message (current call)\")))), mdx(\"h2\", {\n    \"id\": \"functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#functions\",\n    \"aria-label\": \"functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Functions\"), mdx(\"p\", null, \"In the most simplistic terms, functions can get information or set information in response to incoming transactions.\"), mdx(\"p\", null, \"There are two types of function calls:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"internal\"), \" \\u2013 these don't create an EVM call\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal functions and state variables can only be accessed internally (i.e. from within the current contract or contracts deriving from it)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"external\"), \" \\u2013 these do create an EVM call\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"External functions are part of the contract interface, which means they can be called from other contracts and via transactions. An external function \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f\"), \" cannot be called internally (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f()\"), \" does not work, but \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"this.f()\"), \" works).\")))), mdx(\"p\", null, \"They can also be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"private\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"public\"), \" functions can be called internally from within the contract or externally via messages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"private\"), \" functions are only visible for the contract they are defined in and not in derived contracts\")), mdx(\"p\", null, \"Both functions and state variables can be made public or private\"), mdx(\"p\", null, \"Here's a function for updating a state variable on a contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Solidity example\\nfunction update_name(string value) public {\\n    dapp_name = value;\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The parameter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"value\"), \" of type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"string\"), \" is passed into the function: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"update_name\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's declared \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"public\"), \", meaning anyone can access it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's not declared \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"view\"), \", so it can modify the contract state\")), mdx(\"h3\", {\n    \"id\": \"view-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#view-functions\",\n    \"aria-label\": \"view functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"View functions\"), mdx(\"p\", null, \"These functions promise not to modify the state of the contract's data. Common examples are \\\"getter\\\" functions \\u2013 you might use this to receive a user's balance for example.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Solidity example\\nfunction balanceOf(address _owner) public view returns (uint256 _balance) {\\n    return ownerPizzaCount[_owner];\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"dappName: public(string)\\n\\n@view\\n@public\\ndef readName() -> string:\\n  return dappName\\n\")), mdx(\"p\", null, \"What is considered modifying state:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Writing to state variables.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://solidity.readthedocs.io/en/v0.7.0/contracts.html#events\"\n  }, \"Emitting events\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://solidity.readthedocs.io/en/v0.7.0/control-structures.html#creating-contracts\"\n  }, \"Creating other contracts\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"selfdestruct\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Sending ether via calls.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Calling any function not marked\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"view\"), \"\\xA0or\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pure\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using low-level calls.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using inline assembly that contains certain opcodes.\")), mdx(\"h3\", {\n    \"id\": \"constructor-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#constructor-functions\",\n    \"aria-label\": \"constructor functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Constructor functions\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"constructor\"), \" functions are only executed once when the contract is first deployed. Like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"constructor\"), \" in many class-based programming languages, these functions often initialize state variables to their specified values.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Solidity example\\n// Initializes the contract's data, setting the `owner`\\n// to the address of the contract creator.\\nconstructor() public {\\n    // All smart contracts rely on external transactions to trigger its functions.\\n    // `msg` is a global variable that includes relevant data on the given transaction,\\n    // such as the address of the sender and the ETH value included in the transaction.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/units-and-global-variables.html#block-and-transaction-properties\\n    owner = msg.sender;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"# Vyper example\\n\\n@external\\ndef __init__(_beneficiary: address, _bidding_time: uint256):\\n    self.beneficiary = _beneficiary\\n    self.auctionStart = block.timestamp\\n    self.auctionEnd = self.auctionStart + _bidding_time\\n\")), mdx(\"h3\", {\n    \"id\": \"built-in-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#built-in-functions\",\n    \"aria-label\": \"built in functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Built-in functions\"), mdx(\"p\", null, \"In addition to the variables and functions you define on your contract, there are some special built-in functions. The most obvious example is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"address.send()\"), \" \\u2013 Solidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"send(address)\"), \" \\u2013 Vyper\")), mdx(\"p\", null, \"These allow contracts to send ETH to other accounts.\"), mdx(\"h2\", {\n    \"id\": \"writing-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#writing-functions\",\n    \"aria-label\": \"writing functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Writing functions\"), mdx(\"p\", null, \"Your function needs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"parameter variable and type (if it accepts parameters)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"declaration of internal/external\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"declaration of pure/view/payable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"returns type (if it returns a value)\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity >=0.4.0 <=0.6.0;\\n\\ncontract ExampleDapp {\\n    string dapp_name; // state variable\\n\\n    // Called when the contract is deployed and initializes the value\\n    constructor() public {\\n        dapp_name = \\\"My Example dapp\\\";\\n    }\\n\\n    // Get Function\\n    function read_name() public view returns(string) {\\n        return dapp_name;\\n    }\\n\\n    // Set Function\\n    function update_name(string value) public {\\n        dapp_name = value;\\n    }\\n}\\n\")), mdx(\"p\", null, \"A complete contract might look something like this. Here the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"constructor\"), \" function provides an initial value for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dapp_name\"), \" variable.\"), mdx(\"h2\", {\n    \"id\": \"events-and-logs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#events-and-logs\",\n    \"aria-label\": \"events and logs permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Events and logs\"), mdx(\"p\", null, \"Events let you communicate with your smart contract from your frontend or other subscribing applications. When a transaction is mined, smart contracts can emit events and write logs to the blockchain that the frontend can then process.\"), mdx(\"h2\", {\n    \"id\": \"annotated-examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#annotated-examples\",\n    \"aria-label\": \"annotated examples permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Annotated examples\"), mdx(\"p\", null, \"These are some examples written in Solidity. If you'd like to play with the code, you can interact with them in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://remix.ethereum.org\"\n  }, \"Remix\"), \".\"), mdx(\"h3\", {\n    \"id\": \"hello-world\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#hello-world\",\n    \"aria-label\": \"hello world permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Hello world\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Specifies the version of Solidity, using semantic versioning.\\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/layout-of-source-files.html#pragma\\npragma solidity ^0.5.10;\\n\\n// Defines a contract named `HelloWorld`.\\n// A contract is a collection of functions and data (its state).\\n// Once deployed, a contract resides at a specific address on the Ethereum blockchain.\\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/structure-of-a-contract.html\\ncontract HelloWorld {\\n\\n    // Declares a state variable `message` of type `string`.\\n    // State variables are variables whose values are permanently stored in contract storage.\\n    // The keyword `public` makes variables accessible from outside a contract\\n    // and creates a function that other contracts or clients can call to access the value.\\n    string public message;\\n\\n    // Similar to many class-based object-oriented languages, a constructor is\\n    // a special function that is only executed upon contract creation.\\n    // Constructors are used to initialize the contract's data.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#constructors\\n    constructor(string memory initMessage) public {\\n        // Accepts a string argument `initMessage` and sets the value\\n        // into the contract's `message` storage variable).\\n        message = initMessage;\\n    }\\n\\n    // A public function that accepts a string argument\\n    // and updates the `message` storage variable.\\n    function update(string memory newMessage) public {\\n        message = newMessage;\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#token\",\n    \"aria-label\": \"token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Token\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.5.10;\\n\\ncontract Token {\\n    // An `address` is comparable to an email address - it's used to identify an account on Ethereum.\\n    // Addresses can represent a smart contract or an external (user) accounts.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/types.html#address\\n    address public owner;\\n\\n    // A `mapping` is essentially a hash table data structure.\\n    // This `mapping` assigns an unsigned integer (the token balance) to an address (the token holder).\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/types.html#mapping-types\\n    mapping (address => uint) public balances;\\n\\n    // Events allow for logging of activity on the blockchain.\\n    // Ethereum clients can listen for events in order to react to contract state changes.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#events\\n    event Transfer(address from, address to, uint amount);\\n\\n    // Initializes the contract's data, setting the `owner`\\n    // to the address of the contract creator.\\n    constructor() public {\\n        // All smart contracts rely on external transactions to trigger its functions.\\n        // `msg` is a global variable that includes relevant data on the given transaction,\\n        // such as the address of the sender and the ETH value included in the transaction.\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/units-and-global-variables.html#block-and-transaction-properties\\n        owner = msg.sender;\\n    }\\n\\n    // Creates an amount of new tokens and sends them to an address.\\n    function mint(address receiver, uint amount) public {\\n        // `require` is a control structure used to enforce certain conditions.\\n        // If a `require` statement evaluates to `false`, an exception is triggered,\\n        // which reverts all changes made to the state during the current call.\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/control-structures.html#error-handling-assert-require-revert-and-exceptions\\n\\n        // Only the contract owner can call this function\\n        require(msg.sender == owner, \\\"You are not the owner.\\\");\\n\\n        // Enforces a maximum amount of tokens\\n        require(amount < 1e60, \\\"Maximum issuance exceeded\\\");\\n\\n        // Increases the balance of `receiver` by `amount`\\n        balances[receiver] += amount;\\n    }\\n\\n    // Sends an amount of existing tokens from any caller to an address.\\n    function transfer(address receiver, uint amount) public {\\n        // The sender must have enough tokens to send\\n        require(amount <= balances[msg.sender], \\\"Insufficient balance.\\\");\\n\\n        // Adjusts token balances of the two addresses\\n        balances[msg.sender] -= amount;\\n        balances[receiver] += amount;\\n\\n        // Emits the event defined earlier\\n        emit Transfer(msg.sender, receiver, amount);\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"unique-digital-asset\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#unique-digital-asset\",\n    \"aria-label\": \"unique digital asset permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Unique digital asset\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.5.10;\\n\\n// Imports symbols from other files into the current contract.\\n// In this case, a series of helper contracts from OpenZeppelin.\\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/layout-of-source-files.html#importing-other-source-files\\n\\nimport \\\"../node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"../node_modules/@openzeppelin/contracts/introspection/ERC165.sol\\\";\\nimport \\\"../node_modules/@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\n// The `is` keyword is used to inherit functions and keywords from external contracts.\\n// In this case, `CryptoPizza` inherits from the `IERC721` and `ERC165` contracts.\\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#inheritance\\ncontract CryptoPizza is IERC721, ERC165 {\\n    // Uses OpenZeppelin's SafeMath library to perform arithmetic operations safely.\\n    // Learn more: https://docs.openzeppelin.com/contracts/2.x/api/math#SafeMath\\n    using SafeMath for uint256;\\n\\n    // Constant state variables in Solidity are similar to other languages\\n    // but you must assign from an expression which is constant at compile time.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#constant-state-variables\\n    uint256 constant dnaDigits = 10;\\n    uint256 constant dnaModulus = 10 ** dnaDigits;\\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    // Struct types let you define your own type\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/types.html#structs\\n    struct Pizza {\\n        string name;\\n        uint256 dna;\\n    }\\n\\n    // Creates an empty array of Pizza structs\\n    Pizza[] public pizzas;\\n\\n    // Mapping from pizza ID to its owner's address\\n    mapping(uint256 => address) public pizzaToOwner;\\n\\n    // Mapping from owner's address to number of owned token\\n    mapping(address => uint256) public ownerPizzaCount;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) pizzaApprovals;\\n\\n    // You can nest mappings, this example maps owner to operator approvals\\n    mapping(address => mapping(address => bool)) private operatorApprovals;\\n\\n    // Internal function to create a random Pizza from string (name) and DNA\\n    function _createPizza(string memory _name, uint256 _dna)\\n        // The `internal` keyword means this function is only visible\\n        // within this contract and contracts that derive this contract\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#visibility-and-getters\\n        internal\\n        // `isUnique` is a function modifier that checks if the pizza already exists\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/structure-of-a-contract.html#function-modifiers\\n        isUnique(_name, _dna)\\n    {\\n        // Adds Pizza to array of Pizzas and get id\\n        uint256 id = SafeMath.sub(pizzas.push(Pizza(_name, _dna)), 1);\\n\\n        // Checks that Pizza owner is the same as current user\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/control-structures.html#error-handling-assert-require-revert-and-exceptions\\n        assert(pizzaToOwner[id] == address(0));\\n\\n        // Maps the Pizza to the owner\\n        pizzaToOwner[id] = msg.sender;\\n        ownerPizzaCount[msg.sender] = SafeMath.add(\\n            ownerPizzaCount[msg.sender],\\n            1\\n        );\\n    }\\n\\n    // Creates a random Pizza from string (name)\\n    function createRandomPizza(string memory _name) public {\\n        uint256 randDna = generateRandomDna(_name, msg.sender);\\n        _createPizza(_name, randDna);\\n    }\\n\\n    // Generates random DNA from string (name) and address of the owner (creator)\\n    function generateRandomDna(string memory _str, address _owner)\\n        public\\n        // Functions marked as `pure` promise not to read from or modify the state\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#pure-functions\\n        pure\\n        returns (uint256)\\n    {\\n        // Generates random uint from string (name) + address (owner)\\n        uint256 rand = uint256(keccak256(abi.encodePacked(_str))) +\\n            uint256(_owner);\\n        rand = rand % dnaModulus;\\n        return rand;\\n    }\\n\\n    // Returns array of Pizzas found by owner\\n    function getPizzasByOwner(address _owner)\\n        public\\n        // Functions marked as `view` promise not to modify state\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#view-functions\\n        view\\n        returns (uint256[] memory)\\n    {\\n        // Uses the `memory` storage location to store values only for the\\n        // lifecycle of this function call.\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/introduction-to-smart-contracts.html#storage-memory-and-the-stack\\n        uint256[] memory result = new uint256[](ownerPizzaCount[_owner]);\\n        uint256 counter = 0;\\n        for (uint256 i = 0; i < pizzas.length; i++) {\\n            if (pizzaToOwner[i] == _owner) {\\n                result[counter] = i;\\n                counter++;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    // Transfers Pizza and ownership to other address\\n    function transferFrom(address _from, address _to, uint256 _pizzaId) public {\\n        require(_from != address(0) && _to != address(0), \\\"Invalid address.\\\");\\n        require(_exists(_pizzaId), \\\"Pizza does not exist.\\\");\\n        require(_from != _to, \\\"Cannot transfer to the same address.\\\");\\n        require(_isApprovedOrOwner(msg.sender, _pizzaId), \\\"Address is not approved.\\\");\\n\\n        ownerPizzaCount[_to] = SafeMath.add(ownerPizzaCount[_to], 1);\\n        ownerPizzaCount[_from] = SafeMath.sub(ownerPizzaCount[_from], 1);\\n        pizzaToOwner[_pizzaId] = _to;\\n\\n        // Emits event defined in the imported IERC721 contract\\n        emit Transfer(_from, _to, _pizzaId);\\n        _clearApproval(_to, _pizzaId);\\n    }\\n\\n    /**\\n     * Safely transfers the ownership of a given token ID to another address\\n     * If the target address is a contract, it must implement `onERC721Received`,\\n     * which is called upon a safe transfer, and return the magic value\\n     * `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`;\\n     * otherwise, the transfer is reverted.\\n    */\\n    function safeTransferFrom(address from, address to, uint256 pizzaId)\\n        public\\n    {\\n        // solium-disable-next-line arg-overflow\\n        this.safeTransferFrom(from, to, pizzaId, \\\"\\\");\\n    }\\n\\n    /**\\n     * Safely transfers the ownership of a given token ID to another address\\n     * If the target address is a contract, it must implement `onERC721Received`,\\n     * which is called upon a safe transfer, and return the magic value\\n     * `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`;\\n     * otherwise, the transfer is reverted.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 pizzaId,\\n        bytes memory _data\\n    ) public {\\n        this.transferFrom(from, to, pizzaId);\\n        require(_checkOnERC721Received(from, to, pizzaId, _data), \\\"Must implement onERC721Received.\\\");\\n    }\\n\\n    /**\\n     * Internal function to invoke `onERC721Received` on a target address\\n     * The call is not executed if the target address is not a contract\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 pizzaId,\\n        bytes memory _data\\n    ) internal returns (bool) {\\n        if (!isContract(to)) {\\n            return true;\\n        }\\n\\n        bytes4 retval = IERC721Receiver(to).onERC721Received(\\n            msg.sender,\\n            from,\\n            pizzaId,\\n            _data\\n        );\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    // Burns a Pizza - destroys Token completely\\n    // The `external` function modifier means this function is\\n    // part of the contract interface and other contracts can call it\\n    function burn(uint256 _pizzaId) external {\\n        require(msg.sender != address(0), \\\"Invalid address.\\\");\\n        require(_exists(_pizzaId), \\\"Pizza does not exist.\\\");\\n        require(_isApprovedOrOwner(msg.sender, _pizzaId), \\\"Address is not approved.\\\");\\n\\n        ownerPizzaCount[msg.sender] = SafeMath.sub(\\n            ownerPizzaCount[msg.sender],\\n            1\\n        );\\n        pizzaToOwner[_pizzaId] = address(0);\\n    }\\n\\n    // Returns count of Pizzas by address\\n    function balanceOf(address _owner) public view returns (uint256 _balance) {\\n        return ownerPizzaCount[_owner];\\n    }\\n\\n    // Returns owner of the Pizza found by id\\n    function ownerOf(uint256 _pizzaId) public view returns (address _owner) {\\n        address owner = pizzaToOwner[_pizzaId];\\n        require(owner != address(0), \\\"Invalid Pizza ID.\\\");\\n        return owner;\\n    }\\n\\n    // Approves other address to transfer ownership of Pizza\\n    function approve(address _to, uint256 _pizzaId) public {\\n        require(msg.sender == pizzaToOwner[_pizzaId], \\\"Must be the Pizza owner.\\\");\\n        pizzaApprovals[_pizzaId] = _to;\\n        emit Approval(msg.sender, _to, _pizzaId);\\n    }\\n\\n    // Returns approved address for specific Pizza\\n    function getApproved(uint256 _pizzaId)\\n        public\\n        view\\n        returns (address operator)\\n    {\\n        require(_exists(_pizzaId), \\\"Pizza does not exist.\\\");\\n        return pizzaApprovals[_pizzaId];\\n    }\\n\\n    /**\\n     * Private function to clear current approval of a given token ID\\n     * Reverts if the given address is not indeed the owner of the token\\n     */\\n    function _clearApproval(address owner, uint256 _pizzaId) private {\\n        require(pizzaToOwner[_pizzaId] == owner, \\\"Must be pizza owner.\\\");\\n        require(_exists(_pizzaId), \\\"Pizza does not exist.\\\");\\n        if (pizzaApprovals[_pizzaId] != address(0)) {\\n            pizzaApprovals[_pizzaId] = address(0);\\n        }\\n    }\\n\\n    /*\\n     * Sets or unsets the approval of a given operator\\n     * An operator is allowed to transfer all tokens of the sender on their behalf\\n     */\\n    function setApprovalForAll(address to, bool approved) public {\\n        require(to != msg.sender, \\\"Cannot approve own address\\\");\\n        operatorApprovals[msg.sender][to] = approved;\\n        emit ApprovalForAll(msg.sender, to, approved);\\n    }\\n\\n    // Tells whether an operator is approved by a given owner\\n    function isApprovedForAll(address owner, address operator)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        return operatorApprovals[owner][operator];\\n    }\\n\\n    // Takes ownership of Pizza - only for approved users\\n    function takeOwnership(uint256 _pizzaId) public {\\n        require(_isApprovedOrOwner(msg.sender, _pizzaId), \\\"Address is not approved.\\\");\\n        address owner = this.ownerOf(_pizzaId);\\n        this.transferFrom(owner, msg.sender, _pizzaId);\\n    }\\n\\n    // Checks if Pizza exists\\n    function _exists(uint256 pizzaId) internal view returns (bool) {\\n        address owner = pizzaToOwner[pizzaId];\\n        return owner != address(0);\\n    }\\n\\n    // Checks if address is owner or is approved to transfer Pizza\\n    function _isApprovedOrOwner(address spender, uint256 pizzaId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        address owner = pizzaToOwner[pizzaId];\\n        // Disable solium check because of\\n        // https://github.com/duaraghav8/Solium/issues/175\\n        // solium-disable-next-line operator-whitespace\\n        return (spender == owner ||\\n            this.getApproved(pizzaId) == spender ||\\n            this.isApprovedForAll(owner, spender));\\n    }\\n\\n    // Check if Pizza is unique and doesn't exist yet\\n    modifier isUnique(string memory _name, uint256 _dna) {\\n        bool result = true;\\n        for (uint256 i = 0; i < pizzas.length; i++) {\\n            if (\\n                keccak256(abi.encodePacked(pizzas[i].name)) ==\\n                keccak256(abi.encodePacked(_name)) &&\\n                pizzas[i].dna == _dna\\n            ) {\\n                result = false;\\n            }\\n        }\\n        require(result, \\\"Pizza with such name already exists.\\\");\\n        _;\\n    }\\n\\n    // Returns whether the target address is a contract\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 size;\\n        // Currently there is no better way to check if there is a contract in an address\\n        // than to check the size of the code at that address.\\n        // See https://ethereum.stackexchange.com/a/14016/36603\\n        // for more details about how this works.\\n        // TODO Check this again before the Serenity release, because all addresses will be\\n        // contracts then.\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"further-reading\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#further-reading\",\n    \"aria-label\": \"further reading permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Further reading\"), mdx(\"p\", null, \"Check out Solidity and Vyper's documentation for a more complete overview of smart contracts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://solidity.readthedocs.io/\"\n  }, \"Solidity\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://vyper.readthedocs.io/\"\n  }, \"Vyper\"))), mdx(\"h2\", {\n    \"id\": \"related-topics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-topics\",\n    \"aria-label\": \"related topics permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/docs/smart-contracts/\"\n  }, \"Smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/docs/evm/\"\n  }, \"Ethereum Virtual Machine\"))), mdx(\"h2\", {\n    \"id\": \"related-tutorials\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-tutorials\",\n    \"aria-label\": \"related tutorials permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related tutorials\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/downsizing-contracts-to-fight-the-contract-size-limit/\"\n  }, \"Downsizing contracts to fight the contract size limit\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\u2013 Some practical tips for reducing the size of your smart contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/logging-events-smart-contracts/\"\n  }, \"Logging data from smart contracts with events\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\u2013 An introduction to smart contract events and how you can use them to log data.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/interact-with-other-contracts-from-solidity/\"\n  }, \"Interact with other contracts from Solidity\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\u2013 How to deploy a smart contract from an existing contract and interact with it.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#prerequisites-prerequisites","title":"Prerequisites {#prerequisites}"}]},{"url":"#data-data","title":"Data {#data}","items":[{"url":"#storage-storage","title":"Storage {#storage}"},{"url":"#memory-memory","title":"Memory {#memory}"},{"url":"#environment-variables-environment-variables","title":"Environment variables {#environment-variables}"}]},{"url":"#functions-functions","title":"Functions {#functions}","items":[{"url":"#view-functions-view-functions","title":"View functions {#view-functions}"},{"url":"#constructor-functions-constructor-functions","title":"Constructor functions {#constructor-functions}"},{"url":"#built-in-functions-built-in-functions","title":"Built-in functions {#built-in-functions}"}]},{"url":"#writing-functions-writing-functions","title":"Writing functions {#writing-functions}"},{"url":"#events-and-logs-events-and-logs","title":"Events and logs {#events-and-logs}"},{"url":"#annotated-examples-annotated-examples","title":"Annotated examples {#annotated-examples}","items":[{"url":"#hello-world-hello-world","title":"Hello world {#hello-world}"},{"url":"#token-token","title":"Token {#token}"},{"url":"#unique-digital-asset-unique-digital-asset","title":"Unique digital asset {#unique-digital-asset}"}]},{"url":"#further-reading-further-reading","title":"Further reading {#further-reading}"},{"url":"#related-topics-related-topics","title":"Related topics {#related-topics}"},{"url":"#related-tutorials-related-tutorials","title":"Related tutorials {#related-tutorials}"}]}}},"pageContext":{"slug":"/fi/developers/docs/smart-contracts/anatomy/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/docs/smart-contracts/anatomy/index.md","intl":{"language":"fi","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"about-ethereum-org":"Tietoa ethereum.org:sta","about-us":"Tietoa meistä","brand-assets":"Brändivarat","community":"Yhteisö","contact":"Ota yhteyttä","contributing":"Osallistu projektiin","cookie-policy":"Evästekäytäntö","decentralized-applications-dapps":"Hajautetut sovellukset (dapps)","developers":"Kehittäjät","developers-home":"Kehittäjien etusivu","documentation":"Dokumentaatio","ef-blog":"Ethereum Foundationin blogi","eips":"Ethereum-parannusehdotukset","enterprise":"Yrityksille","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Ethereum-mediapankki","ethereum-community":"Ethereumin yhteisö","ethereum-glossary":"Ethereum-sanasto","ethereum-wallets":"Ethereum-lompakot","ethereum-whitepaper":"Ethereum-tietopaketti","get-eth":"Hanki ETH:iä","get-started":"Aloittaminen","guides-and-resources":"Oppaat ja resurssit","how-ethereum-works":"Kuinka Ethereum toimii","individuals":"Yksityishenkilöille","individuals-menu":"Yksityishenkilöiden valikko","language-support":"Tuetut kielet","languages":"Kielet","learn":"Opi","learn-by-coding":"Opi koodaamalla","learn-more":"Opi lisää","mainnet-ethereum":"Mainnet Ethereum","nav-beginners":"Aloittelijat","page-404-copy":"Käytä yllä olevaa hakukenttää löytääksesi mitä etsit, tai palaa kotiin.","page-404-not-found":"Ei löytynyt","page-enterprise":"Yrityksille","page-index":"Ethereum","page-index-section-beginners-item-one":"Täysin uusi Ethereumiin?","page-index-section-beginners-item-three":"Miksi välittäisin?","page-index-section-beginners-item-two":"Mikä on Ethereum?","page-index-section-beginners-title":"Aloittelijat","page-index-section-developers-item-one":"Aloitusoppaat","page-index-section-developers-item-three":"Uusimmat kehittäjätyökalut","page-index-section-developers-item-two":"Opi ohjelmoimaan älysopimuksia","page-index-section-developers-title":"Kehittäjille","page-index-section-enterprise-item-one":"Miksi Ethereum yrityksille?","page-index-section-enterprise-item-three":"Yrityskehitysyhteisö","page-index-section-enterprise-item-two":"Yritysominaisuudet","page-index-section-enterprise-title":"Yritykselle","page-index-section-individuals-item-one":"Mikä on Ethereum?","page-index-section-individuals-item-three":"Oppaat ja resurssit","page-index-section-individuals-item-two":"Käytä Ethereumia","page-index-section-individuals-title":"Yksityishenkilöille","page-index-section-learn-item-one":"Aloittelijan resurssit","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"Mitä voin tehdä Ethereumilla tänään?","page-index-section-use-item-three":"Mikä on lompakko?","page-index-section-use-item-two":"Kuinka saan Etheriä?","page-index-section-use-title":"Käytä","page-last-updated":"Sivu viimeksi päivitetty","page-learning-tools-consensys-academy-description":"Ethereum-intensiivikurssi kehittäjille verkossa","page-learning-tools-cryptozombies-description":"Opi rakentamaan oma zombiepeli Solidityllä","page-learning-tools-ethernauts-description":"Läpäise tasoja hakkeroimalla älysopimuksia","privacy-policy":"Tietosuojakäytäntö","private-ethereum":"Yksityinen Ethereum","search":"Hae","set-up-local-env":"Asenna paikallinen ympäristö","stablecoins":"Vakausvaluutat","terms-of-use":"Käyttöehdot","translation-banner-body-new":"Katselet tätä sivua englanniksi, koska emme ole vielä kääntäneet sitä. Auta meitä kääntämään tämä sisältö.","translation-banner-body-update":"Tästä sivusta on uusi versio, mutta se on tällä hetkellä vain englanniksi. Auta meitä kääntämään uusin versio.","translation-banner-button-join-translation-program":"Liity käännösprojektiin","translation-banner-button-learn-more":"Opi lisää","translation-banner-button-see-english":"Näytä englanniksi","translation-banner-button-translate-page":"Käännä sivu","translation-banner-title-new":"Auta kääntämään tämä sivu","translation-banner-title-update":"Auta päivittämään tämä sivu","tutorials":"Tutoriaalit","use":"Käytä","use-ethereum":"Käytä Ethereumia","website-last-updated":"Sivu viimeksi päivitetty","what-is-ether":"Mikä on ether (ETH)?","what-is-ethereum":"Mikä on Ethereum?","page-developer-meta-title":"Ethereumin kehittäjäresurssit","page-developers-about":"Tietoja kehittäjien resursseista","page-developers-about-desc":"ethereum.org on täällä auttamassa sinua rakentamaan Ethereum-sovelluksia. Löydät dokumentaatiota peruskäsitteistä ja kehittäjätyökaluista. Lisäksi saatavilla on aloitusoppaita, jotka auttavat sinua pääsemään vauhtiin nopeasti.","page-developers-about-desc-2":"Mozilla Developer Networkin innoittamana ajattelimme, että Ethereum tarvitsee paikan, joka tarjoaa hyödyllistä sisältöä ja resursseja kehittäjille. Kuten ystävämme Mozillalla, kaikki täällä on avoimesti käytettävissä, laajennettavissa ja parannettavissa.","page-developers-account-desc":"Verkostossa olevat sopimukset tai henkilöt","page-developers-accounts-link":"Tilit","page-developers-advanced":"Edistyneille","page-developers-api-desc":"Kirjastojen käyttäminen älysopimusten kanssa","page-developers-api-link":"Backend API:t","page-developers-aria-label":"Kehittäjien valikko","page-developers-block-desc":"Lohkoketjuun lisättyjen tapahtumien osat","page-developers-block-explorers-desc":"Portaali Ethereum-tietoihin","page-developers-block-explorers-link":"Lohkoselaimet","page-developers-blocks-link":"Lohkot","page-developers-browse-tutorials":"Selaa oppaita","page-developers-choose-stack":"Valitse kehitystyökalusi","page-developers-contribute":"Osallistu","page-developers-dev-env-desc":"Dapp-kehitykseen soveltuvat IDE:t","page-developers-dev-env-link":"Kehitysympäristöt","page-developers-discord":"Liity Discordiin","page-developers-docs-introductions":"Johdanto","page-developers-evm-desc":"Tietokone, joka käsittelee tapahtumia","page-developers-evm-link":"Ethereum-virtuaalikone (EVM)","page-developers-explore-documentation":"Tutustu dokumentaatioon","page-developers-feedback":"Jos sinulla on palautetta, ota meihin yhteyttä GitHub-ongelman tai Discord-palvelimen kautta.","page-developers-frameworks-desc":"Kehityksen nopeuttamiseen tähtäävät työkalut","page-developers-frameworks-link":"Kehityskehykset","page-developers-fundamentals":"Perusteet","page-developers-gas-desc":"Ether, jota käytetään transaktiomaksuna","page-developers-gas-link":"Kaasu","page-developers-get-started":"Miten haluat aloittaa?","page-developers-improve-ethereum":"Auta meitä parantamaan ethereum.org:ia","page-developers-improve-ethereum-desc":"Kuten ethereum.org, nämä dokumentit ovat yhteisön ponnisteluja. Luo PR, jos löydät virheitä, tilaa parannuksille tai uusia mahdollisuuksia auttaa Ethereum-kehittäjiä.","page-developers-into-eth-desc":"Johdanto lohkoketjuihin ja Ethereumiin","page-developers-intro-dapps-desc":"Johdanto hajautettuihin sovelluksiin","page-developers-intro-dapps-link":"Johdanto dappeihin","page-developers-intro-eth-link":"Johdanto Ethereumiin","page-developers-intro-stack":"Johdanto kehitystyökaluihin","page-developers-intro-stack-desc":"Johdanto Ethereum-pinoon","page-developers-js-libraries-desc":"Javascriptin käyttäminen älysopimusten kanssa","page-developers-js-libraries-link":"Javascript-kirjastot","page-developers-language-desc":"Ethereumin käyttäminen tutuilla kielillä","page-developers-languages":"Ohjelmointikielet","page-developers-learn":"Opi Ethereum-kehittämistä","page-developers-learn-desc":"Lue dokumentaatiomme ydinkäsitteistä ja Ethereum-kehityspinosta","page-developers-learn-tutorials":"Opi tutoriaalien avulla","page-developers-learn-tutorials-cta":"Katso oppaita","page-developers-learn-tutorials-desc":"Opi Ethereum-kehittämistä askel askeleelta muilta kehittäjiltä, jotka ovat jo päässeet vauhtiin.","page-developers-meta-desc":"Dokumentaatio, oppaat ja työkalut kehittäjille Ethereumin rakentamiseen.","page-developers-mining-desc":"Uusien lohkojen luominen ja yhteisymmärryksen saavuttaminen","page-developers-mining-link":"Louhinta","page-developers-networks-desc":"Yleiskatsaus mainnetista ja testiverkoista","page-developers-networks-link":"Verkot","page-developers-node-clients-desc":"Lohkojen ja tapahtumien todentaminen verkossa","page-developers-node-clients-link":" Solmut ja asiakkaat","page-developers-oracle-desc":"Ketjujen ulkopuolisen datan tuominen älysopimuksiin","page-developers-oracles-link":"Oraakkelit","page-developers-play-code":"Leiki koodilla","page-developers-read-docs":"Lue dokumentaatio","page-developers-scaling-desc":"Ratkaisut nopeampiin tapahtumiin","page-developers-scaling-link":"Skaalaus","page-developers-smart-contract-security-desc":"Kehityksen aikana huomioitavat turvatoimet","page-developers-smart-contract-security-link":"Turvallisuus","page-developers-set-up":"Asenna paikallinen ympäristö","page-developers-setup-desc":"Valmistele työkalut rakentamiseen määrittämällä kehitysympäristö.","page-developers-smart-contracts-desc":"Dappsin taustalla oleva logiikka – itse toteutetut sopimukset","page-developers-smart-contracts-link":"Älysopimukset","page-developers-stack":"Pino","page-developers-start":"Aloita kokeileminen","page-developers-start-desc":"Haluatko kokeilla ensin ja kysyä myöhemmin?","page-developers-storage-desc":"Dapp-tallennustilan käsitteleminen","page-developers-storage-link":"Tallennustila","page-developers-subtitle":"Ethereum-kehittäjän opas. Kehittäjiltä kehittäjille.","page-developers-title-1":"Ethereum","page-developers-title-2":"kehittäjä","page-developers-title-3":"resurssit","page-developers-token-standards-desc":"Yleiskatsaus hyväksytyistä token-standardeista","page-developers-token-standards-link":"Token-standardit","page-developers-transactions-desc":"Ethereumin tilamuutokset","page-developers-transactions-link":"Tapahtumat","page-developers-web3-desc":"Miten web3:n kehitysmaailma on erilainen","page-developers-web3-link":"Web2 ja Web3","page-index-hero-image-alt":"ethereum.org herokuva","page-index-meta-description":"Ethereum on maailmanlaajuinen, hajautettu alusta rahaa ja uudenlaisia sovelluksia varten. Ethereumin avulla voit kirjoittaa rahaa säätelevää koodia, ja rakentaa sovelluksia kaikkialle maailmaan.","page-index-meta-title":"Etusivu","page-index-sections-developers-desc":"Opi Ethereumin taustalla olevasta teknologiasta ja sen sovelluksista, jotta voit aloittaa työskentelyn sen parissa.","page-index-sections-developers-image-alt":"Kuvitus kädestä, joka rakentaa Ethereum-merkkiä legopalikoista","page-index-sections-developers-link-text":"Aloita rakentaminen","page-index-sections-developers-title":"Kehittäjät","page-index-sections-enterprise-desc":"Katso, miten Ethereum voi avata uusia liiketoimintamalleja, vähentää kustannuksia ja mahdollistaa tulevaisuuden kestävää liiketoimintaa.","page-index-sections-enterprise-image-alt":"Kuvistus ryhmästä, joka työstää Ethereum-projektia kannettavalla tietokoneella","page-index-sections-enterprise-link-text":"Ethereum yrityksille","page-index-sections-enterprise-title":"Yrityksille","page-index-sections-individuals-desc":"Tutustu Ethereumiin, Etheriin, lompakoihin, tokeneihin ja muihin käsitteisiin, jotta pääset alkuun Ethereum-sovellusten käyttämisessä.","page-index-sections-individuals-image-alt":"Kuvitus koirasta, joka istuu tietokoneen ääressä","page-index-sections-individuals-link-text":"Aloita Ethereumin kanssa","page-index-sections-individuals-title":"Tietoja Ethereumista","page-index-subtitle":"Ethereumilla voit kirjoittaa koodia, joka ohjaa digitaalista arvoa, joka suoritetaan juuri kuten se on ohjelmoitu ja joka on käytettävissä kaikkialla maailmalla.","page-index-title":"Ethereum on kansainvälinen avoimen lähdekoodin alusta hajautetuille sovelluksille."},"routed":true,"originalPath":"/developers/docs/smart-contracts/anatomy/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}