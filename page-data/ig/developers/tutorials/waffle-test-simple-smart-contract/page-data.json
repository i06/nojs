{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/ig/developers/tutorials/waffle-test-simple-smart-contract/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/waffle-test-simple-smart-contract/","readingTime":{"minutes":6.145}},"frontmatter":{"title":"Testing simple smart contract with Waffle library","description":"Tutorial for beginners","lang":"en","tags":["smart contracts","solidity","Waffle","testing"],"author":"Ewa Kowalska","source":null,"sourceUrl":null,"skill":"beginner","published":"2021-02-26T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Testing simple smart contract with Waffle library\",\n  \"description\": \"Tutorial for beginners\",\n  \"author\": \"Ewa Kowalska\",\n  \"tags\": [\"smart contracts\", \"solidity\", \"Waffle\", \"testing\"],\n  \"skill\": \"beginner\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"published\": \"2021-02-26T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"in-this-tutorial-youll-learn-how-to\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#in-this-tutorial-youll-learn-how-to\",\n    \"aria-label\": \"in this tutorial youll learn how to permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"In this tutorial you'll learn how to\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test the changes of wallet balance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test emission of events with specified arguments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Assert that a transaction was reverted\")), mdx(\"h2\", {\n    \"id\": \"assumptions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#assumptions\",\n    \"aria-label\": \"assumptions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Assumptions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can create a new JavaScript or TypeScript project\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have some basic experience with tests in Javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have used some package managers like yarn or npm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You possess very basic knowledge of smart contracts and Solidity\")), mdx(\"h1\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Getting started\"), mdx(\"p\", null, \"The tutorial demonstrates test setup and run using yarn, but there is no problem if you prefer npm - I will provide proper references to the official Waffle \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/index.html\"\n  }, \"documentation\"), \".\"), mdx(\"h2\", {\n    \"id\": \"install-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#install-dependencies\",\n    \"aria-label\": \"install dependencies permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install Dependencies\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#installation\"\n  }, \"Add\"), \" ethereum-waffle and typescript dependencies to the dev dependencies of your project.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"yarn add --dev ethereum-waffle ts-node typescript @types/jest\\n\")), mdx(\"h2\", {\n    \"id\": \"example-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example-smart-contract\",\n    \"aria-label\": \"example smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example smart contract\"), mdx(\"p\", null, \"During the tutorial we'll work on a simple smart contract example - EtherSplitter. It does not much apart from allowing anyone to send some wei and split it evenly between two predefined receivers.\\nThe split function requires the number of wei to be even, otherwise it will revert. For both receivers it performs a wei transfer followed by emission of the Transfer event.\"), mdx(\"p\", null, \"Place the snippet of EtherSplitter code in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/EtherSplitter.sol\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.0;\\n\\ncontract EtherSplitter {\\n    address payable receiver1;\\n    address payable receiver2;\\n\\n    event Transfer(address from, address to, uint256 amount);\\n\\n    constructor(address payable _address1, address payable _address2) public {\\n        receiver1 = _address1;\\n        receiver2 = _address2;\\n    }\\n\\n    function split() public payable {\\n        require(msg.value % 2 == 0, 'Uneven wei amount not allowed');\\n        receiver1.transfer(msg.value / 2);\\n        emit Transfer(msg.sender, receiver1, msg.value / 2);\\n        receiver2.transfer(msg.value / 2);\\n        emit Transfer(msg.sender, receiver2, msg.value / 2);\\n    }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compile-the-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#compile-the-contract\",\n    \"aria-label\": \"compile the contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Compile the contract\"), mdx(\"p\", null, \"To \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#compiling-the-contract\"\n  }, \"compile\"), \" the contract add the following entry to the package.json file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"scripts\\\": {\\n    \\\"build\\\": \\\"waffle\\\"\\n  }\\n\")), mdx(\"p\", null, \"Next, create the Waffle configuration file in the project root directory - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"waffle.json\"), \" - and then paste the following configuration there:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"compilerType\\\": \\\"solcjs\\\",\\n  \\\"compilerVersion\\\": \\\"0.6.2\\\",\\n  \\\"sourceDirectory\\\": \\\"./src\\\",\\n  \\\"outputDirectory\\\": \\\"./build\\\"\\n}\\n\")), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn build\"), \". As the result, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" directory will appear with the EtherSplitter compiled contract in JSON format.\"), mdx(\"h2\", {\n    \"id\": \"test-setup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#test-setup\",\n    \"aria-label\": \"test setup permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Test setup\"), mdx(\"p\", null, \"Testing with Waffle requires using Chai matchers and Mocha, so you need to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#writing-tests\"\n  }, \"add\"), \" them to your project. Update your package.json file and add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \" entry in the scripts part:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"scripts\\\": {\\n    \\\"build\\\": \\\"waffle\\\",\\n    \\\"test\\\": \\\"export NODE_ENV=test && mocha -r ts-node/register 'test/**/*.test.ts'\\\"\\n  }\\n\")), mdx(\"p\", null, \"If you want to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#running-tests\"\n  }, \"execute\"), \" your tests, just run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn test\"), \" .\"), mdx(\"h1\", {\n    \"id\": \"testing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#testing\",\n    \"aria-label\": \"testing permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Testing\"), mdx(\"p\", null, \"Now create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \" directory and create the new file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\\\\EtherSplitter.test.ts\"), \".\\nCopy the snippet below and paste it to our test file.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { expect, use } from \\\"chai\\\"\\nimport { Contract } from \\\"ethers\\\"\\nimport { deployContract, MockProvider, solidity } from \\\"ethereum-waffle\\\"\\nimport EtherSplitter from \\\"../build/EtherSplitter.json\\\"\\n\\nuse(solidity)\\n\\ndescribe(\\\"Ether Splitter\\\", () => {\\n  const [sender, receiver1, receiver2] = new MockProvider().getWallets()\\n  let splitter: Contract\\n\\n  beforeEach(async () => {\\n    splitter = await deployContract(sender, EtherSplitter, [\\n      receiver1.address,\\n      receiver2.address,\\n    ])\\n  })\\n\\n  // add the tests here\\n})\\n\")), mdx(\"p\", null, \"A few words before we start.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MockProvider\"), \" comes up with a mock version of the blockchain. It also delivers mock wallets that will serve us for testing EtherSplitter contract. We can get up to ten wallets by calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getWallets()\"), \" method on the provider. In the example, we get three wallets - for the sender and for two receivers.\"), mdx(\"p\", null, \"Next, we declare a variable called 'splitter' - this is our mock EtherSplitter contract. It is created before each execution of a single test by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deployContract\"), \" method. This method simulates deployment of a contract from the wallet passed as the first parameter (sender's wallet in our case). The second parameter is the ABI and the bytecode of the tested contract - we pass there the json file of the compiled EtherSplitter contract from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" directory. The third parameter is an array with the contract's constructor arguments, which in our case, are the two addresses of the receivers.\"), mdx(\"h2\", {\n    \"id\": \"changebalances\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#changebalances\",\n    \"aria-label\": \"changebalances permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"changeBalances\"), mdx(\"p\", null, \"First, we will check if the split method actually changes the balances of receivers' wallets. If we split 50 wei from senders account, we would expect the balances of both receivers to increase by 25 wei. We will use Waffle's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalances\"), \" matcher:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Changes accounts balances\\\", async () => {\\n  await expect(() => splitter.split({ value: 50 })).to.changeBalances(\\n    [receiver1, receiver2],\\n    [25, 25]\\n  )\\n})\\n\")), mdx(\"p\", null, \"As the first parameter of the matcher, we pass an array of receivers' wallets, and as the second - an array of expected increases on corresponding accounts.\\nIf we wanted to check the balance of one specific wallet, we could also use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalance\"), \" matcher, which does not require passing arrays, as in the example below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Changes account balance\\\", async () => {\\n  await expect(() => splitter.split({ value: 50 })).to.changeBalance(\\n    receiver1,\\n    25\\n  )\\n})\\n\")), mdx(\"p\", null, \"Note that in both cases of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalance\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalances\"), \" we pass the split function as a callback because the matcher needs to access the state of balances before and after the call.\"), mdx(\"p\", null, \"Next, we'll test if the Transfer event was emitted after each transfer of wei. We'll turn to another matcher from Waffle:\"), mdx(\"h2\", {\n    \"id\": \"emit\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#emit\",\n    \"aria-label\": \"emit permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Emit\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Emits event on the transfer to the first receiver\\\", async () => {\\n  await expect(splitter.split({ value: 50 }))\\n    .to.emit(splitter, \\\"Transfer\\\")\\n    .withArgs(sender.address, receiver1.address, 25)\\n})\\n\\nit(\\\"Emits event on the transfer to the second receiver\\\", async () => {\\n  await expect(splitter.split({ value: 50 }))\\n    .to.emit(splitter, \\\"Transfer\\\")\\n    .withArgs(sender.address, receiver2.address, 25)\\n})\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"emit\"), \" matcher allows us to check if a contract emitted an event on calling a method. As the parameters to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"emit\"), \" matcher, we provide the mock contract that we predict to emit the event, along with the name of that event. In our case, the mock contract is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"splitter\"), \" and the name of the event - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Transfer\"), \". We can also verify the precise values of arguments that the event was emitted with - we pass as many arguments to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withArgs\"), \" matcher, as our event declaration expects. In case of EtherSplitter contract, we pass the addresses of the sender and the receiver along with the transferred wei amount.\"), mdx(\"h2\", {\n    \"id\": \"revertedwith\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#revertedwith\",\n    \"aria-label\": \"revertedwith permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"revertedWith\"), mdx(\"p\", null, \"As the last example, we'll check if the transaction was reverted in case of uneven number of wei. We'll use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"revertedWith\"), \" matcher:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Reverts when Vei amount uneven\\\", async () => {\\n  await expect(splitter.split({ value: 51 })).to.be.revertedWith(\\n    \\\"Uneven wei amount not allowed\\\"\\n  )\\n})\\n\")), mdx(\"p\", null, \"The test, if passed, will assure us that the transaction was reverted indeed. However, there must be also an exact match between the messages that we passed in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" statement and the message we expect in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"revertedWith\"), \". If we go back to the code of EtherSplitter contract, in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" statement for the wei amount, we provide the message: 'Uneven wei amount not allowed'. This matches the message we expect in our test. If they were not equal, the test would fail.\"), mdx(\"h1\", {\n    \"id\": \"congratulations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#congratulations\",\n    \"aria-label\": \"congratulations permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Congratulations!\"), mdx(\"p\", null, \"You've made your first big step towards testing smart contracts with Waffle! You might be interested in other Waffle tutorials:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/testing-erc-20-tokens-with-waffle/\"\n  }, \"Testing ERC20 with Waffle\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/waffle-dynamic-mocking-and-testing-calls/#gatsby-focus-wrapper\"\n  }, \"Waffle: Dynamic mocking and testing contract calls\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/waffle-hello-world-with-buidler-tutorial/\"\n  }, \"Waffle say hello world tutorial with hardhat and ethers\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#in-this-tutorial-youll-learn-how-to-in-this-tutorial-youll-learn-how-to","title":"In this tutorial you'll learn how to {#in-this-tutorial-youll-learn-how-to}"},{"url":"#assumptions-assumptions","title":"Assumptions {#assumptions}"}]},{"url":"#getting-started-getting-started","title":"Getting started {#getting-started}","items":[{"url":"#install-dependencies-install-dependencies","title":"Install Dependencies {#install-dependencies}"},{"url":"#example-smart-contract-example-smart-contract","title":"Example smart contract {#example-smart-contract}"},{"url":"#compile-the-contract-compile-the-contract","title":"Compile the contract {#compile-the-contract}"},{"url":"#test-setup-test-setup","title":"Test setup {#test-setup}"}]},{"url":"#testing-testing","title":"Testing {#testing}","items":[{"url":"#changebalances-changebalances","title":"changeBalances {#changebalances}"},{"url":"#emit-emit","title":"Emit {#emit}"},{"url":"#revertedwith-revertedwith","title":"revertedWith {#revertedwith}"}]},{"url":"#congratulations-congratulations","title":"Congratulations! {#congratulations}"}]}}},"pageContext":{"slug":"/ig/developers/tutorials/waffle-test-simple-smart-contract/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/waffle-test-simple-smart-contract/index.md","intl":{"language":"ig","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"about-ethereum-org":"Banyere ethereum.org","about-us":"Ihe gbasara anyi","community":"Ndi otu nwere otu mmasi","contact":"Ihe mkpoturu","contributing":"Itu utu","cookie-policy":"Nkwuputa nke Cookie na aru oru","decentralized-applications-dapps":"Ngwa komputa na aru oru na sistemu komputa (dapps)","developers":"Ndị mmeputa","developers-home":"Isi ulo oru ndi Mmeputa","documentation":"Akwukwo ntuaka","ef-blog":"Ebe mbido Bloogu nke Ethereum","eips":"Mmelite Atumatu aro nke Ethereum","ethereum":"Ethereum","ethereum-2-0":"Ethereum nke 2.0","ethereum-brand-assets":"Ihe Njirimara Ethereum","ethereum-community":"Ndi otu Ethereum nwere otu mmasi","ethereum-glossary":"Okwunkowa Ethereum","ethereum-wallets":"Akpaego Ethereum","ethereum-whitepaper":"Akwukwo akuko","get-eth":"Nweta ETH","get-started":"Bido oru","guides-and-resources":"Ntuziaka na ebe ihe enyemaka","how-ethereum-works":"Otu esi Ethereum arụ ọrụ","language-support":"Nkwado Asusu","languages":"Asusu gasi","learn":"Mụta","learn-by-coding":"Muta ihe site na eji koodu","learn-more":"Learn more","mainnet-ethereum":"Ethereum Bloockchainu na enyefe ego","nav-beginners":"Ndị mbido","page-enterprise":"Azumahia","page-index":"Ethereum","page-index-section-beginners-item-one":"Ethereum ohuru ohuru?","page-index-section-beginners-item-three":"Gịnị mere m ga-eji lebara ya anya?","page-index-section-beginners-item-two":"Gini bu Ethereum?","page-index-section-beginners-title":"Ndị mbido","page-index-section-developers-item-one":"Na-amalite ntuziaka","page-index-section-developers-item-three":"Ngwa ọhụrụ Onye nrụpụta","page-index-section-developers-item-two":"Mụta ịhazi mmebi iwu smart","page-index-section-developers-title":"Maka Ndị Mmepe","page-index-section-enterprise-item-one":"","page-index-section-enterprise-item-three":"","page-index-section-enterprise-item-two":"","page-index-section-enterprise-title":"","page-index-section-learn-item-one":"Nmalite nke mmalite","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"Kedu ihe m ga - eme Ethereum taa?","page-index-section-use-item-three":"Gini bu obere akpa?","page-index-section-use-item-two":"Kedu ka m ga esi nweta ether?","page-index-section-use-title":"Jiri","page-last-updated":"Peeji emelitere emelitere ikpeazụ","privacy-policy":"Iwu ihe nzuzo","private-ethereum":"Ethereun nke onwe","search":"Ochucho","set-up-local-env":"Hazie gburugburu ebeulo","stablecoins":"Crptocurrency ana etinye na udi aku ndi ozo","terms-of-use":"Iwu nkwekorita maka Ojiji","translation-banner-body-new":"I na elele peeji a na asusu Bekee maka na anyi atugharibeghi ya. Nyere anyi aka tugharia asusu odinaya a.","translation-banner-body-update":"Enwere udi ohuru nke peeji a mana o no naani na asusu Bekee ugbu a. Nyere anyi aka tugharia nke kachasi ohuru.","translation-banner-button-join-translation-program":"Sonye mmemme ntughari asusu","translation-banner-button-learn-more":"Mutakwuo","translation-banner-button-see-english":"Lee Bekee","translation-banner-button-translate-page":"Tugharia peeji","translation-banner-title-new":"Nye aka tugharia asusu peeji a","translation-banner-title-update":"Nye aka tinye ozi ohuru na peeji a","tutorials":"Ihe omumu na aka onye nkuzi","use":"Jiri","use-ethereum":"Jiri Ethereum","website-last-updated":"Weebụsaịtị gara aga emelitere emelitere","what-is-ether":"Gini bu ether (ETH)?","what-is-ethereum":"Gini bu Ethereum?","page-developer-meta-title":"Ebe Ntụziaka Mmepụta Thereum","page-developers-about":"Banyere ebe ntụziaka mmepụta a","page-developers-about-desc":"ethereum.org di ebe a iji nyere gị aka ruo na Ethereum na dọkụmentì ncheputa echiche nke mbu yana ngwaọrụ eji arụpụta weebusaiti. Nakwa enwere nkuzi ga enyere gị aka ibido iru oru.","page-developers-about-desc-2":"Nke ndị Mmepụta Netwoọk Mozilla kpalitere mmụọ ya, anyị chere na Ethereum chọrọ ebe ọga edebe oke mmepụta odinaya yana ebe ntụziaka gasị. Dikà enyi anyị na Mozilla, ihe niile di ebe a bu nke di adị n'efu ma di njikere ka i gbàtịa ma melite.","page-developers-account-desc":"Nkwekọrịta gasi ma ọ bụ onye mmadụ no na netwọk","page-developers-accounts-link":"Akaụntụ","page-developers-advanced":"Emelitere","page-developers-api-desc":"Eji oba akwukwo ekwuritara mmemme na aru oru na blockchain","page-developers-api-link":"Ebe nchekwa data APIs","page-developers-aria-label":"Ndepụta nhọrọ mmemme ndi Mmeputa","page-developers-block-desc":"Mkpọkọta azụmahịa etinyèrè na blockchain","page-developers-block-explorers-desc":"Uzo isi aga na data Ethereum","page-developers-block-explorers-link":"Gbochie ndị na-eme nchọpụta","page-developers-blocks-link":"Blooku gasi","page-developers-browse-tutorials":"Chọgharịa ihe nkuzi gasi","page-developers-choose-stack":"Hazie nhọrọ gị","page-developers-contribute":"Tuo utu","page-developers-dev-env-desc":"IDEs kwesiri ekwesi maka mmepe ngwa kòmpụtà ahazighariri","page-developers-dev-env-link":"Gburugburu ebe mmepe","page-developers-discord":"Sonye ebe nkata","page-developers-docs-introductions":"Iwebada","page-developers-evm-desc":"Kọmputa nke na-ahazi azụmahịa","page-developers-evm-link":"(EVM) Ethererun na eme ka kọmputa ezigbo kọmputa","page-developers-explore-documentation":"Mee nchọpụta dọkụmentì ahu","page-developers-feedback":"O buru na enwere nzaghachi o bula, kpọtụrụ anyị na nchọta ihe GitHub màọbụ sava ebe nkata.","page-developers-frameworks-desc":"Ngwaọrụ eji enye aka eme ka mmepe na aga ọsisọ","page-developers-frameworks-link":"Usoro echiche mmepụta","page-developers-fundamentals":"Isi iwu","page-developers-gas-desc":"Ether chọrọ ike azụmahịa","page-developers-gas-link":"Onụahịa\n","page-developers-get-started":"Kedu etu i ga achọ isi ebido?","page-developers-improve-ethereum":"Nyere anyị aka mee ka ethereum.org di mma","page-developers-improve-ethereum-desc":"Dikà ethereum.or, dọkụmentì a bu mbò ndị otu intaneti. Mepụta PR ma oburu na i huru njehie, ohere mmelite, màọbụ ohere ọhụrụ iji nyere ndị mmepụta Ethereum aka.","page-developers-into-eth-desc":"Okwu iwebata blockchain na Ethereum","page-developers-intro-dapps-desc":"Okwu iwebata nhazighariri ngwa kọmputa","page-developers-intro-dapps-link":"Okwu iwebadat Ngwa komputa ahazighariri ","page-developers-intro-eth-link":"Okwu nwebata Ethereum","page-developers-intro-stack":"Okwu iwebata nhazi","page-developers-intro-stack-desc":"Okwu iwebata nhazi Ethereum","page-developers-js-libraries-desc":"Eji javascript ekwuritara nkwekọrịta azụmahịa na emere onwe ya","page-developers-js-libraries-link":"Oba akwukwo javascript","page-developers-language-desc":"Eji Ethereum na asusu ama ama","page-developers-languages":"Emepụta asụsụ kọmputa","page-developers-learn":"Muta ka esi emeputa Ethereum","page-developers-learn-desc":"Gụọ gbasara isi nchepụta echiche na nhazi Ethereum na dọkụmentì anyị","page-developers-learn-tutorials":"Muta site na nkuzi","page-developers-learn-tutorials-cta":"Lelee nkuzi gasi","page-developers-learn-tutorials-desc":"Mụta mmepe Ethereum otu nzọụkwụ n'otu oge site na aka ndị nrupụta ndị merela ya.","page-developers-meta-desc":"Enweta akwụkwọ ozi, nkuzi gasị, na ngwaọrụ maka ndị mmepụta oru na Ethereum.","page-developers-mining-desc":"Etu esi emepụta blooku ọhụrụ ma nweta nkwekọrịta mmadụ niile","page-developers-mining-link":"Mmepụta azụmahịa","page-developers-networks-desc":"Nchịkọta Bloockchain na enyefe ego na nnwàle netwoọk","page-developers-networks-link":"Netwoọk gasi","page-developers-node-clients-desc":"Etu esi ama ma blọọkụ na azụmahịa o bu eziokwu na netwoọk","page-developers-node-clients-link":" Ebe nzukọ na ndị ahịa gasị","page-developers-oracle-desc":"Ịhapụ chain data n'ime nkwekọrịta azụmahịa gị","page-developers-oracles-link":"Oracles","page-developers-play-code":"Jiri koodù gwurịta egwu","page-developers-read-docs":"Gụọ dọkụmentì","page-developers-scaling-desc":"Aziza maka azụmahịa ngwa ngwa","page-developers-scaling-link":"Nbawanye ikike","page-developers-smart-contract-security-desc":"Ihe nchekwa aga atule n'oge mmepe","page-developers-smart-contract-security-link":"Nche","page-developers-set-up":"Hazie gburugburu ebeulo","page-developers-setup-desc":"Nweta nhazi gị n ‘njikere maka iru site na ihazi gburugburu mmepe.","page-developers-smart-contracts-desc":"Ezi echiche dabere na ngwa kòmpụtà ahazighariri - nkwekorita ana emezuru onwe","page-developers-smart-contracts-link":"Nkwekọrịta azụmahịa na emere onwe ya","page-developers-stack":"Nhazi ahu","page-developers-start":"Bido na-eme nnwale","page-developers-start-desc":"I chọrọ ibu ụzọ anwale, juo ajụjụ mgbe emesia?","page-developers-storage-desc":"Etu esi eme echebe ngwa kòmpụtà ahazighariri","page-developers-storage-link":"Nchebe","page-developers-subtitle":"Akwụkwọ ntụziaka ndị nrupụta maka Ethereum. Site n'aka ndị nrupụta, maka ndị nrupụta.","page-developers-title-1":"Ethereum","page-developers-title-2":"onye mmepụta","page-developers-title-3":"ego","page-developers-token-standards-desc":"Nchịkọta ihe nnochi anya ego anabatara","page-developers-token-standards-link":"Ogo idị mma nnochianya ego anabatara","page-developers-transactions-desc":"Etu ọnọdụ Ethereum si agbanwe","page-developers-transactions-link":"Azụmahịa","page-developers-web3-desc":"Etu mmepe uwa web3 siri di iche","page-developers-web3-link":"Web2 vs Web3","page-index-hero-image-alt":"eserese dike ethereum.org","page-index-meta-description":"Ethereum bu ụzọ zuru ụwa nile, nke akwadopụtàrà maka ego na ụdịrị ngwa kòmpụtà ọhụrụ. Na Ethereum, ị nwere ike ide koodù na-achịkwa ego, ma ruo ngwa kòmpụtà ndị enwere ike inweta ebe ọ bụla n’ ụwa.","page-index-meta-title":"Peeji weebusaiti","page-index-sections-developers-desc":"Mụta banyere teknuzu dabere na Ethereum na ngwa kòmpụtà ya ka inwe ike ibido ruwa oru na ya.","page-index-sections-developers-image-alt":"Ihe ngosi eji aka arụ Ethereum glyph nke ejiri lego brik ruo","page-index-sections-developers-link-text":"Bido ruwa","page-index-sections-developers-title":"Ndị mmeputa","page-index-sections-enterprise-desc":"Hụ otu Ethereum nwere ike isi mepee ụdị azụmaahịa ọhụụ, belata ọnụahịa gị yana gosipụta azụmaahịa gị n'ọdịnihu.","page-index-sections-enterprise-image-alt":"Ihe ngos otu na-arụ ọrụ na arumaru Ethereum na akuku laptọọpụ","page-index-sections-enterprise-link-text":"Ethereum maka ụlọ ọrụ","page-index-sections-enterprise-title":"Azụmahịa","page-index-sections-individuals-desc":"Mee ka imara Ethereum, Ether, akpa ego intaneti, nnochianya ego na ihe ndị ọzọ ka ị wee malite eji ngwa komputa Ethereum.","page-index-sections-individuals-image-alt":"Ihe ngosi nkịta doge nọ odu na kòmpụtà","page-index-sections-individuals-link-text":"Bido oru na Ethereum","page-index-sections-individuals-title":"Banyere Ethereum","page-index-subtitle":"Na Ethereum, ị nwere ike ide koodu na-achịkwa uru dijitalụ, na aru oru dika esi hazie ya, ma ana enweta ya na ebe obula na ụwa niile.","page-index-title":"Ethereum bụ ebe nweta meghere emeghe nke uwa niile maka nhazighari ngwa komputa."},"routed":true,"originalPath":"/developers/tutorials/waffle-test-simple-smart-contract/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}