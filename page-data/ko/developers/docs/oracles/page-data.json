{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/ko/developers/docs/oracles/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/docs/oracles/"},"frontmatter":{"title":"Oracles","description":"Oracles help get real-world data into your Ethereum application because smart contracts can't query real-world data on their own.","lang":"en","incomplete":true,"sidebar":true,"sidebarDepth":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Oracles\",\n  \"description\": \"Oracles help get real-world data into your Ethereum application because smart contracts can't query real-world data on their own.\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"incomplete\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Oracles are data feeds that connect Ethereum to off-chain, real-world information so that you can query data in your smart contracts. For example, prediction market dapps use oracles to settle payments based on events. A prediction market may ask you to bet your ETH on who will become the next president of the United States. They'll use an oracle to confirm the outcome and payout to the winners.\"), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Prerequisites\"), mdx(\"p\", null, \"Make sure you're familiar with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/nodes-and-clients/\"\n  }, \"nodes\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/consensus-mechanisms/\"\n  }, \"consensus mechanisms\"), \", and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/anatomy/\"\n  }, \"smart contract anatomy\"), \", specifically events.\"), mdx(\"h2\", {\n    \"id\": \"what-is-an-oracle\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#what-is-an-oracle\",\n    \"aria-label\": \"what is an oracle permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"What is an oracle\"), mdx(\"p\", null, \"An oracle is a bridge between the blockchain and the real world. They act as on-chain APIs you can query to get information into your smart contracts. This could be anything from price information to weather reports. Oracles can also be bi-directional, used to \\\"send\\\" data out to the real world.\"), mdx(\"p\", null, \"Watch Patrick explain Oracles:\"), mdx(\"iframe\", {\n    width: \"100%\",\n    height: \"315px\",\n    src: \"https://www.youtube.com/embed/ZJfkNzyO7-U?start=10\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }), mdx(\"h2\", {\n    \"id\": \"why-are-they-needed\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#why-are-they-needed\",\n    \"aria-label\": \"why are they needed permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Why are they needed?\"), mdx(\"p\", null, \"With a blockchain like Ethereum, you need every node in the network to replay every transaction and end up with the same result, guaranteed. APIs introduce potentially variable data. If you were sending ETH based on an agreed $USD value using a price API, the query would return a different result from one day to the next. Not to mention, the API could be hacked or deprecated. If this happens, the nodes in the network wouldn't be able to agree on Ethereum's current state, effectively breaking \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/consensus-mechanisms/\"\n  }, \"consensus\"), \".\"), mdx(\"p\", null, \"Oracles solve this problem by posting the data on the blockchain. So any node replaying the transaction will use the same immutable data that's posted for all to see. To do this, an oracle is typically made up of a smart contract and some off-chain components that can query APIs, then periodically send transactions to update the smart contract's data.\"), mdx(\"h3\", {\n    \"id\": \"oracle-problem\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#oracle-problem\",\n    \"aria-label\": \"oracle problem permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"The oracle problem\"), mdx(\"p\", null, \"As we mentioned, Ethereum transactions cannot access off-chain data directly. At the same time, relying on a single source of truth to provide data is insecure and invalidates the decentralization of a smart contract. This is known as the oracle problem.\"), mdx(\"p\", null, \"We can avoid the oracle problem by using a decentralized oracle that pulls from multiple data sources; if one data source is hacked or fails, the smart contract will still function as intended.\"), mdx(\"h3\", {\n    \"id\": \"security\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#security\",\n    \"aria-label\": \"security permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Security\"), mdx(\"p\", null, \"An oracle is only as secure as its data source(s). If a dapp uses Uniswap as an oracle for its ETH/DAI price feed, an attacker can move the price on Uniswap to manipulate the dapp's understanding of the current price. An example of how to combat this is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.makerdao.com/feeds/\"\n  }, \"a feed system\"), \" like the one used by MakerDAO, which collates price data from many external price feeds instead of just relying on a single source.\"), mdx(\"h3\", {\n    \"id\": \"architecture\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#architecture\",\n    \"aria-label\": \"architecture permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Architecture\"), mdx(\"p\", null, \"This is an example of a simple Oracle architecture, but there are more ways than this to trigger off-chain computation.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Emit a log with your \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/docs/smart-contracts/anatomy/#events-and-logs\"\n  }, \"smart contract event\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"An off-chain service has subscribed (usually using something like the JSON-RPC \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eth_subscribe\"), \" command) to these specific logs.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The off-chain service proceeds to do some tasks as defined by the log.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The off-chain service responds with the data requested in a secondary transaction to the smart contract.\")), mdx(\"p\", null, \"This is how to get data in a 1 to 1 manner, however to improve security you may want to decentralize how you collect your off-chain data.\"), mdx(\"p\", null, \"The next step might be to have a network of these nodes making these calls to different APIs and sources, and aggregating the data on-chain.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.chain.link/off-chain-reporting-live-on-mainnet/\"\n  }, \"Chainlink Off-Chain Reporting\"), \" (Chainlink OCR) has improved on this methodology by having the off-chain oracle network communicate with each other, cryptographically sign their responses, aggregate their responses off-chain, and send only one transaction on-chain with the result. This way, less gas is spent, but you still get the guarantee of decentralized data since every node has signed their part of the transaction, making it unchangeable by the node sending the transaction. The escalation policy kicks in if the node doesn't transact, and the next node sends the transaction.\"), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#usage\",\n    \"aria-label\": \"usage permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Usage\"), mdx(\"p\", null, \"Using services like Chainlink, you can reference decentralized data on-chain that has already been pulled from the real world and aggregated. Sort of like a public commons, but for decentralized data. You can also build your own modular oracle networks to get any customized data you're looking for. In addition, you can do off-chain computation and send information to the real world as well. Chainlink has the infrastructure in place to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://chain.link/solutions/defi\"\n  }, \"Get crypto price feeds in your contract\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://chain.link/solutions/chainlink-vrf\"\n  }, \"Generate verifiable random numbers (useful for gaming)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.chain.link/docs/request-and-receive-data\"\n  }, \"Call external APIs\"), \"\\n\\u2013 One novel use of this is \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cointelegraph.com/news/1b-in-wrapped-bitcoin-now-being-audited-using-chainlink-s-proof-of-reserve\"\n  }, \"Checking wBTC reserves\"))), mdx(\"p\", null, \"Here is an example of how to get the latest ETH price in your smart contract using a Chainlink price feed:\"), mdx(\"h3\", {\n    \"id\": \"chainlink-data-feeds\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#chainlink-data-feeds\",\n    \"aria-label\": \"chainlink data feeds permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Chainlink Data Feeds\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract PriceConsumerV3 {\\n\\n    AggregatorV3Interface internal priceFeed;\\n\\n    /**\\n     * Network: Kovan\\n     * Aggregator: ETH/USD\\n     * Address: 0x9326BFA02ADD2366b30bacB125260Af641031331\\n     */\\n    constructor() public {\\n        priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331);\\n    }\\n\\n    /**\\n     * Returns the latest price\\n     */\\n    function getLatestPrice() public view returns (int) {\\n        (\\n            uint80 roundID,\\n            int price,\\n            uint startedAt,\\n            uint timeStamp,\\n            uint80 answeredInRound\\n        ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n}\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://remix.ethereum.org/#version=soljson-v0.6.7+commit.b8d736ae.js&optimize=false&evmVersion=null&gist=0c5928a00094810d2ba01fd8d1083581\"\n  }, \"You can test this in remix with this link\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.chain.link/docs/get-the-latest-price\"\n  }, \"View the docs\")), mdx(\"h3\", {\n    \"id\": \"chainlink-vrf\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#chainlink-vrf\",\n    \"aria-label\": \"chainlink vrf permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Chainlink VRF\"), mdx(\"p\", null, \"Chainlink VRF (Verifiable Random Function) is a provably-fair and verifiable source of randomness designed for smart contracts. Smart contract developers can use Chainlink VRF as a tamper-proof random number generation (RNG) to build reliable smart contracts for any applications which rely on unpredictable outcomes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Blockchain games and NFTs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Random assignment of duties and resources (e.g. randomly assigning judges to cases)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choosing a representative sample for consensus mechanisms\")), mdx(\"p\", null, \"Random numbers are difficult because blockchains are deterministic.\"), mdx(\"p\", null, \"Working with Chainlink Oracles outside of data feeds follows the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.chain.link/docs/architecture-request-model\"\n  }, \"request and receive cycle\"), \" of working with Chainlink. They use the LINK token to send oracle providers oracle gas for returning responses. The LINK token is specifically designed to work with oracles and are based on the upgraded ERC-677 token, which is backwards compatible with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/standards/tokens/erc-20/\"\n  }, \"ERC-20\"), \".\\nThe following code, if deployed on the Kovan testnet will retrieve a cryptographically proven random number. To make the request, fund the contract with some testnet LINK token that you can get from the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kovan.chain.link/\"\n  }, \"Kovan LINK Faucet\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"\\npragma solidity 0.6.6;\\n\\nimport \\\"@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\\\";\\n\\ncontract RandomNumberConsumer is VRFConsumerBase {\\n\\n    bytes32 internal keyHash;\\n    uint256 internal fee;\\n\\n    uint256 public randomResult;\\n\\n    /**\\n     * Constructor inherits VRFConsumerBase\\n     *\\n     * Network: Kovan\\n     * Chainlink VRF Coordinator address: 0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9\\n     * LINK token address:                0xa36085F69e2889c224210F603D836748e7dC0088\\n     * Key Hash: 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4\\n     */\\n    constructor()\\n        VRFConsumerBase(\\n            0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9, // VRF Coordinator\\n            0xa36085F69e2889c224210F603D836748e7dC0088  // LINK Token\\n        ) public\\n    {\\n        keyHash = 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4;\\n        fee = 0.1 * 10 ** 18; // 0.1 LINK (varies by network)\\n    }\\n\\n    /**\\n     * Requests randomness from a user-provided seed\\n     */\\n    function getRandomNumber(uint256 userProvidedSeed) public returns (bytes32 requestId) {\\n        require(LINK.balanceOf(address(this)) >= fee, \\\"Not enough LINK - fill contract with faucet\\\");\\n        return requestRandomness(keyHash, fee, userProvidedSeed);\\n    }\\n\\n    /**\\n     * Callback function used by VRF Coordinator\\n     */\\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\\n        randomResult = randomness;\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"chainlink-api-call\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#chainlink-api-call\",\n    \"aria-label\": \"chainlink api call permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Chainlink API Call\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.chain.link/docs/make-a-http-get-request\"\n  }, \"Chainlink API Calls\"), \" are the easiest way to get data from the off-chain world in the traditional way the web works: API calls. Doing a single instance of this and having only one oracle makes it centralized by nature. To keep it truly decentralized, a smart contract platform would need to use numerous nodes found in an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://market.link/\"\n  }, \"external data market\"), \".\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://remix.ethereum.org/#version=soljson-v0.6.7+commit.b8d736ae.js&optimize=false&evmVersion=null&gist=8a173a65099261582a652ba18b7d96c1\"\n  }, \"Deploy the following code in remix on the kovan network to test\")), mdx(\"p\", null, \"This also follows the request and receive cycle of oracles and needs the contract to be funded with Kovan LINK (the oracle gas) to work.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"pragma solidity ^0.6.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.6/ChainlinkClient.sol\\\";\\n\\ncontract APIConsumer is ChainlinkClient {\\n\\n    uint256 public volume;\\n\\n    address private oracle;\\n    bytes32 private jobId;\\n    uint256 private fee;\\n\\n    /**\\n     * Network: Kovan\\n     * Oracle: 0x2f90A6D021db21e1B2A077c5a37B3C7E75D15b7e\\n     * Job ID: 29fa9aa13bf1468788b7cc4a500a45b8\\n     * Fee: 0.1 LINK\\n     */\\n    constructor() public {\\n        setPublicChainlinkToken();\\n        oracle = 0x2f90A6D021db21e1B2A077c5a37B3C7E75D15b7e;\\n        jobId = \\\"29fa9aa13bf1468788b7cc4a500a45b8\\\";\\n        fee = 0.1 * 10 ** 18; // 0.1 LINK\\n    }\\n\\n    /**\\n     * Create a Chainlink request to retrieve API response, find the target\\n     * data, then multiply by 1000000000000000000 (to remove decimal places from data).\\n     */\\n    function requestVolumeData() public returns (bytes32 requestId)\\n    {\\n        Chainlink.Request memory request = buildChainlinkRequest(jobId, address(this), this.fulfill.selector);\\n\\n        // Set the URL to perform the GET request on\\n        request.add(\\\"get\\\", \\\"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD\\\");\\n\\n        // Set the path to find the desired data in the API response, where the response format is:\\n        // {\\\"RAW\\\":\\n        //   {\\\"ETH\\\":\\n        //    {\\\"USD\\\":\\n        //     {\\n        //      \\\"VOLUME24HOUR\\\": xxx.xxx,\\n        //     }\\n        //    }\\n        //   }\\n        //  }\\n        request.add(\\\"path\\\", \\\"RAW.ETH.USD.VOLUME24HOUR\\\");\\n\\n        // Multiply the result by 1000000000000000000 to remove decimals\\n        int timesAmount = 10**18;\\n        request.addInt(\\\"times\\\", timesAmount);\\n\\n        // Sends the request\\n        return sendChainlinkRequestTo(oracle, request, fee);\\n    }\\n\\n    /**\\n     * Receive the response in the form of uint256\\n     */\\n    function fulfill(bytes32 _requestId, uint256 _volume) public recordChainlinkFulfillment(_requestId)\\n    {\\n        volume = _volume;\\n    }\\n}\\n\")), mdx(\"p\", null, \"You can learn more about the applications of Chainlink by reading the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.chain.link/tag/developers/\"\n  }, \"Chainlink developers blog\"), \".\"), mdx(\"h2\", {\n    \"id\": \"other-services\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#other-services\",\n    \"aria-label\": \"other services permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Oracle services\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://chain.link/\"\n  }, \"Chainlink\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://witnet.io/\"\n  }, \"Witnet\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://provable.xyz/\"\n  }, \"Provable\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://paralink.network/\"\n  }, \"Paralink\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dos.network/\"\n  }, \"Dos.Network\"))), mdx(\"h3\", {\n    \"id\": \"build-an-oracle-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#build-an-oracle-smart-contract\",\n    \"aria-label\": \"build an oracle smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Build an oracle smart contract\"), mdx(\"p\", null, \"Here's an example oracle contract by Pedro Costa. You can find further annotation in his article: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/@pedrodc/implementing-a-blockchain-oracle-on-ethereum-cedc7e26b49e\"\n  }, \"Implementing a Blockchain Oracle on Ethereum\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity >=0.4.21 <0.6.0;\\n\\ncontract Oracle {\\n  Request[] requests; //list of requests made to the contract\\n  uint currentId = 0; //increasing request id\\n  uint minQuorum = 2; //minimum number of responses to receive before declaring final result\\n  uint totalOracleCount = 3; // Hardcoded oracle count\\n\\n  // defines a general api request\\n  struct Request {\\n    uint id;                            //request id\\n    string urlToQuery;                  //API url\\n    string attributeToFetch;            //json attribute (key) to retrieve in the response\\n    string agreedValue;                 //value from key\\n    mapping(uint => string) anwers;     //answers provided by the oracles\\n    mapping(address => uint) quorum;    //oracles which will query the answer (1=oracle hasn't voted, 2=oracle has voted)\\n  }\\n\\n  //event that triggers oracle outside of the blockchain\\n  event NewRequest (\\n    uint id,\\n    string urlToQuery,\\n    string attributeToFetch\\n  );\\n\\n  //triggered when there's a consensus on the final result\\n  event UpdatedRequest (\\n    uint id,\\n    string urlToQuery,\\n    string attributeToFetch,\\n    string agreedValue\\n  );\\n\\n  function createRequest (\\n    string memory _urlToQuery,\\n    string memory _attributeToFetch\\n  )\\n  public\\n  {\\n    uint lenght = requests.push(Request(currentId, _urlToQuery, _attributeToFetch, \\\"\\\"));\\n    Request storage r = requests[lenght-1];\\n\\n    // Hardcoded oracles address\\n    r.quorum[address(0x6c2339b46F41a06f09CA0051ddAD54D1e582bA77)] = 1;\\n    r.quorum[address(0xb5346CF224c02186606e5f89EACC21eC25398077)] = 1;\\n    r.quorum[address(0xa2997F1CA363D11a0a35bB1Ac0Ff7849bc13e914)] = 1;\\n\\n    // launch an event to be detected by oracle outside of blockchain\\n    emit NewRequest (\\n      currentId,\\n      _urlToQuery,\\n      _attributeToFetch\\n    );\\n\\n    // increase request id\\n    currentId++;\\n  }\\n\\n  //called by the oracle to record its answer\\n  function updateRequest (\\n    uint _id,\\n    string memory _valueRetrieved\\n  ) public {\\n\\n    Request storage currRequest = requests[_id];\\n\\n    //check if oracle is in the list of trusted oracles\\n    //and if the oracle hasn't voted yet\\n    if(currRequest.quorum[address(msg.sender)] == 1){\\n\\n      //marking that this address has voted\\n      currRequest.quorum[msg.sender] = 2;\\n\\n      //iterate through \\\"array\\\" of answers until a position if free and save the retrieved value\\n      uint tmpI = 0;\\n      bool found = false;\\n      while(!found) {\\n        //find first empty slot\\n        if(bytes(currRequest.anwers[tmpI]).length == 0){\\n          found = true;\\n          currRequest.anwers[tmpI] = _valueRetrieved;\\n        }\\n        tmpI++;\\n      }\\n\\n      uint currentQuorum = 0;\\n\\n      //iterate through oracle list and check if enough oracles(minimum quorum)\\n      //have voted the same answer has the current one\\n      for(uint i = 0; i < totalOracleCount; i++){\\n        bytes memory a = bytes(currRequest.anwers[i]);\\n        bytes memory b = bytes(_valueRetrieved);\\n\\n        if(keccak256(a) == keccak256(b)){\\n          currentQuorum++;\\n          if(currentQuorum >= minQuorum){\\n            currRequest.agreedValue = _valueRetrieved;\\n            emit UpdatedRequest (\\n              currRequest.id,\\n              currRequest.urlToQuery,\\n              currRequest.attributeToFetch,\\n              currRequest.agreedValue\\n            );\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"We'd love more documentation on creating an oracle smart contract. If you can help, create a PR!\")), mdx(\"h2\", {\n    \"id\": \"further-reading\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#further-reading\",\n    \"aria-label\": \"further reading permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Further reading\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Articles\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://chain.link/education/blockchain-oracles\"\n  }, \"What Is a Blockchain Oracle?\"), \" - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Chainlink\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.ethhub.io/built-on-ethereum/oracles/what-are-oracles/\"\n  }, \"Oracles\"), \" \\u2013 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"EthHub\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://betterprogramming.pub/what-is-a-blockchain-oracle-f5ccab8dbd72\"\n  }, \"What is a Blockchain Oracle?\"), \" - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Patrick Collins\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/fabric-ventures/decentralised-oracles-a-comprehensive-overview-d3168b9a8841\"\n  }, \"Decentralised Oracles: a comprehensive overview\"), \" \\u2013 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Julien Thevenard\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/@pedrodc/implementing-a-blockchain-oracle-on-ethereum-cedc7e26b49e\"\n  }, \"Implementing a Blockchain Oracle on Ethereum\"), \" \\u2013 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Pedro Costa\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ethereum.stackexchange.com/questions/301/why-cant-contracts-make-api-calls\"\n  }, \"Why can't smart contracts make API calls?\"), \" - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"StackExchange\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://newsletter.banklesshq.com/p/why-we-need-decentralized-oracles\"\n  }, \"Why we need decentralized oracles\"), \" - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Bankless\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://samczsun.com/so-you-want-to-use-a-price-oracle/\"\n  }, \"So you want to use a price oracle\"), \" -\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"samczsun\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Videos\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://youtu.be/BVUZpWa8vpw\"\n  }, \"Oracles and the Expansion of Blockchain Utility\"), \" - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Real Vision Finance\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tutorials\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.chain.link/fetch-current-crypto-price-data-solidity/\"\n  }, \"How to Fetch the Current Price of Ethereum in Solidity\"), \" - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Chainlink\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#prerequisites-prerequisites","title":"Prerequisites {#prerequisites}"},{"url":"#what-is-an-oracle-what-is-an-oracle","title":"What is an oracle {#what-is-an-oracle}"},{"url":"#why-are-they-needed-why-are-they-needed","title":"Why are they needed? {#why-are-they-needed}","items":[{"url":"#the-oracle-problem-oracle-problem","title":"The oracle problem {#oracle-problem}"},{"url":"#security-security","title":"Security {#security}"},{"url":"#architecture-architecture","title":"Architecture {#architecture}"}]},{"url":"#usage-usage","title":"Usage {#usage}","items":[{"url":"#chainlink-data-feeds-chainlink-data-feeds","title":"Chainlink Data Feeds {#chainlink-data-feeds}"},{"url":"#chainlink-vrf-chainlink-vrf","title":"Chainlink VRF {#chainlink-vrf}"},{"url":"#chainlink-api-call-chainlink-api-call","title":"Chainlink API Call {#chainlink-api-call}"}]},{"url":"#oracle-services-other-services","title":"Oracle services {#other-services}","items":[{"url":"#build-an-oracle-smart-contract-build-an-oracle-smart-contract","title":"Build an oracle smart contract {#build-an-oracle-smart-contract}"}]},{"url":"#further-reading-further-reading","title":"Further reading {#further-reading}"}]}}},"pageContext":{"slug":"/ko/developers/docs/oracles/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/docs/oracles/index.md","intl":{"language":"ko","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"about-ethereum-org":"ethereum.org 소개","about-us":"소개","brand-assets":"브랜드 자산","community":"커뮤니티","contact":"연락처","contributing":"기여","cookie-policy":"쿠키 정책","decentralized-applications-dapps":"탈중앙화된 애플리케이션(디앱)","developers":"개발자","developers-home":"개발자 홈","documentation":"개발문서","ef-blog":"이더리움 재단 블로그","eips":"이더리움 개선 제안","enterprise":"엔터프라이즈","ethereum":"이더리움","ethereum-2-0":"이더리움 2.0","ethereum-brand-assets":"이더리움 브랜드 자산","ethereum-community":"이더리움 커뮤니티","ethereum-glossary":"이더리움 용어집","ethereum-wallets":"이더리움 지갑","ethereum-whitepaper":"이더리움 백서","get-eth":"이더 받기","get-started":"시작하기","guides-and-resources":"가이드 및 참고 자료","how-ethereum-works":"이더리움의 작동 원리","individuals":"개인","individuals-menu":"개인 메뉴","language-support":"언어 지원","languages":"언어","learn":"학습","learn-by-coding":"코딩으로 학습","learn-more":"자세히 보기","mainnet-ethereum":"메인넷(Mainnet) 이더리움","nav-beginners":"입문자","page-404-copy":"위 검색 상자를 사용하여 원하는 내용을 찾거나 홈으로 돌아가세요.","page-404-not-found":"찾을 수 없음","page-enterprise":"엔터프라이즈","page-index":"이더리움","page-index-section-beginners-item-one":"이더리움을 처음 접하시나요?","page-index-section-beginners-item-three":"왜 관심을 가져야 하나요?","page-index-section-beginners-item-two":"이더리움이란 무엇인가요?","page-index-section-beginners-title":"입문자","page-index-section-developers-item-one":"시작 가이드","page-index-section-developers-item-three":"최신 개발자 도구","page-index-section-developers-item-two":"스마트 컨트랙트 프로그래밍 배우기","page-index-section-developers-title":"개발자 전용","page-index-section-enterprise-item-one":"엔터프라이즈 이더리움을 선택해야 하는 이유","page-index-section-enterprise-item-three":"엔터프라이즈 개발자 커뮤니티","page-index-section-enterprise-item-two":"엔터프라이즈 기능","page-index-section-enterprise-title":"엔터프라이즈 전용","page-index-section-individuals-item-one":"이더리움이란 무엇인가요?","page-index-section-individuals-item-three":"가이드 및 참고 자료","page-index-section-individuals-item-two":"이더리움 사용하기","page-index-section-individuals-title":"개인 전용","page-index-section-learn-item-one":"입문자용 참고 자료","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"현재 이더리움으로 무엇을 할 수 있나요?","page-index-section-use-item-three":"지갑이란 무엇인가요?","page-index-section-use-item-two":"이더를 사용하려면 어떻게 해야 하나요?","page-index-section-use-title":"사용법","page-last-updated":"페이지를 마지막으로 업데이트한 날짜","page-learning-tools-consensys-academy-description":"온라인 이더리움 개발자 부트캠프","page-learning-tools-cryptozombies-description":"솔리디티를 배워 나만의 좀비 게임 만들기","page-learning-tools-ethernauts-description":"스마트 컨트랙트 해킹을 통한 레벨 완료","privacy-policy":"개인정보 보호정책","private-ethereum":"프라이빗 이더리움","search":"검색","set-up-local-env":"로컬 환경 설정하기","stablecoins":"스테이블 코인","terms-of-use":"이용 약관","translation-banner-body-new":"아직 내용이 번역되지 않아 영어로 페이지를 보고 계십니다. 이 콘텐츠 번역을 도와주세요.","translation-banner-body-update":"이 페이지의 새로운 버전이 있지만 지금 영어로만 제공됩니다. 최신 버전 번역을 도와주세요.","translation-banner-button-join-translation-program":"번역 프로그램에 참여","translation-banner-button-learn-more":"자세히 보기","translation-banner-button-see-english":"영어 보기","translation-banner-button-translate-page":"페이지 번역","translation-banner-title-new":"이 페이지 번역 돕기","translation-banner-title-update":"이 페이지 업데이트 돕기","tutorials":"자습서","use":"사용법","use-ethereum":"이더리움 사용하기","website-last-updated":"웹사이트를 마지막으로 업데이트한 날짜","what-is-ether":"이더(ETH)란 무엇인가요?","what-is-ethereum":"이더리움은 무엇인가요?","page-developer-meta-title":"이더리움 개발자 참고자료","page-developers-about":"개발자 참고자료 소개","page-developers-about-desc":"ethereum.org는 이더리움으로 개발하는 데 도움이 되는 기초 개념 및 개발 스택 관련 문서가 제공되는 공간입니다. 초심자가 빠르게 익숙해질 수 있도록 돕는 튜토리얼도 준비되어 있습니다.","page-developers-about-desc-2":"Mozilla Developer Network에서 영감을 받아 개발자 콘텐츠와 참고자료가 모여 있는 클럽하우스가 이더리움에도 필요하다고 생각했습니다. 우리의 친구 Mozilla처럼 여기 있는 모든 내용은 오픈 소스로, 여러분이 직접 내용을 보강하고 개선할 수 있습니다.","page-developers-account-desc":"컨트랙트 또는 네트워크 이용자","page-developers-accounts-link":"계정","page-developers-advanced":"고급","page-developers-api-desc":"라이브러리를 사용하여 스마트 컨트랙트로 상호 작용","page-developers-api-link":"백엔드 API","page-developers-aria-label":"개발자 메뉴","page-developers-block-desc":"블록체인에 추가된 트랜잭션의 배치","page-developers-block-explorers-desc":"이더리움 데이터 포털","page-developers-block-explorers-link":"블록 탐색기","page-developers-blocks-link":"블록","page-developers-browse-tutorials":"튜토리얼 둘러보기","page-developers-choose-stack":"스택 선택","page-developers-contribute":"기여하기","page-developers-dev-env-desc":"디앱 개발에 적합한 IDE","page-developers-dev-env-link":"개발 환경","page-developers-discord":"Discord 참여하기","page-developers-docs-introductions":"소개","page-developers-evm-desc":"트랜잭션을 처리하는 컴퓨터","page-developers-evm-link":"이더리움 가상머신(EVM; Ethereum Virtual Machine)","page-developers-explore-documentation":"문서 탐색하기","page-developers-feedback":"피드백이 있다면 GitHub 이슈 또는 Discord 서버를 통해 알려주세요.","page-developers-frameworks-desc":"개발 속도를 높이는 데 도움이 되는 도구","page-developers-frameworks-link":"개발 프레임워크","page-developers-fundamentals":"기초","page-developers-gas-desc":"파워 트랜잭션에 필요한 이더","page-developers-gas-link":"가스","page-developers-get-started":"어떤 방식으로 시작하시겠어요?","page-developers-improve-ethereum":"ethereum.org 개선에 도움 주기","page-developers-improve-ethereum-desc":"ethereum.org에서와 마찬가지로 여기 있는 문서도 커뮤니티의 노력이 합쳐진 결과물입니다. 실수를 발견하거나 개선할 점, 이더리움 개발자에게 도움이 되는 새로운 정보가 있으면 PR을 생성해 주세요.","page-developers-into-eth-desc":"블록체인 및 이더리움 소개","page-developers-intro-dapps-desc":"탈중앙화 애플리케이션 소개","page-developers-intro-dapps-link":"디앱 소개","page-developers-intro-eth-link":"이더리움 소개","page-developers-intro-stack":"스택 소개","page-developers-intro-stack-desc":"이더리움 스택 소개","page-developers-js-libraries-desc":"JavaScript를 사용하여 스마트 컨트랙트로 상호 작용","page-developers-js-libraries-link":"JavaScript 라이브러리","page-developers-language-desc":"친숙한 언어로 이더리움 사용하기","page-developers-languages":"프로그래밍 언어","page-developers-learn":"이더리움 개발 학습하기","page-developers-learn-desc":"핵심 개념과 이더리움 스택에 대한 문서 읽기","page-developers-learn-tutorials":"튜토리얼을 통해 학습하기","page-developers-learn-tutorials-cta":"튜토리얼 보기","page-developers-learn-tutorials-desc":"이미 개발에 성공한 개발자의 도움을 받아 이더리움 개발에 대해 단계별로 학습해 보세요.","page-developers-meta-desc":"이더리움에서 개발하는 개발자를 위한 문서, 튜토리얼, 도구가 준비되어 있습니다.","page-developers-mining-desc":"새로운 블록이 생성되고 합의에 이르는 과정","page-developers-mining-link":"채굴","page-developers-networks-desc":"메인넷 및 테스트 네트워크 개요","page-developers-networks-link":"네트워크","page-developers-node-clients-desc":"블록과 트랜잭션이 네트워크 내에서 검증되는 과정","page-developers-node-clients-link":" 노드 및 클라이언트","page-developers-oracle-desc":"오프체인 데이터를 스마트 컨트랙트에 넣기","page-developers-oracles-link":"오라클","page-developers-play-code":"코드 자유자재로 다루기","page-developers-read-docs":"문서 읽기","page-developers-scaling-desc":"더욱 빠른 트랜잭션을 위한 솔루션","page-developers-scaling-link":"확장","page-developers-smart-contract-security-desc":"개발 중 고려해야 할 보안 수단","page-developers-smart-contract-security-link":"보안","page-developers-set-up":"로컬 환경 설정하기","page-developers-setup-desc":"개발 환경을 구성하여 스택을 개발에 맞게 준비시키세요.","page-developers-smart-contracts-desc":"디앱 이면의 로직 - 자가수행 합의","page-developers-smart-contracts-link":"스마트 컨트랙트","page-developers-stack":"스택","page-developers-start":"실험 시작하기","page-developers-start-desc":"우선 실험하고 나중에 질문하고 싶으세요?","page-developers-storage-desc":"디앱 스토리지 처리 방법","page-developers-storage-link":"스토리지","page-developers-subtitle":"개발자가 개발자를 위해 만든 이더리움 개발자 매뉴얼입니다.","page-developers-title-1":"이더리움","page-developers-title-2":"개발자","page-developers-title-3":"참고자료","page-developers-token-standards-desc":"수락된 토큰 표준 개요","page-developers-token-standards-link":"토큰 표준","page-developers-transactions-desc":"이더리움 상태가 변화하는 과정","page-developers-transactions-link":"트랜잭션","page-developers-web3-desc":"web3 개발 환경의 차별점","page-developers-web3-link":"Web2와 Web3의 비교","page-index-hero-image-alt":"ethereum.org 히어로 이미지","page-index-meta-description":"이더리움은 디지털 화폐와 새로운 형태의 애플리케이션을 위한 탈중앙화 글로벌 플랫폼입니다. 이더리움을 통해 디지털 화폐를 제어하고, 전 세계 어디서나 이용할 수 있는 코드를 작성할 수 있습니다.","page-index-meta-title":"홈","page-index-sections-developers-desc":"이더리움 및 관련 애플리케이션의 기반 기술에 대해 학습하고 개발을 시작해 보세요.","page-index-sections-developers-image-alt":"레고 블록을 손으로 쌓아 만든 이더리움 로고 그림","page-index-sections-developers-link-text":"개발 시작하기","page-index-sections-developers-title":"개발자","page-index-sections-enterprise-desc":"새로운 비즈니스 모델을 개척하고 비용을 절감하며 미래의 비즈니스에 대비하는 데 이더리움이 어떤 역할을 할 수 있는지 알아보세요.","page-index-sections-enterprise-image-alt":"랩탑에 둘러앉아 이더리움 프로젝트 그룹 작업을 수행하는 그림","page-index-sections-enterprise-link-text":"엔터프라이즈용 이더리움","page-index-sections-enterprise-title":"엔터프라이즈","page-index-sections-individuals-desc":"이더리움, 이더, 지갑, 토큰 등에 대해 학습하고 이더리움 애플리케이션 사용을 시작해 보세요.","page-index-sections-individuals-image-alt":"컴퓨터 앞에 앉아 있는 시바견 그림","page-index-sections-individuals-link-text":"이더리움 시작하기","page-index-sections-individuals-title":"이더리움 소개","page-index-subtitle":"이더리움을 통해 디지털화된 가치를 제어하고, 프로그래밍한 대로 실행되며, 전 세계 어디서나 이용할 수 있는 코드를 작성할 수 있습니다.","page-index-title":"이더리움은 탈중앙화된 애플리케이션을 위한 글로벌 오픈 소스 플랫폼입니다."},"routed":true,"originalPath":"/developers/docs/oracles/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}