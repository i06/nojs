{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/nl/developers/tutorials/run-light-node-geth/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/run-light-node-geth/","readingTime":{"minutes":8.445}},"frontmatter":{"title":"How to run a light node with Geth","description":"How to download, install and run Geth. Covering syncmodes, the Javascript console, and more","lang":"en","tags":["clients","geth","nodes"],"author":"Brian Gu","source":null,"sourceUrl":null,"skill":"intermediate","published":"2020-06-14T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to run a light node with Geth\",\n  \"description\": \"How to download, install and run Geth. Covering syncmodes, the Javascript console, and more\",\n  \"author\": \"Brian Gu\",\n  \"tags\": [\"clients\", \"geth\", \"nodes\"],\n  \"skill\": \"intermediate\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"published\": \"2020-06-14T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You may be interested in running an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/nodes-and-clients/\"\n  }, \"Ethereum node\"), \". One of the easiest ways to do so is by downloading, installing, and running Geth. With Geth, we can have a light node up and running in minutes.\"), mdx(\"p\", null, \"First, you\\u2019ll want to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://geth.ethereum.org/docs/install-and-build/installing-geth\"\n  }, \"install Geth\"), \".\"), mdx(\"p\", null, \"Once you\\u2019ve installed Geth, running an Ethereum full node is as simple as typing\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ geth\\n\")), mdx(\"p\", null, \"into the command line (without the dollar sign). Don\\u2019t do this just yet! When you run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"geth\"), \", Geth will:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Initialize a local copy of a blank-state EVM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Start downloading all blocks in Ethereum history, starting from block 0.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Replay all transactions in all blocks in order, updating the state of the EVM with each transaction until it reaches the present-day state.\")), mdx(\"p\", null, \"This process may take anywhere from hours to days, and requires a few hundred GB of free space. For now, we\\u2019ll just run a light node on a testnet to familiarize ourselves with how to use Geth. To do this, we'll have to go through a few important command-line options and tools.\"), mdx(\"h2\", {\n    \"id\": \"mainnet-and-testnet\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#mainnet-and-testnet\",\n    \"aria-label\": \"mainnet and testnet permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Mainnet and Testnet\"), mdx(\"p\", null, \"By default, Geth runs a Mainnet node. You can run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"geth --ropsten\"), \" to run a Ropsten testnet full node. You can run a node on Rinkeby by swapping \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ropsten\"), \" for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rinkeby\"), \".\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/networks/\"\n  }, \"Learn more about different networks\"), \".\"), mdx(\"h2\", {\n    \"id\": \"syncmode\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#syncmode\",\n    \"aria-label\": \"syncmode permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Syncmode\"), mdx(\"p\", null, \"Geth has three \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"syncmode\"), \"s.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ geth --syncmode \\\"full\\\"\\n$ geth --syncmode \\\"fast\\\"\\n$ geth --syncmode \\\"light\\\"\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"full\\\"\"), \" runs a full node exactly as you\\u2019d expect - your machine initializes a local copy of the EVM in its original clean state, downloads every block since the beginning of the blockchain, and executes every transaction in every block, updating the EVM state until it reaches the present-day EVM state.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"fast\\\"\"), \" downloads all blocks, but also downloads a recent snapshot of the EVM state from a peer (currently the state of the EVM 64 blocks in the past), executing transactions in only the most recent blocks until it reaches the current EVM state. The advantage of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"fast\\\"\"), \" is that it takes much less time to synchronize to the present state; however, it relies on a full archival node peer for a state snapshot, so it isn\\u2019t verifying everything for itself.\"), mdx(\"p\", null, \"Finally, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"light\\\"\"), \" runs a light node, which we discussed above.\"), mdx(\"p\", null, \"For a great explanation of the differences between the three syncmodes, see this \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum.stackexchange.com/questions/11297/what-is-geths-light-sync-and-why-is-it-so-fast\"\n  }, \"stack exchange answer\"), \".\"), mdx(\"h2\", {\n    \"id\": \"documentation-and-other-command-line-options\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#documentation-and-other-command-line-options\",\n    \"aria-label\": \"documentation and other command line options permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Documentation and other command line options\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://geth.ethereum.org/docs/\"\n  }, \"Full documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://geth.ethereum.org/docs/interface/command-line-options\"\n  }, \"All command line options\"))), mdx(\"h2\", {\n    \"id\": \"running-your-light-node\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#running-your-light-node\",\n    \"aria-label\": \"running your light node permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Running your light node\"), mdx(\"p\", null, \"We\\u2019ll run a light testnet node to familiarize ourselves with how to manage and interact with a node. To do so, simply run\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ geth --ropsten --syncmode \\\"light\\\"\\n\")), mdx(\"p\", null, \"Wait a few seconds, and hopefully you should get output that looks something like:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ geth --ropsten --syncmode \\\"light\\\"\\nINFO [11-18|14:04:47] Maximum peer count                       ETH=0 LES=100 total=25\\nINFO [11-18|14:04:47] Starting peer-to-peer node               instance=Geth/v1.8.11-stable/darwin-amd64/go1.10.3\\nINFO [11-18|14:04:47] Allocated cache and file handles         database=/Users/bgu/Library/Ethereum/testnet/geth/lightchaindata cache=768 handles=128\\nINFO [11-18|14:04:47] Persisted trie from memory database      nodes=355 size=51.89kB time=561.839\\xB5s gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B\\nINFO [11-18|14:04:47] Initialised chain configuration          config=\\\"{ChainID: 3 Homestead: 0 DAO: <nil> DAOSupport: true EIP150: 0 EIP155: 10 EIP158: 10 Byzantium: 1700000 Constantinople: <nil> Engine: ethash}\\\"\\nINFO [11-18|14:04:47] Disk storage enabled for ethash caches   dir=/Users/bgu/Library/Ethereum/testnet/geth/ethash count=3\\nINFO [11-18|14:04:47] Disk storage enabled for ethash DAGs     dir=/Users/bgu/.ethash                              count=2\\nINFO [11-18|14:04:47] Added trusted checkpoint                 chain=ropsten block=3375103 hash=9017ab\\u2026249e89\\nINFO [11-18|14:04:47] Loaded most recent local header          number=0 hash=419410\\u2026ca4a2d td=1048576\\nINFO [11-18|14:04:47] Starting P2P networking\\nINFO [11-18|14:04:49] UDP listener up                          net=enode://3ef47be442520e4708b5ff25e6e213c496046f443f8393ff5e7ec55f1cf27c374e2e93e78235bde651a5734a012a40eacfc16deab762ee0f380b95d117ac530c@[::]:30303\\nWARN [11-18|14:04:49] Light client mode is an experimental feature\\nINFO [11-18|14:04:49] RLPx listener up                         self=\\\"enode://3ef47be442520e4708b5ff25e6e213c496046f443f8393ff5e7ec55f1cf27c374e2e93e78235bde651a5734a012a40eacfc16deab762ee0f380b95d117ac530c@[::]:30303?discport=0\\\"\\nINFO [11-18|14:04:49] IPC endpoint opened                      url=/Users/bgu/Library/Ethereum/testnet/geth.ipc\\nINFO [11-18|14:04:51] Mapped network port                      proto=udp extport=30303 intport=30303 interface=\\\"UPNP IGDv1-IP1\\\"\\nINFO [11-18|14:04:51] Mapped network port                      proto=tcp extport=30303 intport=30303 interface=\\\"UPNP IGDv1-IP1\\\"\\nINFO [11-18|14:08:55] Block synchronisation started\\nINFO [11-18|14:08:58] Imported new block headers               count=192 elapsed=1.574s number=3375295 hash=62f6b1\\u202695c47f ignored=0\\nINFO [11-18|14:08:58] Imported new block headers               count=192 elapsed=127.088ms number=3375487 hash=ae759b\\u2026453ac5 ignored=0\\nINFO [11-18|14:08:59] Imported new block headers               count=960 elapsed=582.125ms number=3376447 hash=4cab62\\u2026445b82 ignored=0\\nINFO [11-18|14:08:59] Imported new block headers               count=192 elapsed=169.936ms number=3376639 hash=470614\\u202685ce15 ignored=0\\nINFO [11-18|14:08:59] Imported new block headers               count=384 elapsed=245.745ms number=3377023 hash=dad8ee\\u20262862d2 ignored=0\\nINFO [11-18|14:08:59] Imported new block headers               count=192 elapsed=128.514ms number=3377215 hash=ebcd84\\u2026ea26cb ignored=0\\nINFO [11-18|14:09:00] Imported new block headers               count=192 elapsed=125.427ms number=3377407 hash=fca10c\\u20268ed04d ignored=0\\nINFO [11-18|14:09:00] Imported new block headers               count=192 elapsed=109.536ms number=3377599 hash=9aa141\\u2026f34080 ignored=0\\nINFO [11-18|14:09:00] Imported new block headers               count=192 elapsed=109.849ms number=3377791 hash=499f2d\\u2026e0c713 ignored=0\\n\")), mdx(\"p\", null, \"Note: You may not see \\u201CBlock synchronisation started\\u201D and the following \\u201CImported new block headers\\u201D messages for several minutes, or even hours if you\\u2019re particularly unlucky. During this time, your client is trying to find full node peers willing to serve light clients. In the example above, we can tell by the timestamps that my machine had to wait about four minutes between starting to look for peers and actually finding a peer to download blocks from. This is currently an open issue within the Ethereum community - how do we incentivize people to run full nodes which serve light clients?\"), mdx(\"p\", null, \"Once block synchronization starts, it\\u2019ll take a few minutes for your machine to catch up to the latest blocks on the blockchain. At that point, your output will start looking like:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"INFO [11-18|16:06:04.025] Imported new block headers               count=2   elapsed=6.253ms   number=4456862 hash=ce0a0b\\u20266ab128\\nINFO [11-18|16:06:27.819] Imported new block headers               count=2   elapsed=5.982ms   number=4456864 hash=04a054\\u2026b4f661\\nINFO [11-18|16:06:34.080] Imported new block headers               count=2   elapsed=4.774ms   number=4456866 hash=15a43c\\u2026efc782\\nINFO [11-18|16:06:45.464] Imported new block headers               count=2   elapsed=5.213ms   number=4456868 hash=eb02d5\\u2026227564\\nINFO [11-18|16:07:11.630] Imported new block headers               count=2   elapsed=5.835ms   number=4456870 hash=67daa7\\u202666892d\\n\")), mdx(\"p\", null, \"At this point, messages will start coming in only every 10-30 seconds, and the value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"count\"), \" will be in the single digits for each message.\"), mdx(\"h2\", {\n    \"id\": \"where-is-the-blockchain-and-evm-data-stored\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#where-is-the-blockchain-and-evm-data-stored\",\n    \"aria-label\": \"where is the blockchain and evm data stored permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Where is the blockchain and EVM data stored?\"), mdx(\"p\", null, \"The directory which Geth uses to store raw blockchain data depends on your operating system. Upon running Geth, look for a message that looks like\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"INFO [11-18|14:04:47] Allocated cache and file handles         database=/Users/bgu/Library/Ethereum/testnet/geth/lightchaindata cache=768 handles=128\\n\")), mdx(\"p\", null, \"The path following \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u201Cdatabase=\\u201D\"), \" should tell you where the blockchain data is stored on your machine. If you\\u2019re running a full node, this directory will contain all of the data about every block that has ever been committed to the blockchain. Since we\\u2019re running a light node, this directory only contains the block headers.\"), mdx(\"p\", null, \"It\\u2019s worth emphasizing here that, at the lowest level, this is where the blockchain lives. The full contents of the blockchain and the EVM state are stored on every full node in the Ethereum network, in directories that look very much like the one on your computer.\"), mdx(\"h2\", {\n    \"id\": \"attaching-to-the-javascript-console\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#attaching-to-the-javascript-console\",\n    \"aria-label\": \"attaching to the javascript console permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Attaching to the Javascript Console\"), mdx(\"p\", null, \"Running a node isn\\u2019t useful unless we can actually interact with it. For example, we might want to broadcast transaction requests or look up EVM/blockchain data (such as an account balance). Geth has a built-in Javascript console and a Javascript API called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ethereum/web3.js/\"\n  }, \"web3js\"), \" that you can use to interact with your node.\"), mdx(\"p\", null, \"To use the Javascript console:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Start running a node in a terminal window (either full and light node are OK).\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Look for a message that looks like:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"INFO [11-18|14:04:49] IPC endpoint opened                      url=/Users/bgu/Library/Ethereum/testnet/geth.ipc\\n\")), mdx(\"p\", null, \"This message should be logged before block synchronization starts.\"), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"This message indicates the path to the IPC (inter-process communication) endpoint. Copy this path (in the example above, it\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/Users/bgu/Library/Ethereum/testnet/geth.ipc\"), \").\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open a new terminal window or tab, and run the following command:\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"$ geth attach [your IPC endpoint path]\"))), mdx(\"p\", null, \"This should open the Javascript console. We can now use web3js to interact with the node.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://web3js.readthedocs.io/\"\n  }, \"Full web3js documentation\")), mdx(\"p\", null, \"Here are a few helpful objects exposed by this API. You access these by typing them into the Javascript console.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eth.syncing\"), \" returns an object if your node has started but not completed block synchronization, or the value \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \" if it has either completed synchronization or has not started. If the node is still synchronizing, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eth.syncing\"), \" will tell you the latest block number whose data you\\u2019ve received, as well as the total number of blocks in the current blockchain.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"net.peerCount\"), \" returns the number of peers you\\u2019re connected to. If this is 0, you\\u2019ll probably have to either wait a few minutes or else start Googling for solutions (could be a firewall or network issue, or something else).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"admin.peers\"), \" will give you a list of all peers that your node is connected to. If this is empty, then your node is not connected to any other peers.\")), mdx(\"p\", null, \"We can also use web3js to initialize accounts, write and broadcast transaction requests to the network, look up account balances and metadata, and more. We\\u2019ll cover these operations in a later section; for now, try running the following to look up the balance of one of my accounts on the Ropsten testnet:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"eth.getBalance('0x85d918c2B7F172d033D190152AEc58709Fb6D048')\\n# returns 1059286000000000000 as of 11-18-2018. This value is reported in \\\"Wei\\\".\\n# One Wei is a denomination which is equivalent to 10^-18 ether.\\n# The balance of this account in ether is about 1.059eth.\\n\")), mdx(\"h2\", {\n    \"id\": \"stopping-and-restarting-your-node\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#stopping-and-restarting-your-node\",\n    \"aria-label\": \"stopping and restarting your node permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Stopping and restarting your node\"), mdx(\"p\", null, \"You can stop your node at any time by pressing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CTRL+C\"), \". If you want to restart the node, Geth will take a few seconds or minutes to re-synchronize (downloading the blocks and/or block headers from where it left off when the node last stopped running). If any of the above instructions aren\\u2019t working, the first thing you should do is try restarting your node.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ geth --ropsten --syncmode \\\"light\\\"\\n\")), mdx(\"p\", null, \"Replace 'ropsten' with other testnet names as needed, or use 'mainnet'.\"), mdx(\"p\", null, \"If you are interested in running an Ethereum full node, it is generally best to do so from a dedicated machine with good network connectivity, rather than from a personal computer. Here is a guide to running a node with AWS (this is a little outdated and the referenced AMIs are no longer recent or available, so you might have to do some Googling): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/mercuryprotocol/how-to-run-an-ethereum-node-on-aws-a8774ed3acf6\"\n  }, \"How to run a node on AWS\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#mainnet-and-testnet-mainnet-and-testnet","title":"Mainnet and Testnet {#mainnet-and-testnet}"},{"url":"#syncmode-syncmode","title":"Syncmode {#syncmode}"},{"url":"#documentation-and-other-command-line-options-documentation-and-other-command-line-options","title":"Documentation and other command line options {#documentation-and-other-command-line-options}"},{"url":"#running-your-light-node-running-your-light-node","title":"Running your light node {#running-your-light-node}"},{"url":"#where-is-the-blockchain-and-evm-data-stored-where-is-the-blockchain-and-evm-data-stored","title":"Where is the blockchain and EVM data stored? {#where-is-the-blockchain-and-evm-data-stored}"},{"url":"#attaching-to-the-javascript-console-attaching-to-the-javascript-console","title":"Attaching to the Javascript Console {#attaching-to-the-javascript-console}"},{"url":"#stopping-and-restarting-your-node-stopping-and-restarting-your-node","title":"Stopping and restarting your node {#stopping-and-restarting-your-node}"}]}}},"pageContext":{"slug":"/nl/developers/tutorials/run-light-node-geth/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/run-light-node-geth/index.md","intl":{"language":"nl","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"about-ethereum-org":"Over ethereum.org","about-us":"Over ons","community":"Community","contact":"Contact","contributing":"Bijdragen","cookie-policy":"Cookiebeleid","decentralized-applications-dapps":"Gedecentraliseerde toepassingen (dapps)","developers":"Ontwikkelaars","developers-home":"Startpagina voor ontwikkelaars","documentation":"Documentatie","ef-blog":"Ethereum Foundation-blog","eips":"Voorstellen voor verbetering van Ethereum","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Ethereum-merkcontent","ethereum-community":"Ethereum-community","ethereum-glossary":"Ethereum-glossary","ethereum-wallets":"Ethereum Wallets","ethereum-whitepaper":"Ethereum-whitepaper","get-eth":"ETH verkrijgen","get-started":"Aan de slag","guides-and-resources":"Handleidingen en bronnen","how-ethereum-works":"Hoe Ethereum werkt","language-support":"Taalondersteuning","languages":"Talen","learn":"Info","learn-by-coding":"Leer door coderen","learn-more":"Learn more","mainnet-ethereum":"Mainnet Ethereum","nav-beginners":"Beginners","page-enterprise":"Onderneming","page-index":"Ethereum","page-index-section-beginners-item-one":"Nieuw bij Ethereum?","page-index-section-beginners-item-three":"Wat heb ik eraan?","page-index-section-beginners-item-two":"Wat is Ethereum?","page-index-section-beginners-title":"Beginners","page-index-section-developers-item-one":"Snel aan de slag","page-index-section-developers-item-three":"Vind de nieuwste tools voor ontwikkelaars","page-index-section-developers-item-two":"Leer slimme contracten te programmeren","page-index-section-developers-title":"Ontwikkelaars","page-index-section-enterprise-item-one":"","page-index-section-enterprise-item-three":"","page-index-section-enterprise-item-two":"","page-index-section-enterprise-title":"","page-index-section-learn-item-one":"Beginnersinformatie","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"Wat kan ik nu doen met Ethereum?","page-index-section-use-item-three":"Wat is een 'wallet' of digitale portemonnee?","page-index-section-use-item-two":"Hoe krijg ik ether?","page-index-section-use-title":"Gebruik","page-last-updated":"Pagina laatst bijgewerkt","privacy-policy":"Privacybeleid","private-ethereum":"Private Ethereum","search":"Zoeken","set-up-local-env":"Lokale omgeving instellen","stablecoins":"Stablecoins","terms-of-use":"Gebruiksvoorwaarden","translation-banner-body-new":"Je bekijkt deze pagina in het Engels omdat we hem nog niet hebben vertaald. Help ons deze inhoud te vertalen.","translation-banner-body-update":"Er is een nieuwe versie van deze pagina, maar die is momenteel alleen in het Engels. Help ons de nieuwste versie te vertalen.","translation-banner-button-join-translation-program":"Deelnemen aan vertaalteam","translation-banner-button-learn-more":"Meer informatie","translation-banner-button-see-english":"Bekijk in het Engels","translation-banner-button-translate-page":"Pagina vertalen","translation-banner-title-new":"Help deze pagina te vertalen","translation-banner-title-update":"Help deze pagina te updaten","tutorials":"Tutorials","use":"Gebruik","use-ethereum":"Ethereum gebruiken","website-last-updated":"Website laatst bijgewerkt","what-is-ether":"Wat is ether (ETH)?","what-is-ethereum":"Wat is Ethereum?","page-developer-meta-title":"Bronnen voor Ethereum-ontwikkelaars","page-developers-about":"Over deze bronnen voor ontwikkelaars","page-developers-about-desc":"ethereum.org helpt je met het bouwen op Ethereum met behulp van documentatie over fundamentele concepten en de ontwikkelingsstack. Daarnaast zijn er handleidingen om je op weg te helpen.","page-developers-about-desc-2":"Geïnspireerd door het Mozilla Developer Network, leek het ons een goed idee om Ethereum een plek te geven voor geweldige ontwikkelaarsinhoud en bronnen. Net als onze vrienden bij Mozilla, is hier alles open source, klaar om uit te breiden en te verbeteren.","page-developers-account-desc":"Contracts of mensen op het netwerk","page-developers-accounts-link":"Accounts","page-developers-advanced":"Geavanceerd","page-developers-api-desc":"Bibliotheken gebruiken voor interactie met Smart Contracts","page-developers-api-link":"Backend API's","page-developers-aria-label":"Menu voor ontwikkelaars","page-developers-block-desc":"Batches van aan de blockchain toegevoegde transacties","page-developers-block-explorers-desc":"Je portaal naar Ethereum-gegevens","page-developers-block-explorers-link":"Block explorers","page-developers-blocks-link":"Blocks","page-developers-browse-tutorials":"Blader door handleidingen","page-developers-choose-stack":"Kies je stack","page-developers-contribute":"Bijdragen","page-developers-dev-env-desc":"IDE's die geschikt zijn voor het ontwikkelen van dapps","page-developers-dev-env-link":"Ontwikkelomgevingen","page-developers-discord":"Open Discord","page-developers-docs-introductions":"Introductie","page-developers-evm-desc":"De computer die transacties verwerkt","page-developers-evm-link":"De EVM (Ethereum Virtual Machine)","page-developers-explore-documentation":"Bekijk de documentatie","page-developers-feedback":"Heb je feedback, neem dan contact met ons op via een GitHub-case of op onze Discord-server.","page-developers-frameworks-desc":"Tools om ontwikkeling te versnellen","page-developers-frameworks-link":"Ontwikkelingskaders","page-developers-fundamentals":"Basisprincipes","page-developers-gas-desc":"Ether nodig om transacties uit te voeren","page-developers-gas-link":"Brandstof","page-developers-get-started":"Hoe wil je beginnen?","page-developers-improve-ethereum":"Help ons ethereum.org beter te maken","page-developers-improve-ethereum-desc":"Net als ethereum.org, zijn deze documenten een gezamenlijke inspanning. Dien een PR in als je fouten, ruimte voor verbetering of nieuwe mogelijkheden ziet om Ethereum-ontwikkelaars te helpen.","page-developers-into-eth-desc":"Een introductie voor blockchain en Ethereum","page-developers-intro-dapps-desc":"Een introductie voor gedecentraliseerde toepassingen","page-developers-intro-dapps-link":"Intro voor dapps","page-developers-intro-eth-link":"Intro voor Ethereum","page-developers-intro-stack":"Intro voor de stack","page-developers-intro-stack-desc":"Een introductie voor de Ethereum-stack","page-developers-js-libraries-desc":"Javascript gebruiken om te communiceren met Smart Contracts","page-developers-js-libraries-link":"Javascript-bibliotheken","page-developers-language-desc":"Ethereum gebruiken met bekende talen","page-developers-languages":"Programmeertalen","page-developers-learn":"Leer meer over de ontwikkeling van Ethereum","page-developers-learn-desc":"Lees meer over kernbegrippen en de Ethereum-stack in onze documenten","page-developers-learn-tutorials":"Leer meer in de handleidingen","page-developers-learn-tutorials-cta":"Handleidingen weergeven","page-developers-learn-tutorials-desc":"Leer stap voor stap Ethereum ontwikkelen van makers die je zijn voorgegaan.","page-developers-meta-desc":"Documentatie, handleidingen en tools voor ontwikkelaars die bouwen op Ethereum.","page-developers-mining-desc":"Hoe nieuwe blocks worden gemaakt en consensus wordt bereikt","page-developers-mining-link":"Mining","page-developers-networks-desc":"Een overzicht van Mainnet en de testnetwerken","page-developers-networks-link":"Netwerken","page-developers-node-clients-desc":"Hoe blocks en transacties in het netwerk worden geverifieerd","page-developers-node-clients-link":" Nodes en clients","page-developers-oracle-desc":"Off-chain gegevens in uw Smarts Contracts verwerken","page-developers-oracles-link":"Oracles","page-developers-play-code":"Spelen met code","page-developers-read-docs":"Lees de documentatie","page-developers-scaling-desc":"Oplossingen voor snellere transacties","page-developers-scaling-link":"Schalen","page-developers-smart-contract-security-desc":"Beveiligingsmaatregelen die tijdens het ontwikkelen in acht moeten worden genomen","page-developers-smart-contract-security-link":"Beveiliging","page-developers-set-up":"Lokale omgeving instellen","page-developers-setup-desc":"Bereid je stack voor om te bouwen door het configureren van een ontwikkelomgeving.","page-developers-smart-contracts-desc":"De logica achter dapps – zelf-uitvoerende overeenkomsten","page-developers-smart-contracts-link":"Smart Contracts","page-developers-stack":"De stack","page-developers-start":"Begin te experimenteren","page-developers-start-desc":"Wil je eerst experimenteren en pas later vragen stellen?","page-developers-storage-desc":"Leren omgaan met dapp-opslag","page-developers-storage-link":"Opslag","page-developers-subtitle":"Een handleiding voor het bouwen met Ethereum. Door ontwikkelaars, voor ontwikkelaars.","page-developers-title-1":"Ethereum","page-developers-title-2":"ontwikkelaar","page-developers-title-3":"bronnen","page-developers-token-standards-desc":"Een overzicht van geaccepteerde standaarden voor tokens","page-developers-token-standards-link":"Standaarden voor tokens","page-developers-transactions-desc":"Hoe de Ethereum-status verandert","page-developers-transactions-link":"Transacties","page-developers-web3-desc":"In hoeverre de web3-wereld van ontwikkelen anders is","page-developers-web3-link":"Web2 versus Web3","page-index-hero-image-alt":"ethereum.org hero image","page-index-meta-description":"Ethereum is een wereldwijd, gedecentraliseerd platform voor geld en nieuwe soorten toepassingen. Op Ethereum kun je code schrijven die geld controleert en toepassingen bouwen die overal ter wereld toegankelijk zijn.","page-index-meta-title":"Home","page-index-sections-developers-desc":"Leer meer over de technologie achter Ethereum en de bijbehorende toepassingen, zodat je ermee kunt gaan bouwen.","page-index-sections-developers-image-alt":"Illustratie van een hand die een Ethereum-glief bouwt van legosteentjes","page-index-sections-developers-link-text":"Start met bouwen","page-index-sections-developers-title":"Ontwikkelaars","page-index-sections-enterprise-desc":"Zie hoe je met Ethereum nieuwe bedrijfsmodellen kunt openen, je kosten verder kunt terugdringen en je bedrijf klaar kunt maken voor de toekomst.","page-index-sections-enterprise-image-alt":"Illustratie van een groep die werkt aan een Ethereum-project rond een laptop","page-index-sections-enterprise-link-text":"Ethereum voor ondernemingen","page-index-sections-enterprise-title":"Onderneming","page-index-sections-individuals-desc":"Kom meer te weten over Ethereum, Ether, wallets en tokens, zodat je Ethereum-applicaties kunt gaan gebruiken.","page-index-sections-individuals-image-alt":"Illustratie van een hond achter een computer","page-index-sections-individuals-link-text":"Aan de slag met Ethereum","page-index-sections-individuals-title":"Over Ethereum","page-index-subtitle":"Op Ethereum kun je code schrijven waarmee digitale waarde wordt beheerd. Het werkt precies zoals het is geprogrammeerd en is overal ter wereld toegankelijk.","page-index-title":"Ethereum is een wereldwijd, open-source platform voor gedecentraliseerde toepassingen."},"routed":true,"originalPath":"/developers/tutorials/run-light-node-geth/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}