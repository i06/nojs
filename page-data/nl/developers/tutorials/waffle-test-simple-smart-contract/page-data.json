{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/nl/developers/tutorials/waffle-test-simple-smart-contract/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/waffle-test-simple-smart-contract/","readingTime":{"minutes":6.145}},"frontmatter":{"title":"Testing simple smart contract with Waffle library","description":"Tutorial for beginners","lang":"en","tags":["smart contracts","solidity","Waffle","testing"],"author":"Ewa Kowalska","source":null,"sourceUrl":null,"skill":"beginner","published":"2021-02-26T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Testing simple smart contract with Waffle library\",\n  \"description\": \"Tutorial for beginners\",\n  \"author\": \"Ewa Kowalska\",\n  \"tags\": [\"smart contracts\", \"solidity\", \"Waffle\", \"testing\"],\n  \"skill\": \"beginner\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"published\": \"2021-02-26T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"in-this-tutorial-youll-learn-how-to\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#in-this-tutorial-youll-learn-how-to\",\n    \"aria-label\": \"in this tutorial youll learn how to permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"In this tutorial you'll learn how to\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test the changes of wallet balance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test emission of events with specified arguments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Assert that a transaction was reverted\")), mdx(\"h2\", {\n    \"id\": \"assumptions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#assumptions\",\n    \"aria-label\": \"assumptions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Assumptions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can create a new JavaScript or TypeScript project\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have some basic experience with tests in Javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have used some package managers like yarn or npm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You possess very basic knowledge of smart contracts and Solidity\")), mdx(\"h1\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Getting started\"), mdx(\"p\", null, \"The tutorial demonstrates test setup and run using yarn, but there is no problem if you prefer npm - I will provide proper references to the official Waffle \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/index.html\"\n  }, \"documentation\"), \".\"), mdx(\"h2\", {\n    \"id\": \"install-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#install-dependencies\",\n    \"aria-label\": \"install dependencies permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install Dependencies\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#installation\"\n  }, \"Add\"), \" ethereum-waffle and typescript dependencies to the dev dependencies of your project.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"yarn add --dev ethereum-waffle ts-node typescript @types/jest\\n\")), mdx(\"h2\", {\n    \"id\": \"example-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example-smart-contract\",\n    \"aria-label\": \"example smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example smart contract\"), mdx(\"p\", null, \"During the tutorial we'll work on a simple smart contract example - EtherSplitter. It does not much apart from allowing anyone to send some wei and split it evenly between two predefined receivers.\\nThe split function requires the number of wei to be even, otherwise it will revert. For both receivers it performs a wei transfer followed by emission of the Transfer event.\"), mdx(\"p\", null, \"Place the snippet of EtherSplitter code in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/EtherSplitter.sol\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.0;\\n\\ncontract EtherSplitter {\\n    address payable receiver1;\\n    address payable receiver2;\\n\\n    event Transfer(address from, address to, uint256 amount);\\n\\n    constructor(address payable _address1, address payable _address2) public {\\n        receiver1 = _address1;\\n        receiver2 = _address2;\\n    }\\n\\n    function split() public payable {\\n        require(msg.value % 2 == 0, 'Uneven wei amount not allowed');\\n        receiver1.transfer(msg.value / 2);\\n        emit Transfer(msg.sender, receiver1, msg.value / 2);\\n        receiver2.transfer(msg.value / 2);\\n        emit Transfer(msg.sender, receiver2, msg.value / 2);\\n    }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compile-the-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#compile-the-contract\",\n    \"aria-label\": \"compile the contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Compile the contract\"), mdx(\"p\", null, \"To \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#compiling-the-contract\"\n  }, \"compile\"), \" the contract add the following entry to the package.json file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"scripts\\\": {\\n    \\\"build\\\": \\\"waffle\\\"\\n  }\\n\")), mdx(\"p\", null, \"Next, create the Waffle configuration file in the project root directory - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"waffle.json\"), \" - and then paste the following configuration there:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"compilerType\\\": \\\"solcjs\\\",\\n  \\\"compilerVersion\\\": \\\"0.6.2\\\",\\n  \\\"sourceDirectory\\\": \\\"./src\\\",\\n  \\\"outputDirectory\\\": \\\"./build\\\"\\n}\\n\")), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn build\"), \". As the result, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" directory will appear with the EtherSplitter compiled contract in JSON format.\"), mdx(\"h2\", {\n    \"id\": \"test-setup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#test-setup\",\n    \"aria-label\": \"test setup permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Test setup\"), mdx(\"p\", null, \"Testing with Waffle requires using Chai matchers and Mocha, so you need to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#writing-tests\"\n  }, \"add\"), \" them to your project. Update your package.json file and add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \" entry in the scripts part:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"scripts\\\": {\\n    \\\"build\\\": \\\"waffle\\\",\\n    \\\"test\\\": \\\"export NODE_ENV=test && mocha -r ts-node/register 'test/**/*.test.ts'\\\"\\n  }\\n\")), mdx(\"p\", null, \"If you want to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/getting-started.html#running-tests\"\n  }, \"execute\"), \" your tests, just run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn test\"), \" .\"), mdx(\"h1\", {\n    \"id\": \"testing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#testing\",\n    \"aria-label\": \"testing permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Testing\"), mdx(\"p\", null, \"Now create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \" directory and create the new file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\\\\EtherSplitter.test.ts\"), \".\\nCopy the snippet below and paste it to our test file.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { expect, use } from \\\"chai\\\"\\nimport { Contract } from \\\"ethers\\\"\\nimport { deployContract, MockProvider, solidity } from \\\"ethereum-waffle\\\"\\nimport EtherSplitter from \\\"../build/EtherSplitter.json\\\"\\n\\nuse(solidity)\\n\\ndescribe(\\\"Ether Splitter\\\", () => {\\n  const [sender, receiver1, receiver2] = new MockProvider().getWallets()\\n  let splitter: Contract\\n\\n  beforeEach(async () => {\\n    splitter = await deployContract(sender, EtherSplitter, [\\n      receiver1.address,\\n      receiver2.address,\\n    ])\\n  })\\n\\n  // add the tests here\\n})\\n\")), mdx(\"p\", null, \"A few words before we start.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MockProvider\"), \" comes up with a mock version of the blockchain. It also delivers mock wallets that will serve us for testing EtherSplitter contract. We can get up to ten wallets by calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getWallets()\"), \" method on the provider. In the example, we get three wallets - for the sender and for two receivers.\"), mdx(\"p\", null, \"Next, we declare a variable called 'splitter' - this is our mock EtherSplitter contract. It is created before each execution of a single test by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deployContract\"), \" method. This method simulates deployment of a contract from the wallet passed as the first parameter (sender's wallet in our case). The second parameter is the ABI and the bytecode of the tested contract - we pass there the json file of the compiled EtherSplitter contract from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" directory. The third parameter is an array with the contract's constructor arguments, which in our case, are the two addresses of the receivers.\"), mdx(\"h2\", {\n    \"id\": \"changebalances\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#changebalances\",\n    \"aria-label\": \"changebalances permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"changeBalances\"), mdx(\"p\", null, \"First, we will check if the split method actually changes the balances of receivers' wallets. If we split 50 wei from senders account, we would expect the balances of both receivers to increase by 25 wei. We will use Waffle's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalances\"), \" matcher:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Changes accounts balances\\\", async () => {\\n  await expect(() => splitter.split({ value: 50 })).to.changeBalances(\\n    [receiver1, receiver2],\\n    [25, 25]\\n  )\\n})\\n\")), mdx(\"p\", null, \"As the first parameter of the matcher, we pass an array of receivers' wallets, and as the second - an array of expected increases on corresponding accounts.\\nIf we wanted to check the balance of one specific wallet, we could also use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalance\"), \" matcher, which does not require passing arrays, as in the example below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Changes account balance\\\", async () => {\\n  await expect(() => splitter.split({ value: 50 })).to.changeBalance(\\n    receiver1,\\n    25\\n  )\\n})\\n\")), mdx(\"p\", null, \"Note that in both cases of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalance\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"changeBalances\"), \" we pass the split function as a callback because the matcher needs to access the state of balances before and after the call.\"), mdx(\"p\", null, \"Next, we'll test if the Transfer event was emitted after each transfer of wei. We'll turn to another matcher from Waffle:\"), mdx(\"h2\", {\n    \"id\": \"emit\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#emit\",\n    \"aria-label\": \"emit permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Emit\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Emits event on the transfer to the first receiver\\\", async () => {\\n  await expect(splitter.split({ value: 50 }))\\n    .to.emit(splitter, \\\"Transfer\\\")\\n    .withArgs(sender.address, receiver1.address, 25)\\n})\\n\\nit(\\\"Emits event on the transfer to the second receiver\\\", async () => {\\n  await expect(splitter.split({ value: 50 }))\\n    .to.emit(splitter, \\\"Transfer\\\")\\n    .withArgs(sender.address, receiver2.address, 25)\\n})\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"emit\"), \" matcher allows us to check if a contract emitted an event on calling a method. As the parameters to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"emit\"), \" matcher, we provide the mock contract that we predict to emit the event, along with the name of that event. In our case, the mock contract is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"splitter\"), \" and the name of the event - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Transfer\"), \". We can also verify the precise values of arguments that the event was emitted with - we pass as many arguments to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withArgs\"), \" matcher, as our event declaration expects. In case of EtherSplitter contract, we pass the addresses of the sender and the receiver along with the transferred wei amount.\"), mdx(\"h2\", {\n    \"id\": \"revertedwith\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#revertedwith\",\n    \"aria-label\": \"revertedwith permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"revertedWith\"), mdx(\"p\", null, \"As the last example, we'll check if the transaction was reverted in case of uneven number of wei. We'll use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"revertedWith\"), \" matcher:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"it(\\\"Reverts when Vei amount uneven\\\", async () => {\\n  await expect(splitter.split({ value: 51 })).to.be.revertedWith(\\n    \\\"Uneven wei amount not allowed\\\"\\n  )\\n})\\n\")), mdx(\"p\", null, \"The test, if passed, will assure us that the transaction was reverted indeed. However, there must be also an exact match between the messages that we passed in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" statement and the message we expect in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"revertedWith\"), \". If we go back to the code of EtherSplitter contract, in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" statement for the wei amount, we provide the message: 'Uneven wei amount not allowed'. This matches the message we expect in our test. If they were not equal, the test would fail.\"), mdx(\"h1\", {\n    \"id\": \"congratulations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#congratulations\",\n    \"aria-label\": \"congratulations permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Congratulations!\"), mdx(\"p\", null, \"You've made your first big step towards testing smart contracts with Waffle! You might be interested in other Waffle tutorials:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/testing-erc-20-tokens-with-waffle/\"\n  }, \"Testing ERC20 with Waffle\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/waffle-dynamic-mocking-and-testing-calls/#gatsby-focus-wrapper\"\n  }, \"Waffle: Dynamic mocking and testing contract calls\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/waffle-hello-world-with-buidler-tutorial/\"\n  }, \"Waffle say hello world tutorial with hardhat and ethers\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#in-this-tutorial-youll-learn-how-to-in-this-tutorial-youll-learn-how-to","title":"In this tutorial you'll learn how to {#in-this-tutorial-youll-learn-how-to}"},{"url":"#assumptions-assumptions","title":"Assumptions {#assumptions}"}]},{"url":"#getting-started-getting-started","title":"Getting started {#getting-started}","items":[{"url":"#install-dependencies-install-dependencies","title":"Install Dependencies {#install-dependencies}"},{"url":"#example-smart-contract-example-smart-contract","title":"Example smart contract {#example-smart-contract}"},{"url":"#compile-the-contract-compile-the-contract","title":"Compile the contract {#compile-the-contract}"},{"url":"#test-setup-test-setup","title":"Test setup {#test-setup}"}]},{"url":"#testing-testing","title":"Testing {#testing}","items":[{"url":"#changebalances-changebalances","title":"changeBalances {#changebalances}"},{"url":"#emit-emit","title":"Emit {#emit}"},{"url":"#revertedwith-revertedwith","title":"revertedWith {#revertedwith}"}]},{"url":"#congratulations-congratulations","title":"Congratulations! {#congratulations}"}]}}},"pageContext":{"slug":"/nl/developers/tutorials/waffle-test-simple-smart-contract/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/waffle-test-simple-smart-contract/index.md","intl":{"language":"nl","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"about-ethereum-org":"Over ethereum.org","about-us":"Over ons","community":"Community","contact":"Contact","contributing":"Bijdragen","cookie-policy":"Cookiebeleid","decentralized-applications-dapps":"Gedecentraliseerde toepassingen (dapps)","developers":"Ontwikkelaars","developers-home":"Startpagina voor ontwikkelaars","documentation":"Documentatie","ef-blog":"Ethereum Foundation-blog","eips":"Voorstellen voor verbetering van Ethereum","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Ethereum-merkcontent","ethereum-community":"Ethereum-community","ethereum-glossary":"Ethereum-glossary","ethereum-wallets":"Ethereum Wallets","ethereum-whitepaper":"Ethereum-whitepaper","get-eth":"ETH verkrijgen","get-started":"Aan de slag","guides-and-resources":"Handleidingen en bronnen","how-ethereum-works":"Hoe Ethereum werkt","language-support":"Taalondersteuning","languages":"Talen","learn":"Info","learn-by-coding":"Leer door coderen","learn-more":"Learn more","mainnet-ethereum":"Mainnet Ethereum","nav-beginners":"Beginners","page-enterprise":"Onderneming","page-index":"Ethereum","page-index-section-beginners-item-one":"Nieuw bij Ethereum?","page-index-section-beginners-item-three":"Wat heb ik eraan?","page-index-section-beginners-item-two":"Wat is Ethereum?","page-index-section-beginners-title":"Beginners","page-index-section-developers-item-one":"Snel aan de slag","page-index-section-developers-item-three":"Vind de nieuwste tools voor ontwikkelaars","page-index-section-developers-item-two":"Leer slimme contracten te programmeren","page-index-section-developers-title":"Ontwikkelaars","page-index-section-enterprise-item-one":"","page-index-section-enterprise-item-three":"","page-index-section-enterprise-item-two":"","page-index-section-enterprise-title":"","page-index-section-learn-item-one":"Beginnersinformatie","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"Wat kan ik nu doen met Ethereum?","page-index-section-use-item-three":"Wat is een 'wallet' of digitale portemonnee?","page-index-section-use-item-two":"Hoe krijg ik ether?","page-index-section-use-title":"Gebruik","page-last-updated":"Pagina laatst bijgewerkt","privacy-policy":"Privacybeleid","private-ethereum":"Private Ethereum","search":"Zoeken","set-up-local-env":"Lokale omgeving instellen","stablecoins":"Stablecoins","terms-of-use":"Gebruiksvoorwaarden","translation-banner-body-new":"Je bekijkt deze pagina in het Engels omdat we hem nog niet hebben vertaald. Help ons deze inhoud te vertalen.","translation-banner-body-update":"Er is een nieuwe versie van deze pagina, maar die is momenteel alleen in het Engels. Help ons de nieuwste versie te vertalen.","translation-banner-button-join-translation-program":"Deelnemen aan vertaalteam","translation-banner-button-learn-more":"Meer informatie","translation-banner-button-see-english":"Bekijk in het Engels","translation-banner-button-translate-page":"Pagina vertalen","translation-banner-title-new":"Help deze pagina te vertalen","translation-banner-title-update":"Help deze pagina te updaten","tutorials":"Tutorials","use":"Gebruik","use-ethereum":"Ethereum gebruiken","website-last-updated":"Website laatst bijgewerkt","what-is-ether":"Wat is ether (ETH)?","what-is-ethereum":"Wat is Ethereum?","page-developer-meta-title":"Bronnen voor Ethereum-ontwikkelaars","page-developers-about":"Over deze bronnen voor ontwikkelaars","page-developers-about-desc":"ethereum.org helpt je met het bouwen op Ethereum met behulp van documentatie over fundamentele concepten en de ontwikkelingsstack. Daarnaast zijn er handleidingen om je op weg te helpen.","page-developers-about-desc-2":"Geïnspireerd door het Mozilla Developer Network, leek het ons een goed idee om Ethereum een plek te geven voor geweldige ontwikkelaarsinhoud en bronnen. Net als onze vrienden bij Mozilla, is hier alles open source, klaar om uit te breiden en te verbeteren.","page-developers-account-desc":"Contracts of mensen op het netwerk","page-developers-accounts-link":"Accounts","page-developers-advanced":"Geavanceerd","page-developers-api-desc":"Bibliotheken gebruiken voor interactie met Smart Contracts","page-developers-api-link":"Backend API's","page-developers-aria-label":"Menu voor ontwikkelaars","page-developers-block-desc":"Batches van aan de blockchain toegevoegde transacties","page-developers-block-explorers-desc":"Je portaal naar Ethereum-gegevens","page-developers-block-explorers-link":"Block explorers","page-developers-blocks-link":"Blocks","page-developers-browse-tutorials":"Blader door handleidingen","page-developers-choose-stack":"Kies je stack","page-developers-contribute":"Bijdragen","page-developers-dev-env-desc":"IDE's die geschikt zijn voor het ontwikkelen van dapps","page-developers-dev-env-link":"Ontwikkelomgevingen","page-developers-discord":"Open Discord","page-developers-docs-introductions":"Introductie","page-developers-evm-desc":"De computer die transacties verwerkt","page-developers-evm-link":"De EVM (Ethereum Virtual Machine)","page-developers-explore-documentation":"Bekijk de documentatie","page-developers-feedback":"Heb je feedback, neem dan contact met ons op via een GitHub-case of op onze Discord-server.","page-developers-frameworks-desc":"Tools om ontwikkeling te versnellen","page-developers-frameworks-link":"Ontwikkelingskaders","page-developers-fundamentals":"Basisprincipes","page-developers-gas-desc":"Ether nodig om transacties uit te voeren","page-developers-gas-link":"Brandstof","page-developers-get-started":"Hoe wil je beginnen?","page-developers-improve-ethereum":"Help ons ethereum.org beter te maken","page-developers-improve-ethereum-desc":"Net als ethereum.org, zijn deze documenten een gezamenlijke inspanning. Dien een PR in als je fouten, ruimte voor verbetering of nieuwe mogelijkheden ziet om Ethereum-ontwikkelaars te helpen.","page-developers-into-eth-desc":"Een introductie voor blockchain en Ethereum","page-developers-intro-dapps-desc":"Een introductie voor gedecentraliseerde toepassingen","page-developers-intro-dapps-link":"Intro voor dapps","page-developers-intro-eth-link":"Intro voor Ethereum","page-developers-intro-stack":"Intro voor de stack","page-developers-intro-stack-desc":"Een introductie voor de Ethereum-stack","page-developers-js-libraries-desc":"Javascript gebruiken om te communiceren met Smart Contracts","page-developers-js-libraries-link":"Javascript-bibliotheken","page-developers-language-desc":"Ethereum gebruiken met bekende talen","page-developers-languages":"Programmeertalen","page-developers-learn":"Leer meer over de ontwikkeling van Ethereum","page-developers-learn-desc":"Lees meer over kernbegrippen en de Ethereum-stack in onze documenten","page-developers-learn-tutorials":"Leer meer in de handleidingen","page-developers-learn-tutorials-cta":"Handleidingen weergeven","page-developers-learn-tutorials-desc":"Leer stap voor stap Ethereum ontwikkelen van makers die je zijn voorgegaan.","page-developers-meta-desc":"Documentatie, handleidingen en tools voor ontwikkelaars die bouwen op Ethereum.","page-developers-mining-desc":"Hoe nieuwe blocks worden gemaakt en consensus wordt bereikt","page-developers-mining-link":"Mining","page-developers-networks-desc":"Een overzicht van Mainnet en de testnetwerken","page-developers-networks-link":"Netwerken","page-developers-node-clients-desc":"Hoe blocks en transacties in het netwerk worden geverifieerd","page-developers-node-clients-link":" Nodes en clients","page-developers-oracle-desc":"Off-chain gegevens in uw Smarts Contracts verwerken","page-developers-oracles-link":"Oracles","page-developers-play-code":"Spelen met code","page-developers-read-docs":"Lees de documentatie","page-developers-scaling-desc":"Oplossingen voor snellere transacties","page-developers-scaling-link":"Schalen","page-developers-smart-contract-security-desc":"Beveiligingsmaatregelen die tijdens het ontwikkelen in acht moeten worden genomen","page-developers-smart-contract-security-link":"Beveiliging","page-developers-set-up":"Lokale omgeving instellen","page-developers-setup-desc":"Bereid je stack voor om te bouwen door het configureren van een ontwikkelomgeving.","page-developers-smart-contracts-desc":"De logica achter dapps – zelf-uitvoerende overeenkomsten","page-developers-smart-contracts-link":"Smart Contracts","page-developers-stack":"De stack","page-developers-start":"Begin te experimenteren","page-developers-start-desc":"Wil je eerst experimenteren en pas later vragen stellen?","page-developers-storage-desc":"Leren omgaan met dapp-opslag","page-developers-storage-link":"Opslag","page-developers-subtitle":"Een handleiding voor het bouwen met Ethereum. Door ontwikkelaars, voor ontwikkelaars.","page-developers-title-1":"Ethereum","page-developers-title-2":"ontwikkelaar","page-developers-title-3":"bronnen","page-developers-token-standards-desc":"Een overzicht van geaccepteerde standaarden voor tokens","page-developers-token-standards-link":"Standaarden voor tokens","page-developers-transactions-desc":"Hoe de Ethereum-status verandert","page-developers-transactions-link":"Transacties","page-developers-web3-desc":"In hoeverre de web3-wereld van ontwikkelen anders is","page-developers-web3-link":"Web2 versus Web3","page-index-hero-image-alt":"ethereum.org hero image","page-index-meta-description":"Ethereum is een wereldwijd, gedecentraliseerd platform voor geld en nieuwe soorten toepassingen. Op Ethereum kun je code schrijven die geld controleert en toepassingen bouwen die overal ter wereld toegankelijk zijn.","page-index-meta-title":"Home","page-index-sections-developers-desc":"Leer meer over de technologie achter Ethereum en de bijbehorende toepassingen, zodat je ermee kunt gaan bouwen.","page-index-sections-developers-image-alt":"Illustratie van een hand die een Ethereum-glief bouwt van legosteentjes","page-index-sections-developers-link-text":"Start met bouwen","page-index-sections-developers-title":"Ontwikkelaars","page-index-sections-enterprise-desc":"Zie hoe je met Ethereum nieuwe bedrijfsmodellen kunt openen, je kosten verder kunt terugdringen en je bedrijf klaar kunt maken voor de toekomst.","page-index-sections-enterprise-image-alt":"Illustratie van een groep die werkt aan een Ethereum-project rond een laptop","page-index-sections-enterprise-link-text":"Ethereum voor ondernemingen","page-index-sections-enterprise-title":"Onderneming","page-index-sections-individuals-desc":"Kom meer te weten over Ethereum, Ether, wallets en tokens, zodat je Ethereum-applicaties kunt gaan gebruiken.","page-index-sections-individuals-image-alt":"Illustratie van een hond achter een computer","page-index-sections-individuals-link-text":"Aan de slag met Ethereum","page-index-sections-individuals-title":"Over Ethereum","page-index-subtitle":"Op Ethereum kun je code schrijven waarmee digitale waarde wordt beheerd. Het werkt precies zoals het is geprogrammeerd en is overal ter wereld toegankelijk.","page-index-title":"Ethereum is een wereldwijd, open-source platform voor gedecentraliseerde toepassingen."},"routed":true,"originalPath":"/developers/tutorials/waffle-test-simple-smart-contract/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}