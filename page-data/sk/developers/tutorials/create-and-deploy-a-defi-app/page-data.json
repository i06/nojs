{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/sk/developers/tutorials/create-and-deploy-a-defi-app/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/create-and-deploy-a-defi-app/","readingTime":{"minutes":11.31}},"frontmatter":{"title":"Create and deploy a DeFi App","description":"Deposit ERC20 tokens to the smart contract and mint Farm Tokens","lang":"en","tags":["solidity","defi","web3.js","truffle","ganache","smart contracts"],"author":"strykerin","source":"github.com","sourceUrl":"https://github.com/strykerin/DeFi-Token-Farm","skill":"intermediate","published":"2020-12-31T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Create and deploy a DeFi App\",\n  \"description\": \"Deposit ERC20 tokens to the smart contract and mint Farm Tokens\",\n  \"author\": \"strykerin\",\n  \"tags\": [\"solidity\", \"defi\", \"web3.js\", \"truffle\", \"ganache\", \"smart contracts\"],\n  \"skill\": \"intermediate\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"published\": \"2020-12-31T00:00:00.000Z\",\n  \"source\": \"github.com\",\n  \"sourceUrl\": \"https://github.com/strykerin/DeFi-Token-Farm\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial we will build a DeFi Application with Solidity where users can deposit an ERC20 token to the smart contract and it will mint and transfer Farm Tokens to them. The users can later withdraw their ERC20 tokens by burning their Farm Token on smart contract and the ERC20 tokens will be transferred back to them.\"), mdx(\"h2\", {\n    \"id\": \"install-truffle-and-ganache\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#install-truffle-and-ganache\",\n    \"aria-label\": \"install truffle and ganache permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install Truffle and Ganache\"), mdx(\"p\", null, \"If this is the first time you are writing a smart contract, you will need to set up your environment. We are going to use two tools: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/\"\n  }, \"Truffle\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/ganache\"\n  }, \"Ganache\"), \".\"), mdx(\"p\", null, \"Truffle is a development environment and testing framework for developing smart contracts for Ethereum. With Truffle it is easy to build and deploy smart contracts to the blockchain. Ganache allows us to create a local Ethereum blockchain in order to test smart contracts. It simulates the features of the real network and the first 10 accounts are funded with 100 test ether, thus making the smart contract deployment and testing free and easy. Ganache is available as a desktop application and a command-line tool. For this article we will be using the UI desktop application.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2360/1*V1iQ5onbLbT5Ib2QaiOSyg.png\",\n    \"alt\": \"Ganache UI desktop application\"\n  }), mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ganache UI desktop application\")), mdx(\"p\", null, \"To create the project, run the following commands\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir your-project-name\\ncd your-project-name\\ntruffle init\\n\")), mdx(\"p\", null, \"This will create a blank project for the development and deployment of our smart contracts. The created project structure is the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contracts\"), \": Folder for the solidity smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrations\"), \": Folder for the deployment scripts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \": Folder for testing our smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle-config.js\"), \": Truffle configuration file\"))), mdx(\"h2\", {\n    \"id\": \"create-the-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-the-erc20-token\",\n    \"aria-label\": \"create the erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create the ERC20 Token\"), mdx(\"p\", null, \"First we need to create our ERC20 token that we will use to stake on the smart contract. To create our fungible token, we will first need to install the OpenZeppelin library. This library contains the implementations of standards such as the ERC20 and the ERC721. To install it, run the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install @openzeppelin/contracts\\n\")), mdx(\"p\", null, \"Using the OpenZeppelin library we can create our ERC20 token by writing to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contracts/MyToken.sol\"), \" with the following solidity code:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MyToken is ERC20 {\\n    constructor() public ERC20(\\\"MyToken\\\", \\\"MTKN\\\"){\\n        _mint(msg.sender, 1000000000000000000000000);\\n    }\\n}\\n\")), mdx(\"p\", null, \"In the code above on:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 3: We import the contract ERC20.sol from openzeppelin that contains the implementation for this token standard.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 5: We inherit from the ERC20.sol contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 6: We are calling the ERC20.sol constructor and passing for the name and symbol parameters as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"MyToken\\\"\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"MTKN\\\"\"), \" respectively.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 7: We are minting and transferring 1 million tokens for the account that is deploying the smart contract (we are using the default 18 decimals for the ERC20 token, that means that if we want to mint 1 token, you will represent it as 1000000000000000000, 1 with 18 zeros).\"))), mdx(\"p\", null, \"We can see below the ERC20.sol constructor implementation where the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_decimals\"), \" field is set to 18:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"string private _name;\\nstring private _symbol;\\nuint8 private _decimals;\\n\\nconstructor (string memory name_, string memory symbol_) public {\\n    _name = name_;\\n    _symbol = symbol_;\\n    _decimals = 18;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compile-the-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#compile-the-erc20-token\",\n    \"aria-label\": \"compile the erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Compile the ERC20 Token\"), mdx(\"p\", null, \"To compile our smart contract, we must first check our solidity compiler version. You can check that by running the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle version\\n\")), mdx(\"p\", null, \"The default version is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Solidity v0.5.16\"), \". Since our token is written using the solidity version \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.6.2\"), \", if we run the command to compile our contracts we will get a compiler error. In order to specify which solidity compiler version to use, go to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle-config.js\"), \" and set to the desired compiler version as seen below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"// Configure your compilers\\ncompilers: {\\n  solc: {\\n    version: \\\"^0.8.0\\\",    // Fetch exact version from solc-bin (default: truffle's version)\\n    // docker: true,        // Use \\\"0.5.1\\\" you've installed locally with docker (default: false)\\n    // settings: {          // See the solidity docs for advice about optimization and evmVersion\\n    //  optimizer: {\\n    //    enabled: false,\\n    //    runs: 200\\n    //  },\\n    //  evmVersion: \\\"byzantium\\\"\\n    // }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now we can compile our smart contract by running the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle compile\\n\")), mdx(\"h2\", {\n    \"id\": \"deploy-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#deploy-erc20-token\",\n    \"aria-label\": \"deploy erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Deploy ERC20 Token\"), mdx(\"p\", null, \"After compiling, we can now deploy our token.\"), mdx(\"p\", null, \"On the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrations\"), \" folder, create a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2_deploy_Tokens.js\"), \". This file is where we will deploy both our ERC20 Token and our FarmToken smart contract. The code below is used to deploy our MyToken.sol contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\n\\nmodule.exports = async function (deployer, network, accounts) {\\n  // Deploy MyToken\\n  await deployer.deploy(MyToken)\\n  const myToken = await MyToken.deployed()\\n}\\n\")), mdx(\"p\", null, \"Open Ganache and select the option \\\"Quickstart\\\" to start a local Ethereum blockchain. To deploy our contract, run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle migrate\\n\")), mdx(\"p\", null, \"The address used to deploy our contracts is the first one from the list of addresses that Ganache shows us. To verify that, we can open the Ganache desktop application and we can verify that the balance of ether for the first account has been reduced due to the cost of ether to deploy our smart contracts:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2346/1*1iJ9VRlyLuza58HL3DLfpg.png\",\n    \"alt\": \"Ganache desktop application\"\n  }), mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ganache desktop application\")), mdx(\"p\", null, \"To verify that 1 million MyToken tokens have been sent to the deployer address, we can use the Truffle Console to interact with our deployed smart contract.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/docs/truffle/getting-started/using-truffle-develop-and-the-console\"\n  }, \"Truffle Console is a a basic interactive console connecting to any Ethereum client.\"))), mdx(\"p\", null, \"In order to interact with our smart contract, run the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle console\\n\")), mdx(\"p\", null, \"Now we can write the following commands in the terminal:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the smart contract: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"myToken = await MyToken.deployed()\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the array of accounts from Ganache: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accounts = await web3.eth.getAccounts()\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the balance for the first account: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance = await myToken.balanceOf(accounts[0])\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Format the balance from 18 decimals: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"web3.utils.fromWei(balance.toString())\")))), mdx(\"p\", null, \"By running the commands above, we will see that the first address has in fact 1 million MyTokens:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*AQlj9A7dw-qtY4QAD3Bpxw.png\",\n    \"alt\": \"First address has 1000000 MyTokens\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"First address has 1000000 MyTokens\")), mdx(\"h2\", {\n    \"id\": \"create-farmtoken-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-farmtoken-smart-contract\",\n    \"aria-label\": \"create farmtoken smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create FarmToken Smart Contract\"), mdx(\"p\", null, \"The FarmToken smart contract will have 3 functions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance()\"), \": Get the MyToken balance on the FarmToken smart contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \": Transfer MyToken on behalf of the user to the FarmToken smart contract then mint and transfer FarmToken to the user.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withdraw(uint256 _amount)\"), \": Burn user's FarmTokens and transfer MyTokens to the user's address.\"))), mdx(\"p\", null, \"Let's look at the FarmToken constructor:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract FarmToken is ERC20 {\\n    using Address for address;\\n    using SafeMath for uint256; // As of Solidity v0.8.0, mathematical operations can be done safely without the need for SafeMath\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public token;\\n\\n    constructor(address _token)\\n        public\\n        ERC20(\\\"FarmToken\\\", \\\"FRM\\\")\\n    {\\n        token = IERC20(_token);\\n    }\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lines 3-6: We are importing the following contracts from openzeppelin: IERC20.sol, Address.sol, SafeERC20.sol and ERC20.sol.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 8: The FarmToken will inherit from the ERC20 contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lines 14-19: The FarmToken constructor will receive as parameter the address of MyToken contract and we will assign its contract to our public variable called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \".\"))), mdx(\"p\", null, \"Let's implement the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance()\"), \" function. It will receive no parameters and it will return the balance of MyToken on this smart contract. It is implemented as shown below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function balance() public view returns (uint256) {\\n    return token.balanceOf(address(this));\\n}\\n\")), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \" function, it will receive as parameter the amount the user wants to deposit and it will mint and transfer FarmTokens to the user:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function deposit(uint256 _amount) public {\\n    // Amount must be greater than zero\\n    require(_amount > 0, \\\"amount cannot be 0\\\");\\n\\n    // Transfer MyToken to smart contract\\n    token.safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    // Mint FarmToken to msg sender\\n    _mint(msg.sender, _amount);\\n}\\n\")), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withdraw(uint256 _amount)\"), \" function, we will receive as parameter the amount of FarmTokens the user wants to burn and then transfer the same amount of MyTokens back to the user:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function withdraw(uint256 _amount) public {\\n    // Burn FarmTokens from msg sender\\n    _burn(msg.sender, _amount);\\n\\n    // Transfer MyTokens from this smart contract to msg sender\\n    token.safeTransfer(msg.sender, _amount);\\n}\\n\")), mdx(\"p\", null, \"Now we will deploy our smart contract. To do so, we will go back to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2_deploy_Tokens.js\"), \" and add the new contract to be deployed:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (deployer, network, accounts) {\\n  // Deploy MyToken\\n  await deployer.deploy(MyToken)\\n  const myToken = await MyToken.deployed()\\n\\n  // Deploy Farm Token\\n  await deployer.deploy(FarmToken, myToken.address)\\n  const farmToken = await FarmToken.deployed()\\n}\\n\")), mdx(\"p\", null, \"Note that when deploying the FarmToken, we pass as parameter the address of the deployed MyToken contract.\"), mdx(\"p\", null, \"Now, run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle compile\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle migrate\"), \" to deploy our contracts.\"), mdx(\"p\", null, \"Let's test our smart contract. Instead of using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle console\"), \" to interact with our smart contract, we will create a script to automate this process. Create a folder called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scripts\"), \" and add the following file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getMyTokenBalance.js\"), \". It will check the balance of MyTokens on the FarmToken smart contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  myToken = await MyToken.deployed()\\n  farmToken = await FarmToken.deployed()\\n  balance = await myToken.balanceOf(farmToken.address)\\n  console.log(web3.utils.fromWei(balance.toString()))\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To execute this script, run the following cli command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle exec .\\\\scripts\\\\getMyTokenBalance.js\\n\")), mdx(\"p\", null, \"We will get the expected result that is 0. If you get an error about the FarmToken not being deployed yet, the truffle network has not received the latest version of your contract code. Just close truffle, quickstart it again and make sure to run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle migrate\"), \".\"), mdx(\"p\", null, \"Now, let's stake the MyToken to the smart contract. Since the function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \" calls the function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"safeTransferFrom\"), \" from the ERC20, the user must first approve the smart contract to transfer MyToken on the user's behalf. So on the script below, we will first approve this step then we will call the function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  const accounts = await new web3.eth.getAccounts()\\n  const myToken = await MyToken.deployed()\\n  const farmToken = await FarmToken.deployed()\\n\\n  // Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom.\\n  // This is zero by default.\\n  const allowanceBefore = await myToken.allowance(\\n    accounts[0],\\n    farmToken.address\\n  )\\n  console.log(\\n    \\\"Amount of MyToken FarmToken is allowed to transfer on our behalf Before: \\\" +\\n      allowanceBefore.toString()\\n  )\\n\\n  // In order to allow the Smart Contract to transfer to MyToken (ERC-20) on the accounts[0] behalf,\\n  // we must explicitly allow it.\\n  // We allow farmToken to transfer x amount of MyToken on our behalf\\n  await myToken.approve(farmToken.address, web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n\\n  // Validate that the farmToken can now move x amount of MyToken on our behalf\\n  const allowanceAfter = await myToken.allowance(accounts[0], farmToken.address)\\n  console.log(\\n    \\\"Amount of MyToken FarmToken is allowed to transfer on our behalf After: \\\" +\\n      allowanceAfter.toString()\\n  )\\n\\n  // Verify accounts[0] and farmToken balance of MyToken before and after the transfer\\n  balanceMyTokenBeforeAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenBeforeFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\\"*** My Token ***\\\")\\n  console.log(\\n    \\\"Balance MyToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenBeforeAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenBeforeFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeFarmToken.toString())\\n  )\\n  // Call Deposit function from FarmToken\\n  console.log(\\\"Call Deposit Function\\\")\\n  await farmToken.deposit(web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n  console.log(\\\"*** My Token ***\\\")\\n  balanceMyTokenAfterAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenAfterFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance MyToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenAfterAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenAfterFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterFarmToken.toString())\\n  )\\n\\n  // End function\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To run this script: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle exec .\\\\scripts\\\\transferMyTokenToFarmToken.js\"), \". You should see on your console:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*MoekE2QCw7vB98u5dl7ang.png\",\n    \"alt\": \"output of transferMyTokenToFarmToken.js\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output of transferMyTokenToFarmToken.js\")), mdx(\"p\", null, \"As we can see, we have successfully deposited MyTokens to the smart contract as the first account has now FarmTokens.\"), mdx(\"p\", null, \"In order to withdraw:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  const accounts = await new web3.eth.getAccounts()\\n  const myToken = await MyToken.deployed()\\n  const farmToken = await FarmToken.deployed()\\n\\n  // Verify accounts[0] and farmToken balance of MyToken before and after the transfer\\n  balanceMyTokenBeforeAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenBeforeFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\\"*** My Token ***\\\")\\n  console.log(\\n    \\\"Balance MyToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenBeforeAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenBeforeFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeFarmToken.toString())\\n  )\\n\\n  // Call Deposit function from FarmToken\\n  console.log(\\\"Call Withdraw Function\\\")\\n  await farmToken.withdraw(web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n\\n  console.log(\\\"*** My Token ***\\\")\\n  balanceMyTokenAfterAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenAfterFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance MyToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenAfterAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenAfterFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterFarmToken.toString())\\n  )\\n\\n  // End function\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To run this script: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle exec .\\\\scripts\\\\withdrawMyTokenFromTokenFarm.js\"), \". As we can see on the output below, we have successfully got the MyTokens back and we have burned the FarmTokens:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*jHYlTFg0NgGbhASpsRvc0w.png\",\n    \"alt\": \"output of withdrawMyTokenFromTokenFarm.js\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output of withdrawMyTokenFromTokenFarm.js\")), mdx(\"h2\", {\n    \"id\": \"references\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"References\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openzeppelin.com/contracts/3.x/\"\n  }, \"Contracts - OpenZeppelin Docs\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/\"\n  }, \"Sweet Tools for Smart Contracts | Truffle Suite\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/ganache\"\n  }, \"Ganache | Truffle Suite\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://99bitcoins.com/what-is-defi/\"\n  }, \"What is DeFi? A Beginner's Guide (2021 Updated) (99bitcoins.com)\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://defipulse.com/\"\n  }, \"DeFi - The Decentralized Finance Leaderboard at DeFi Pulse\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#install-truffle-and-ganache-install-truffle-and-ganache","title":"Install Truffle and Ganache {#install-truffle-and-ganache}"},{"url":"#create-the-erc20-token-create-the-erc20-token","title":"Create the ERC20 Token {#create-the-erc20-token}"},{"url":"#compile-the-erc20-token-compile-the-erc20-token","title":"Compile the ERC20 Token {#compile-the-erc20-token}"},{"url":"#deploy-erc20-token-deploy-erc20-token","title":"Deploy ERC20 Token {#deploy-erc20-token}"},{"url":"#create-farmtoken-smart-contract-create-farmtoken-smart-contract","title":"Create FarmToken Smart Contract {#create-farmtoken-smart-contract}"},{"url":"#references-references","title":"References {#references}"}]}}},"pageContext":{"slug":"/sk/developers/tutorials/create-and-deploy-a-defi-app/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/create-and-deploy-a-defi-app/index.md","intl":{"language":"sk","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"1inch-logo":"Logo 1inch","aave-logo":"Logo Aave","about":"O stránke","about-ethereum-org":"O ethereum.org","about-us":"O nás","alt-eth-blocks":"Ilustrácia blokov zorganizovaných ako symbol ETH","aria-toggle-search-button":"Prepínač vyhľadávania","aria-toggle-menu-button":"Prepínač ponuky","back-to-top":"Späť na začiatok","banner-page-incomplete":"Táto stránka je neúplná a radi by sme uvítali vašu pomoc. Upravte túto stránku a pridajte všetko, čo si myslíte, že by mohlo byť užitočné pre ostatných.","beacon-chain":"Beacon Chain","binance-logo":"Logo Binance","bittrex-logo":"Logo Bittrex","brand-assets":"Aktíva značky","bug-bounty":"Odmena za nájdenie chýb","coinbase-logo":"Logo Coinbase","coinmama-logo":"Logo Coinmama","community":"Komunita","community-menu":"Ponuka Komunita","compound-logo":"Logo Compound","cons":"Nevýhody","contact":"Kontakt","content-versions":"Verzie obsahu","contributing":"Príspevky","contributors":"Prispievatelia","contributors-thanks":"Ďakujeme každému, kto prispel k tejto stránke!","cookie-policy":"Zásady používania súborov cookie","copied":"Skopírované","copy":"Kopírovať","dark-mode":"Tmavé","data-provided-by":"Zdroj dát:","decentralized-applications-dapps":"Decentralizované aplikácie (dapp)","deposit-contract":"Depozitný kontrakt","devcon":"Developerská konferencia","developer-resources":"Zdroje pre vývojárov","developers":"Vývojári","developers-home":"Domovská stránka pre vývojárov","docs":"Dokumenty","documentation":"Dokumentácia","dydx-logo":"Logo Dydx","ecosystem":"Ekosystém","edit-page":"Upraviť stránku","ef-blog":"Blog organizácie Ethereum Foundation","eips":"Návrhy na zlepšenie Etherea","enterprise":"Podniky","enterprise-menu":"Ponuka Podniky","esp":"Program podpory ekosystému","eth-current-price":"Aktuálna cena ETH (USD)","eth2":"Eth2","eth2-beaconcha-in-desc":"Open-source prehliadač Eth2 Beacon Chain","eth2-beaconscan-desc":"Prehliadač Eth2 Beacon Chain – Etherscan pre Eth2","eth2-become-staker":"Staňte sa stakerom","eth2-become-staker-desc":"Staking je v prevádzke! Ak chcete stakovať svoje ETH a pomôcť zabezpečovať sieť, uistite sa, že ste oboznámení s rizikami.","eth2-explore":"Preskúmajte dáta","eth2-no-action-needed":"Nemusíte robiť nič s ETH, ktoré už vlastníte. Dávajte si pozor na podvodníkov, ponúkajúcich výmenu vášho ETH, ak im ho pošlete.","eth2-run-beacon-chain":"Prevádzkujte beacon klienta","eth2-run-beacon-chain-desc":"Ethereum potrebuje čo najviac funkčných klientov. Pomôžte pre verejné dobro Etherea!","eth2-service-announcement":"Služobné oznámenie Eth2","eth2-what-shipping":"Kedy vychádza?","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Zdroje značky Ethereum","ethereum-community":"Komunita Etherea","ethereum-foundation":"Nadácia Etherea","ethereum-foundation-logo":"Logo Nadácie Etherea","ethereum-glossary":"Slovník pojmov pre Ethereum","ethereum-governance":"Správa Etherea","ethereum-logo":"Logo Etherea","ethereum-security":"Bezpečnosť Etherea a prevencia proti podvodom","ethereum-studio":"Štúdio Etherea","ethereum-wallets":"Peňaženky pre Ethereum","ethereum-whitepaper":"Technická dokumentácia pre Ethereum","example-projects":"Vzorové projekty","find-wallet":"Nájsť peňaženku","foundation":"Nadácia","gemini-logo":"Logo Gemini","get-eth":"Získať ETH","get-involved":"Zapojte sa","get-started":"Začíname","gitcoin-logo":"Logo Gitcoin","glossary":"Slovník","governance":"Správa","grants":"Granty","grant-programs":"Programy ekosystémových grantov","guides-and-resources":"Komunitné návody a zdroje","history":"História","history-of-ethereum":"História Etherea","home":"Domov","how-ethereum-works":"Ako Ethereum funguje","image":"obrázok","in-this-section":"V tejto sekcii","individuals":"Fyzické osoby","individuals-menu":"Ponuky Fyzické osoby","jobs":"Otvorené pozície","kraken-logo":"Logo Kraken","language-ar":"Arabčina","language-bg":"Bulharčina","language-bn":"Bengálčina","language-ca":"Katalánčina","language-cs":"Čeština","language-de":"Nemčina","language-el":"Gréčtina","language-en":"Angličtina","language-es":"Španielčina","language-fa":"Perzština","language-fi":"Fínština","language-fr":"Francúzština","language-hu":"Maďarčina","language-hr":"Chorvátčina","language-hi":"Hindčina","language-id":"Indonézština","language-ig":"Igbo","language-it":"Taliančina","language-ja":"Japončina","language-ko":"Kórejčina","language-lt":"Litovčina","language-ml":"Malajálamčina","language-nb":"Nórčina","language-nl":"Holandčina","language-pl":"Polština","language-pt":"Portugalčina","language-pt-br":"Portugalčina (Brazília)","language-ro":"Rumunčina","language-ru":"Ruština","language-se":"Švédčina","language-sk":"Slovenčina","language-sl":"Slovinčina","language-support":"Jazyková podpora","language-tr":"Turečtina","language-uk":"Ukrajinčina","language-vi":"Vietnamčina","language-zh":"Zjednodušená čínština","language-zh-tw":"Tradičná čínština","languages":"Jazyky","last-24-hrs":"Za posledných 24 hodín","last-edit":"Naposledy editované","learn":"Vzdelávanie","learn-by-coding":"Učte sa tvorbou kódu","learn-menu":"Ponuka Vzdelávanie","learn-more":"Ďalšie informácie","less":"Menej","light-mode":"Svetlé","listing-policy-disclaimer":"Všetky produkty umiestnené na tejto stránke nie sú oficiálne doložky a sú poskytované iba pre informačné účely. Ak chcete pridať produkt alebo poskytnúť spätnú väzbu týkajúcu sa postupu, vytvorte pripomienku na GitHube.","listing-policy-raise-issue-link":"Vytvoriť pripomienku","live-help":"Pomoc naživo","live-help-menu":"Ponuka Pomoc naživo","loading":"Načítava sa...","loading-error":"Chyba načítania.","loading-error-refresh":"Chyba, obnovte stránku.","logo":"logo","loopring-logo":"Logo Loopring","london-upgrade-banner":"London Upgrade bude spustený za: ","london-upgrade-banner-released":"London Upgrade je spustený!","mainnet-ethereum":"Mainnet Ethereum","makerdao-logo":"Logo MakerDao","matcha-logo":"Logo Matcha","merge":"Zlúčenie","more":"Viac","nav-beginners":"Začiatočníci","next":"Ďalej","oasis-logo":"Logo Oasis","on-this-page":"Na tejto stránke","page-content":"Obsah stránky","page-enterprise":"Podniky","page-last-updated":"Posledná aktualizácia stránky","previous":"Predchádzajúce","privacy-policy":"Zásady ochrany osobných údajov","private-ethereum":"Súkromné Ethereum","pros":"Výhody","read-more":"Prečítať viac","refresh":"Obnovte stránku.","review-progress":"Stav revízie","search":"Hľadať","search-box-blank-state-text":"Hľadajte!","search-eth-address":"Toto vyzerá ako ethereová adresa. Neposkytujeme dáta o špecifických adresách. Vyskúšajte ju vyhľadať cez prehliadač blokov ako","search-no-results":"Neboli nájdené žiadne výsledky pre hľadaný výraz","security":"Zabezpečenie","see-contributors":"Zobraziť prispievateľov","set-up-local-env":"Nastavenie miestneho prostredia","shard-chains":"Shardy","show-all":"Zobraziť všetko","show-less":"Zobraziť menej","site-description":"Ethereum je globálna decentralizovaná platforma pre peniaze a nové typy aplikácii. V Ethereu môžete tvoriť kód, ktorý bude riadiť peniaze, a zostavovať aplikácie, ktoré budú prístupné z celého sveta.","site-title":"ethereum.org","stablecoins":"Kryptomeny Stablecoin","staking":"Stakovanie","summary":"Zhrnutie","terms-of-use":"Podmienky používania","transaction-fees":"Čo sú transakčné poplatky?","translation-banner-body-new":"Táto stránka sa zobrazuje v angličtine, pretože sme ju ešte nestihli preložiť. Pomôžte nám s jej prekladom.","translation-banner-body-update":"K dispozícii je nová verzia tejto stránky. V súčasnosti je však len v angličtine. Pomôžte nám s prekladom najnovšej verzie.","translation-banner-button-join-translation-program":"Zapojte sa do prekladateľského programu","translation-banner-button-learn-more":"Ďalšie informácie","translation-banner-button-see-english":"Zobraziť v angličtine","translation-banner-button-translate-page":"Preložiť stránku","translation-banner-title-new":"Pomôžte s prekladom tejto stránky","translation-banner-title-update":"Pomôžte nám aktualizovať túto stránku","translation-program":"Prekladateľský program","translation-progress":"Priebeh prekladu","tutorials":"Kurzy","uniswap-logo":"Logo Uniswap","use":"Používanie","use-ethereum":"Používanie Etherea","use-ethereum-menu":"Ponuka Používanie Etherea","vision":"Vízia","wallets":"Peňaženky","website-last-updated":"Posledná aktualizácia stránky","what-is-ether":"Čo je Ether (ETH)?","what-is-ethereum":"Čo je to Ethereum?","whitepaper":"Dokument","defi-page":"Decentralizované finančníctvo (DeFi)","dao-page":"Decentralizované autonómne organizácie (DAO)","nft-page":"Non-fungible tokeny (NFT)","page-developer-meta-title":"Zdroje informácií pre vývojárov pre Ethereum","page-developers-about":"O týchto zdrojoch informácií pre vývojárov","page-developers-about-desc":"Na ethereum.org nájdete pomoc s programovaním aplikácií pre Ethereum vo forme dokumentácie k základným konceptom, ako aj vývojárskeho stacku. Navyše sú tu tutoriály, ktoré vám pomôžu okamžite sa pustiť do práce.","page-developers-about-desc-2":"Inšpirovaní sieťou Mozilla Developer Network sme si uvedomili, že aj Ethereum potrebuje miesto, kde sa bude sústrediť skvelý obsah od vývojárov a zdroje informácií. Podobne ako u našich priateľov v Mozille, aj tu je všetko open-source a všetko, čo tu nájdete, môžete pokojne rozširovať a zlepšovať.","page-developers-account-desc":"Kontrakty alebo ľudia v sieti","page-developers-accounts-link":"Účty","page-developers-advanced":"Pre pokročilých","page-developers-api-desc":"Interakcia so smart kontraktmi pomocou knižníc","page-developers-api-link":"Rozhrania API pre backend","page-developers-aria-label":"Ponuka pre vývojárov","page-developers-block-desc":"Dávky transakcií pridaných do blockchainu","page-developers-block-explorers-desc":"Portál pre údaje Etherea","page-developers-block-explorers-link":"Blockchainové prehliadače","page-developers-blocks-link":"Bloky","page-developers-browse-tutorials":"Preskúmajte tutoriály","page-developers-choose-stack":"Vyberte svoj stack","page-developers-contribute":"Prispejte","page-developers-dev-env-desc":"Prostredia IDE, ktoré sú vhodné na vývoj dappiek","page-developers-dev-env-link":"Vývojové prostredia","page-developers-discord":"Pripojte sa k Discord","page-developers-docs-introductions":"Úvody","page-developers-evm-desc":"Počítač, ktorý spracúva transakcie","page-developers-evm-link":"Virtuálny stroj Etherea (EVM)","page-developers-explore-documentation":"Preskúmajte dokumentáciu","page-developers-feedback":"Ak máte nejaké pripomienky, spojte sa s nami cez správu na GitHube alebo na našom serveri Discord.","page-developers-frameworks-desc":"Nástroje, ktoré pomáhajú zrýchliť vývoj","page-developers-frameworks-link":"Vývojárske rámce","page-developers-fundamentals":"Základy","page-developers-gas-desc":"Ether potrebný na vykonávanie transakcií","page-developers-gas-link":"Gas","page-developers-get-started":"Ako chcete začať?","page-developers-improve-ethereum":"Pomôžte nám zlepšiť ethereum.org","page-developers-improve-ethereum-desc":"Podobne ako samotné ethereum.org, aj tieto dokumenty sú výsledkom práce komunity. Ak nájdete nejaké chyby, priestor na zlepšenie alebo nové možnosti, ako pomôcť vývojárom aplikácií pre Ethereum, vytvorte PR.","page-developers-into-eth-desc":"Úvod do blockchainu a Etherea","page-developers-intro-dapps-desc":"Úvod do decentralizovaných aplikácií","page-developers-intro-dapps-link":"Úvod do dappiek","page-developers-intro-eth-link":"Úvod do Etherea","page-developers-intro-stack":"Úvod do stacku","page-developers-intro-stack-desc":"Úvod do stacku Etherea","page-developers-js-libraries-desc":"Interakcia so smart kontraktmi pomocou JavaScriptu","page-developers-js-libraries-link":"Knižnice JavaScriptu","page-developers-language-desc":"Používanie Etherea so známymi jazykmi","page-developers-languages":"Programovacie jazyky","page-developers-learn":"Naučte sa vyvíjať aplikácie v Ethereu","page-developers-learn-desc":"Prečítajte si o základných konceptoch a stacku Etherea v našej dokumentácii","page-developers-learn-tutorials":"Učte sa pomocou tutoriálov","page-developers-learn-tutorials-cta":"Pozrite si tutoriály","page-developers-learn-tutorials-desc":"Naučte sa vyvíjať aplikácie v Ethereu krok za krokom od tých, ktorí to vedia.","page-developers-meta-desc":"Dokumentácia, tutoriály a nástroje pre vývojárov, ktorí tvoria aplikácie v Ethereu.","page-developers-mining-desc":"Ako sa vytvárajú nové bloky a dosahuje konsenzus","page-developers-mining-link":"Dolovanie","page-developers-networks-desc":"Prehľad hlavnej siete a testovacích sietí","page-developers-networks-link":"Siete","page-developers-node-clients-desc":"Ako sa overujú bloky a transakcie v sieti","page-developers-node-clients-link":"Uzly a klienty","page-developers-oracle-desc":"Ako dostať údaje nepochádzajúce z reťazcov do smart kontraktov","page-developers-oracles-link":"Zdroje externých dát","page-developers-play-code":"Hry s kódom","page-developers-read-docs":"Prečítajte si dokumentáciu","page-developers-scaling-desc":"Riešenia pre rýchlejšie transakcie","page-developers-scaling-link":"Škálovanie","page-developers-smart-contract-security-desc":"Bezpečnostné opatrenia, ktoré treba zvážiť pri vývoji","page-developers-smart-contract-security-link":"Zabezpečenie","page-developers-set-up":"Nastavenie miestneho prostredia","page-developers-setup-desc":"Pripravte svoj stack na programovanie aplikácií nakonfigurovaním vývojového prostredia.","page-developers-smart-contracts-desc":"Logika za dappkami – automaticky uzatvárané zmluvy","page-developers-smart-contracts-link":"Smart kontrakty","page-developers-stack":"Stack","page-developers-start":"Začnite experimentovať","page-developers-start-desc":"Chcete najskôr experimentovať a potom sa pýtať?","page-developers-storage-desc":"Ako zaobchádzať s úložiskom pre dappky","page-developers-storage-link":"Úložisko","page-developers-subtitle":"Príručka programátora pre Ethereum. Programátori programátorom.","page-developers-title-1":"Ethereum","page-developers-title-2":"vývojár","page-developers-title-3":"zdroje","page-developers-token-standards-desc":"Prehľad akceptovaných štandardov tokenov","page-developers-token-standards-link":"Štandardy tokenov","page-developers-transactions-desc":"Spôsob zmeny stavu Etherea","page-developers-transactions-link":"Transakcie","page-developers-web3-desc":"V čom je iný svet vývoja pre web3","page-developers-web3-link":"Web2 vs Web3","page-index-hero-image-alt":"Ilustrácia futuristického mesta, ktoré predstavuje ekosystém Etherea.","page-index-meta-description":"Ethereum je globálna decentralizovaná platforma pre peniaze a nové typy aplikácii. V Ethereu môžete tvoriť kód, ktorý bude riadiť peniaze, a zostavovať aplikácie, ktoré budú prístupné z celého sveta.","page-index-meta-title":"Domov","page-index-title":"Vitajte v Ethereu","page-index-description":"Ethereum je technológia riadená komunitou, ktorá poháňa kryptomenu, ether (ETH) a tisícky decentralizovaných aplikácií.","page-index-title-button":"Spoznajte Ethereum","page-index-get-started":"Začnite","page-index-get-started-description":"Ethereum.org je váš portál do sveta Etherea. Táto technológia je nová a celý čas sa ďalej rozvíja – preto je dobré mať sprievodcu. Tu je naše odporúčanie, čo robiť, ak sa chcete do toho vrhnúť.","page-index-get-started-image-alt":"Ilustrácia človeka pracujúceho na počítači.","page-index-get-started-wallet-title":"Vyberte si peňaženku","page-index-get-started-wallet-description":"Peňaženka vám umožňuje pripojiť sa na Ethereum a spravovať svoje prostriedky.","page-index-get-started-wallet-image-alt":"Ilustrácia robota, ktorý má namiesto tela trezor. Predstavuje ethereovú peňaženku.","page-index-get-started-eth-title":"Získať ETH","page-index-get-started-eth-description":"ETH je menou Etherea – môžete ho používať v aplikáciách.","page-index-get-started-eth-image-alt":"Ilustrácia skupinky ľudí, s úžasom obdivujúcich glyf etheru (ETH).","page-index-get-started-dapps-title":"Použite dapp","page-index-get-started-dapps-description":"Dappy sú aplikácie poháňané Ethereom. Pozrite si, čo všetko môžete urobiť.","page-index-get-started-dapps-image-alt":"Ilustrácia psíka Doge sediaceho pri počítači.","page-index-get-started-devs-title":"Začnite programovať","page-index-get-started-devs-description":"Ak chcete začať programovať s Ethereom, máme pre vás dokumentáciu, tutoriály a iné pomôcky v našom portáli pre vývojárov.","page-index-get-started-devs-image-alt":"Ilustrácia ruky zostavujúcej logo Etherea z kociek Lego.","page-index-what-is-ethereum":"Čo je to Ethereum?","page-index-what-is-ethereum-description":"Ethereum je technológia, ktorá je domovom pre digitálne financie, globálne platby a aplikácie. Naša komunita stvorila prosperujúcu digitálnu ekonomiku, nové spôsoby online zárobku pre tvorcov a umelcov. Je otvorená pre všetkých, kdekoľvek vo svete sa nachádzate – jediné, čo potrebujete, je internet.","page-index-what-is-ethereum-button":"Čo je to Ethereum?","page-index-what-is-ethereum-secondary-button":"Viac o digitálnych financiách","page-index-what-is-ethereum-image-alt":"Ilustrácia človeka nahliadajúceho do bazáru, ktorý má predstavovať Ethereum.","page-index-defi":"Spravodlivejší finančný systém","page-index-defi-description":"V dnešnej dobe miliardy ľudí nemajú možnosť otvoriť si účet v banke, ďalší majú zablokované platby. Systém decentralizovaného finančníctva (DeFi) Etherea nikdy nespí ani nediskriminuje. So samotným pripojením na internet môžete posielať či prijímať platby, požičiavať si, získavať úroky, či dokonca vysielať finančné prostriedky kamkoľvek do sveta.","page-index-defi-button":"Spoznajte DeFi","page-index-defi-image-alt":"Ilustrácia rúk ponúkajúcich symbol Etherea.","page-index-internet":"Otvorený internet","page-index-internet-description":"V dnešnej dobe získavame prístup na „bezplatné“ internetové služby obetujúc kontrolu nad našimi osobnými údajmi. Služby Etherea sú prirodzene otvorené – jediné, čo potrebujete, je peňaženka. Peňaženky sú bezplatné, ľahko sa dajú založiť, ovládané len vami a fungujú bez akýchkoľvek osobných údajov.","page-index-internet-button":"Spoznajte otvorený internet","page-index-internet-secondary-button":"Viac o peňaženkách","page-index-internet-image-alt":"Ilustrácia futuristického počítačového zariadenia, poháňaného kryštálmi Etherea.","page-index-developers":"Nové hranice pre vývoj","page-index-developers-description":"Ethereum a jeho aplikácie sú transparentné a majú otvorený zdrojový kód. Môžete ich kopírovať a opätovne využívať funkcionality, ktoré vybudovali ostatní pred vami. Ak sa nechcete učiť nový programovací jazyk, môžete interagovať s open-source kódom prostredníctvom JavaScriptu a iných jazykov.","page-index-developers-button":"Vývojársky portál","page-index-developers-code-example-title-0":"Vaša vlastná banka","page-index-developers-code-example-description-0":"Môžete vybudovať banku, poháňanú logikou, ktorú sami naprogramujete.","page-index-developers-code-example-title-1":"Vaša vlastná mena","page-index-developers-code-example-description-1":"Môžete vytvárať tokeny, ktoré môžete prenášať a používať v aplikáciách.","page-index-developers-code-example-title-2":"Ethereová peňaženka v JavaScripte","page-index-developers-code-example-description-2":"Môžete používať existujúce programovacie jazyky na interakciu s Ethereom a inými aplikáciami.","page-index-developers-code-example-title-3":"Otvorená DNS prístupná každému","page-index-developers-code-example-description-3":"Môžete si nanovo predstaviť existujúce služby ako decentralizované, otvorené aplikácie.","page-index-network-stats-title":"Ethereum dnes","page-index-network-stats-subtitle":"Najnovšie štatistiky siete","page-index-network-stats-eth-price-description":"Cena ETH (USD)","page-index-network-stats-eth-price-explainer":"Najnovšia cena za 1 ether. Najmenšia jednotka, akú možno kúpiť, je 0,000000000000000001 – nemusíte kupovať 1 celé ETH.","page-index-network-stats-tx-day-description":"Dnešné transakcie","page-index-network-stats-tx-day-explainer":"Počet úspešne spracovaných transakcií na sieti za posledných 24 hodín.","page-index-network-stats-value-defi-description":"Hodnota uzamknutá v DeFi (USD)","page-index-network-stats-value-defi-explainer":"Množstvo peňazí v aplikáciách decentralizovaného finančníctva (DeFi), digitálnej ekonomike Etherea.","page-index-network-stats-nodes-description":"Uzly","page-index-network-stats-nodes-explainer":"Ethereum poháňajú tisícky dobrovoľníkov po celom svete, známych ako uzly.","page-index-touts-header":"Spoznajte ethereum.org","page-index-contribution-banner-title":"Prispejte na ethereum.org","page-index-contribution-banner-description":"Táto stránka má otvorený zdrojový kód so stovkami komunitných prispievateľov. Môžete navrhovať úpravy akejkoľvek časti obsahu tejto stránky, navrhovať skvelé nové funkcie, alebo nám pomôcť odchytávať chyby.","page-index-contribution-banner-image-alt":"Logo Etherea vyskladané z kociek Lego.","page-index-contribution-banner-button":"Viac o prispievaní","page-index-tout-eth2-title":"Vylepšite svoje znalosti o Eth2","page-index-tout-eth2-description":"Ethereum 2.0 je program prepojených vylepšení, navrhnutých tak, aby robili Ethereum viac škálovateľné, bezpečnejšie a udržateľné.","page-index-tout-eth2-image-alt":"Ilustrácia vesmírnej lode, predstavujúcej zvýšenú silu Eth2.","page-index-tout-enterprise-title":"Ethereum pre podniky","page-index-tout-enterprise-description":"Zistite, ako vám Ethereum môže sprístupniť nové obchodné modely, znížiť náklady a pripraviť podnikanie na budúcnosť.","page-index-tout-enterprise-image-alt":"Ilustrácia futuristického počítača/zariadenia.","page-index-tout-community-title":"Komunita Etherea","page-index-tout-community-description":"Ethereum je celé o komunite. Tvoria ju ľudia zo všemožných rôznych pozadí a záujmov. Zistite, ako sa môžete pridať.","page-index-tout-community-image-alt":"Ilustrácia skupiny spolupracujúcich robotníkov.","page-index-nft":"Internet aktív","page-index-nft-description":"Ethereum nie je len o digitálnych peniazoch. Čokoľvek, čo vlastníte, môže byť reprezentované, vymieňané a využité ako non-fungible tokeny (NFT). Môžete tokenizovať vaše umenie a dostávať honorár automaticky vždy, keď je ďalej predané. Alebo využiť token na niečo, čo vlastníte za účelom vziať si pôžičku. Možnosti sa neustále rozširujú.","page-index-nft-button":"Viac o NFT","page-index-nft-alt":"Logo Eth zobrazované pomocou hologramu."},"routed":true,"originalPath":"/developers/tutorials/create-and-deploy-a-defi-app/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}