{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/cs/developers/tutorials/how-to-mock-solidity-contracts-for-testing/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/how-to-mock-solidity-contracts-for-testing/","readingTime":{"minutes":3.89}},"frontmatter":{"title":"How to mock Solidity smart contracts for testing","description":"Why you should make fun of your contracts when testing","lang":"en","tags":["solidity","smart contracts","testing","mocking"],"author":"Markus Waas","source":"soliditydeveloper.com","sourceUrl":"https://soliditydeveloper.com/mocking-contracts","skill":"intermediate","published":"2020-05-02T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to mock Solidity smart contracts for testing\",\n  \"description\": \"Why you should make fun of your contracts when testing\",\n  \"author\": \"Markus Waas\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"tags\": [\"solidity\", \"smart contracts\", \"testing\", \"mocking\"],\n  \"skill\": \"intermediate\",\n  \"published\": \"2020-05-02T00:00:00.000Z\",\n  \"source\": \"soliditydeveloper.com\",\n  \"sourceUrl\": \"https://soliditydeveloper.com/mocking-contracts\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Mock_object\"\n  }, \"Mock objects\"), \" are a common design pattern in object-oriented programming. Coming from the old French word 'mocquer' with the meaning of 'making fun of', it evolved to 'imitating something real' which is actually what we are doing in programming. Please only make fun of your smart contracts if you want to, but mock them whenever you can. It makes your life easier.\"), mdx(\"h2\", {\n    \"id\": \"unit-testing-contracts-with-mocks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#unit-testing-contracts-with-mocks\",\n    \"aria-label\": \"unit testing contracts with mocks permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Unit-testing contracts with mocks\"), mdx(\"p\", null, \"Mocking a contract essentially means creating a second version of that contract which behaves very similar to the original one, but in a way that can be easily controlled by the developer. You often end up with complex contracts where you only want to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/testing/\"\n  }, \"unit-test small parts of the contract\"), \". The problem is what if testing this small part requires a very specific contract state that is difficult to end up in?\"), mdx(\"p\", null, \"You could write complex test setup logic everytime that brings in the contract in the required state or you write a mock. Mocking a contract is easy with inheritance. Simply create a second mock contract that inherits from the original one. Now you can override functions to your mock. Let us see it with an example.\"), mdx(\"h2\", {\n    \"id\": \"example-private-erc20\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example-private-erc20\",\n    \"aria-label\": \"example private erc20 permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example: Private ERC20\"), mdx(\"p\", null, \"We use an example ERC-20 contract that has an initial private time. The owner can manage private users and only those will be allowed to receive tokens at the beginning. Once a certain time has passed, everyone will be allowed to use the tokens. If you are curious, we are using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openzeppelin.com/contracts/3.x/extending-contracts#using-hooks\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"_beforeTokenTransfer\")), \" hook from the new OpenZeppelin contracts v3.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PrivateERC20 is ERC20, Ownable {\\n    mapping (address => bool) public isPrivateUser;\\n    uint256 private publicAfterTime;\\n\\n    constructor(uint256 privateERC20timeInSec) ERC20(\\\"PrivateERC20\\\", \\\"PRIV\\\") public {\\n        publicAfterTime = now + privateERC20timeInSec;\\n    }\\n\\n    function addUser(address user) external onlyOwner {\\n        isPrivateUser[user] = true;\\n    }\\n\\n    function isPublic() public view returns (bool) {\\n        return now >= publicAfterTime;\\n    }\\n\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(_validRecipient(to), \\\"PrivateERC20: invalid recipient\\\");\\n    }\\n\\n    function _validRecipient(address to) private view returns (bool) {\\n        if (isPublic()) {\\n            return true;\\n        }\\n\\n        return isPrivateUser[to];\\n    }\\n}\\n\")), mdx(\"p\", null, \"And now let's mock it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.0;\\nimport \\\"../PrivateERC20.sol\\\";\\n\\ncontract PrivateERC20Mock is PrivateERC20 {\\n    bool isPublicConfig;\\n\\n    constructor() public PrivateERC20(0) {}\\n\\n    function setIsPublic(bool isPublic) external {\\n        isPublicConfig = isPublic;\\n    }\\n\\n    function isPublic() public view returns (bool) {\\n        return isPublicConfig;\\n    }\\n}\\n\")), mdx(\"p\", null, \"You will get one of the following error messages:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PrivateERC20Mock.sol: TypeError: Overriding function is missing \\\"override\\\" specifier.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PrivateERC20.sol: TypeError: Trying to override non-virtual function. Did you forget to add \\\"virtual\\\"?.\"))), mdx(\"p\", null, \"Since we are using the new 0.6 Solidity version, we have to add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"virtual\"), \" keyword for functions that can be overriden and override for the overriding function. So let us add those to both \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isPublic\"), \" functions.\"), mdx(\"p\", null, \"Now in your unit tests, you can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PrivateERC20Mock\"), \" instead. When you want to test the behaviour during the private usage time, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setIsPublic(false)\"), \" and likewise \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setIsPublic(true)\"), \" for testing the public usage time. Of course in our example, we could just use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openzeppelin.com/test-helpers/0.5/api#increase\"\n  }, \"time helpers\"), \" to change the times accordingly as well. But the idea of mocking should be clear now and you can imagine scenarios where it is not as easy as simply advancing the time.\"), mdx(\"h2\", {\n    \"id\": \"mocking-many-contracts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#mocking-many-contracts\",\n    \"aria-label\": \"mocking many contracts permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Mocking many contracts\"), mdx(\"p\", null, \"It can become messy if you have to create another contract for every single mock. If this bothers you, you can take a look at the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gnosis/mock-contract\"\n  }, \"MockContract\"), \" library. It allows you to override and change behaviours of contracts on-the-fly. However, it works only for mocking calls to another contract, so it would not work for our example.\"), mdx(\"h2\", {\n    \"id\": \"mocking-can-be-even-more-powerful\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#mocking-can-be-even-more-powerful\",\n    \"aria-label\": \"mocking can be even more powerful permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Mocking can be even more powerful\"), mdx(\"p\", null, \"The powers of mocking do not end there.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adding functions: Not only overriding a specific function is useful, but also just adding additional functions. A good example for tokens is just having an additional \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mint\"), \" function to allow any user to get new tokens for free.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Usage in testnets: When you deploy and test your contracts on testnets together with your Dapp, consider using a mocked version. Avoid overriding functions unless you really have to. You want to test the real logic after all. But adding for example a reset function can be useful that simply resets the contract state to the beginning, no new deployment required. Obviously you would not want to have that in a Mainnet contract.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#unit-testing-contracts-with-mocks-unit-testing-contracts-with-mocks","title":"Unit-testing contracts with mocks {#unit-testing-contracts-with-mocks}"},{"url":"#example-private-erc20-example-private-erc20","title":"Example: Private ERC20 {#example-private-erc20}"},{"url":"#mocking-many-contracts-mocking-many-contracts","title":"Mocking many contracts {#mocking-many-contracts}"},{"url":"#mocking-can-be-even-more-powerful-mocking-can-be-even-more-powerful","title":"Mocking can be even more powerful {#mocking-can-be-even-more-powerful}"}]}}},"pageContext":{"slug":"/cs/developers/tutorials/how-to-mock-solidity-contracts-for-testing/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/how-to-mock-solidity-contracts-for-testing/index.md","intl":{"language":"cs","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"about-ethereum-org":"O ethereum.org","about-us":"O nás","brand-assets":"Značková aktiva","community":"Komunita","contact":"Kontakt","contributing":"Příspěvky","cookie-policy":"Zásady používání souborů cookie","decentralized-applications-dapps":"Decentralizované aplikace (dapps)","developers":"Vývojáři","developers-home":"Domovská stránka pro vývojáře","documentation":"Dokumentace","ef-blog":"Blog o základech platformy Ethereum","eips":"Návrhy na zlepšení platformy Ethereum","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Aktiva značky Ethereum","ethereum-community":"Komunita Ethereum","ethereum-glossary":"Slovník pojmů pro platformu Ethereum","ethereum-wallets":"Peněženky Ethereum","ethereum-whitepaper":"Oficiální dokumenty Ethereum","get-eth":"Získat ETH","get-started":"Začínáme","guides-and-resources":"Návody a zdroje","how-ethereum-works":"Jak Ethereum funguje","individuals":"Jednotlivci","individuals-menu":"Menu jednotlivce","language-support":"Jazyková podpora","languages":"Jazyky","learn":"Vzdělávání","learn-by-coding":"Učte se psaním kódu","learn-more":"Zjistit více","mainnet-ethereum":"Mainnet Ethereum","nav-beginners":"Začátečníci","page-404-copy":"Použijte vyhledávací pole, abyste nalezli, co hledáte, nebo se vrátili domů.","page-404-not-found":"Nenalezeno","page-enterprise":"Pro firmy","page-index":"Domů","page-index-section-beginners-item-one":"Začínáte s Ethereem?","page-index-section-beginners-item-three":"Proč by mě to mělo zajímat?","page-index-section-beginners-item-two":"Co je to Ethereum?","page-index-section-beginners-title":"Začátečníci","page-index-section-developers-item-one":"Příručka pro nováčky","page-index-section-developers-item-three":"Nejnovější vývojářské nástroje","page-index-section-developers-item-two":"Programování smart kontraktů","page-index-section-developers-title":"Pro vývojáře","page-index-section-enterprise-item-one":"K čemu je Ethereum pro firmy?","page-index-section-enterprise-item-three":"Komunita vývojářů Etherea pro firmy","page-index-section-enterprise-item-two":"Funkce pro firmy","page-index-section-enterprise-title":"Pro firmy","page-index-section-individuals-item-one":"Co je to Ethereum?","page-index-section-individuals-item-three":"Návody a informace","page-index-section-individuals-item-two":"Používání Etherea","page-index-section-individuals-title":"Pro jednotlivce","page-index-section-learn-item-one":"Informace pro začátečníky","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"Co se dnes dá s Ethereem dělat?","page-index-section-use-item-three":"Co je to peněženka?","page-index-section-use-item-two":"Jak získám Ether?","page-index-section-use-title":"Používání","page-last-updated":"Stránka byla naposledy aktualizována","page-learn":"Vzdělávání","page-learning-tools-consensys-academy-description":"On-line výcvikový tábor pro vývojáře Etherea","page-learning-tools-cryptozombies-description":"Naučte se Solidity při vytváření vlastní zombie hry","page-learning-tools-ethernauts-description":"Dokončete úrovně hackováním chytrých kontraktů","page-use":"Používání","privacy-policy":"Zásady ochrany osobních údajů","private-ethereum":"Soukromé Ethereum","search":"Vyhledávání","set-up-local-env":"Nastavit místní prostředí","stablecoins":"Stablecoins","terms-of-use":"Podmínky použití","translation-banner-body-new":"Tato stránka je zobrazena v angličtině, protože jsme ji zatím nepřeložili. Pomozte nám přeložit tento obsah.","translation-banner-body-update":"K dispozici je nová verze této stránky, ale v současné době je pouze v angličtině. Pomozte nám přeložit nejnovější verzi.","translation-banner-button-join-translation-program":"Zapojte se do překladatelského programu","translation-banner-button-learn-more":"Více informací","translation-banner-button-see-english":"Zobrazit angličtinu","translation-banner-button-translate-page":"Přeložit stránku","translation-banner-title-new":"Pomozte s překladem této stránky","translation-banner-title-update":"Pomozte s aktualizací této stránky","tutorials":"Návody","use":"Používání","use-ethereum":"Používání platformy Ethereum","website-last-updated":"Web byl naposledy aktualizován","what-is-ether":"Co je ether (ETH)?","what-is-ethereum":"Co je Ethereum?","page-developer-meta-title":"Zdroje pro vývojáře platformy Ethereum","page-developers-about":"Informace k těmto zdrojům pro vývojáře","page-developers-about-desc":"Web ethereum.org ti nabízí pomoc při budování na platformě Ethereum prostřednictvím dokumentace základních konceptů a sady nástrojů pro vývoj. Kromě toho jsou zde výukové programy, které ti mají usnadnit rozjezd.","page-developers-about-desc-2":"Inspirováni vývojářskou sítí Mozilla jsme cítili, že Ethereum potřebuje místo pro soustředění skvělého obsahu a zdrojů od vývojářů. Stejně jako to dělají naši přátelé v Mozille, vše je zde open-source a připraveno, abys to rozšířil(a) nebo vylepšil(a).","page-developers-account-desc":"Kontrakty nebo lidé na síti","page-developers-accounts-link":"Účty","page-developers-advanced":"Další","page-developers-api-desc":"Používání knihoven pro komunikaci s chytrými kontrakty","page-developers-api-link":"Backendová API","page-developers-aria-label":"Nabídka pro vývojáře","page-developers-block-desc":"Dávky transakcí přidané do blockchainu","page-developers-block-explorers-desc":"Brána k datům v síti Ethereum","page-developers-block-explorers-link":"Prohlížeče bloků","page-developers-blocks-link":"Bloky","page-developers-browse-tutorials":"Procházet výukové programy","page-developers-choose-stack":"Vybrat sadu nástrojů","page-developers-contribute":"Přispět","page-developers-dev-env-desc":"Vývojová prostředí (IDE) vhodná pro vývoj aplikací","page-developers-dev-env-link":"Vývojová prostředí","page-developers-discord":"Připoj se k serveru Discord.","page-developers-docs-introductions":"Úvod","page-developers-evm-desc":"Počítač, který zpracovává transakce","page-developers-evm-link":"Virtuální stroj Ethereum (EVM)","page-developers-explore-documentation":"Prozkoumej dokumentaci.","page-developers-feedback":"Pokud máš nějakou zpětnou vazbu, kontaktuj nás prostřednictvím GitHub v sekci Issues nebo na našem serveru Discord.","page-developers-frameworks-desc":"Nástroje pro urychlení vývoje","page-developers-frameworks-link":"Vývojářské rámce","page-developers-fundamentals":"Základy","page-developers-gas-desc":"Ether nezbytný k pohánění transakcí","page-developers-gas-link":"Palivo","page-developers-get-started":"Čím byste chtěli začít?","page-developers-improve-ethereum":"Pomoz nám ethereum.org vylepšit.","page-developers-improve-ethereum-desc":"Stejně jako web ethereum.org jsou tyto dokumenty výsledkem práce komunity. Pokud vidíš chyby, prostor pro vylepšení nebo nové možnosti, jak pomoci vývojářům platformy Ethereum, vytvoř PR (pull request - žádost o změnu).","page-developers-into-eth-desc":"Seznámení s blockchainem a platformou Ethereum","page-developers-intro-dapps-desc":"Seznámení s decentralizovanými aplikacemi","page-developers-intro-dapps-link":"Úvod k dapps","page-developers-intro-eth-link":"Úvod k platformě Ethereum","page-developers-intro-stack":"Úvod k sadě nástrojů","page-developers-intro-stack-desc":"Seznámení se sadou nástrojů platformy Ethereum","page-developers-js-libraries-desc":"Používání javascriptu pro komunikaci s chytrými kontrakty","page-developers-js-libraries-link":"Knihovny jazyka Javascript","page-developers-language-desc":"Používání Etherea s běžnými jazyky","page-developers-languages":"Programovací jazyky","page-developers-learn":"Pochopit vývoj na Ethereu","page-developers-learn-desc":"Přečti si o základních konceptech a sadách nástrojů pro Ethereum v naší dokumentaci.","page-developers-learn-tutorials":"Učit se z výukových kurzů","page-developers-learn-tutorials-cta":"Zobrazit výukové kurzy","page-developers-learn-tutorials-desc":"Nauč se, jak vyvíjet na Ethereu krok za krokem od tvůrců, kteří to již umí.","page-developers-meta-desc":"Dokumentace, výukové kurzy a nástroje pro vývojáře na platformě Ethereum.","page-developers-mining-desc":"Jak se tvoří nové bloky a dosahuje konsenzu","page-developers-mining-link":"Těžba","page-developers-networks-desc":"Přehled o hlavní síti (mainnet) a zkušebních sítích (testnet)","page-developers-networks-link":"Sítě","page-developers-node-clients-desc":"Jakým způsobem jsou v síti ověřovány bloky a transakce","page-developers-node-clients-link":" Uzly a klienti","page-developers-oracle-desc":"Jak dostat data mimo síť (off-chain) do chytrých kontraktů","page-developers-oracles-link":"Data oracle","page-developers-play-code":"Hrát si s kódem","page-developers-read-docs":"Přečíst dokumentaci","page-developers-scaling-desc":"Řešení pro rychlejší transakce","page-developers-scaling-link":"Škálování","page-developers-smart-contract-security-desc":"Bezpečnostní opatření, na která je třeba dbát během vývoje","page-developers-smart-contract-security-link":"Bezpečnost","page-developers-set-up":"Nastavit místní prostředí","page-developers-setup-desc":"Připrav si svou sadu nástrojů nastavením vývojového prostředí.","page-developers-smart-contracts-desc":"Logika na pozadí dapps – smlouvy s automatizovaným prováděním","page-developers-smart-contracts-link":"Chytré kontrakty","page-developers-stack":"Sada nástrojů","page-developers-start":"Začít experimentovat","page-developers-start-desc":"Chceš nejdřív experimentovat a ptát se až potom?","page-developers-storage-desc":"Jak pracovat s úložištěm decentralizovaných aplikací (dapps)","page-developers-storage-link":"Úložiště","page-developers-subtitle":"Návod pro tvůrce na platformě Ethereum. Od tvůrců, pro tvůrce.","page-developers-title-1":"Ethereum","page-developers-title-2":"vývojář","page-developers-title-3":"zdroje","page-developers-token-standards-desc":"Přehled platných standardů pro tokeny","page-developers-token-standards-link":"Standardy pro tokeny","page-developers-transactions-desc":"Způsob, kterým se mění stav sítě Ethereum","page-developers-transactions-link":"Transakce","page-developers-web3-desc":"Jak se liší vývoj ve světě web3","page-developers-web3-link":"Web2 vs. Web3","page-index-hero-image-alt":"Hlavní obrázek webu ethereum.org","page-index-meta-description":"Ethereum je celosvětová, decentralizovaná platforma pro peníze a nové druhy aplikací. Na platformě Ethereum můžeš napsat kód pro správu peněz a vytvářet aplikace přístupné odkudkoli na světě.","page-index-meta-title":"Domů","page-index-sections-developers-desc":"Poznej technologii platformy Ethereum a jejích aplikací, abys je mohl(a) začít vytvářet.","page-index-sections-developers-image-alt":"Ilustrace ruky skládající piktogram Etherea z kostek lega","page-index-sections-developers-link-text":"Začni tvořit","page-index-sections-developers-title":"Vývojáři","page-index-sections-enterprise-desc":"Podívej se, jaké nové obchodní modely Ethereum umožňuje, jak dokáže snižovat náklady a zajistit tvému podnikání už teď skvělou budoucnost.","page-index-sections-enterprise-image-alt":"Ilustrace skupiny okolo notebooku pracující na projektu Ethereum","page-index-sections-enterprise-link-text":"Ethereum pro firmy","page-index-sections-enterprise-title":"Pro firmy","page-index-sections-individuals-desc":"Získej informace o Ethereu, Etheru, peněženkách, tokenech a dalším, abys mohl(a) začít používat aplikace na platformě Ethereum.","page-index-sections-individuals-image-alt":"Ilustrace psa sedícího u počítače","page-index-sections-individuals-link-text":"První kroky s platformou Ethereum","page-index-sections-individuals-title":"O platformě Ethereum","page-index-subtitle":"Na platformě Ethereum můžeš napsat kód, který bude spravovat digitální hodnoty, poběží přesně tak, jak bude naprogramovaný, a bude dostupný odkudkoli na světě.","page-index-title":"Ethereum je celosvětová platforma pro decentralizované aplikace na bázi open-source softwaru."},"routed":true,"originalPath":"/developers/tutorials/how-to-mock-solidity-contracts-for-testing/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}