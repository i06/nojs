{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/lt/developers/tutorials/how-to-mock-solidity-contracts-for-testing/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/how-to-mock-solidity-contracts-for-testing/","readingTime":{"minutes":3.89}},"frontmatter":{"title":"How to mock Solidity smart contracts for testing","description":"Why you should make fun of your contracts when testing","lang":"en","tags":["solidity","smart contracts","testing","mocking"],"author":"Markus Waas","source":"soliditydeveloper.com","sourceUrl":"https://soliditydeveloper.com/mocking-contracts","skill":"intermediate","published":"2020-05-02T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to mock Solidity smart contracts for testing\",\n  \"description\": \"Why you should make fun of your contracts when testing\",\n  \"author\": \"Markus Waas\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"tags\": [\"solidity\", \"smart contracts\", \"testing\", \"mocking\"],\n  \"skill\": \"intermediate\",\n  \"published\": \"2020-05-02T00:00:00.000Z\",\n  \"source\": \"soliditydeveloper.com\",\n  \"sourceUrl\": \"https://soliditydeveloper.com/mocking-contracts\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Mock_object\"\n  }, \"Mock objects\"), \" are a common design pattern in object-oriented programming. Coming from the old French word 'mocquer' with the meaning of 'making fun of', it evolved to 'imitating something real' which is actually what we are doing in programming. Please only make fun of your smart contracts if you want to, but mock them whenever you can. It makes your life easier.\"), mdx(\"h2\", {\n    \"id\": \"unit-testing-contracts-with-mocks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#unit-testing-contracts-with-mocks\",\n    \"aria-label\": \"unit testing contracts with mocks permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Unit-testing contracts with mocks\"), mdx(\"p\", null, \"Mocking a contract essentially means creating a second version of that contract which behaves very similar to the original one, but in a way that can be easily controlled by the developer. You often end up with complex contracts where you only want to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/testing/\"\n  }, \"unit-test small parts of the contract\"), \". The problem is what if testing this small part requires a very specific contract state that is difficult to end up in?\"), mdx(\"p\", null, \"You could write complex test setup logic everytime that brings in the contract in the required state or you write a mock. Mocking a contract is easy with inheritance. Simply create a second mock contract that inherits from the original one. Now you can override functions to your mock. Let us see it with an example.\"), mdx(\"h2\", {\n    \"id\": \"example-private-erc20\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example-private-erc20\",\n    \"aria-label\": \"example private erc20 permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example: Private ERC20\"), mdx(\"p\", null, \"We use an example ERC-20 contract that has an initial private time. The owner can manage private users and only those will be allowed to receive tokens at the beginning. Once a certain time has passed, everyone will be allowed to use the tokens. If you are curious, we are using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openzeppelin.com/contracts/3.x/extending-contracts#using-hooks\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"_beforeTokenTransfer\")), \" hook from the new OpenZeppelin contracts v3.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PrivateERC20 is ERC20, Ownable {\\n    mapping (address => bool) public isPrivateUser;\\n    uint256 private publicAfterTime;\\n\\n    constructor(uint256 privateERC20timeInSec) ERC20(\\\"PrivateERC20\\\", \\\"PRIV\\\") public {\\n        publicAfterTime = now + privateERC20timeInSec;\\n    }\\n\\n    function addUser(address user) external onlyOwner {\\n        isPrivateUser[user] = true;\\n    }\\n\\n    function isPublic() public view returns (bool) {\\n        return now >= publicAfterTime;\\n    }\\n\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(_validRecipient(to), \\\"PrivateERC20: invalid recipient\\\");\\n    }\\n\\n    function _validRecipient(address to) private view returns (bool) {\\n        if (isPublic()) {\\n            return true;\\n        }\\n\\n        return isPrivateUser[to];\\n    }\\n}\\n\")), mdx(\"p\", null, \"And now let's mock it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.0;\\nimport \\\"../PrivateERC20.sol\\\";\\n\\ncontract PrivateERC20Mock is PrivateERC20 {\\n    bool isPublicConfig;\\n\\n    constructor() public PrivateERC20(0) {}\\n\\n    function setIsPublic(bool isPublic) external {\\n        isPublicConfig = isPublic;\\n    }\\n\\n    function isPublic() public view returns (bool) {\\n        return isPublicConfig;\\n    }\\n}\\n\")), mdx(\"p\", null, \"You will get one of the following error messages:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PrivateERC20Mock.sol: TypeError: Overriding function is missing \\\"override\\\" specifier.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PrivateERC20.sol: TypeError: Trying to override non-virtual function. Did you forget to add \\\"virtual\\\"?.\"))), mdx(\"p\", null, \"Since we are using the new 0.6 Solidity version, we have to add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"virtual\"), \" keyword for functions that can be overriden and override for the overriding function. So let us add those to both \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isPublic\"), \" functions.\"), mdx(\"p\", null, \"Now in your unit tests, you can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PrivateERC20Mock\"), \" instead. When you want to test the behaviour during the private usage time, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setIsPublic(false)\"), \" and likewise \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setIsPublic(true)\"), \" for testing the public usage time. Of course in our example, we could just use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openzeppelin.com/test-helpers/0.5/api#increase\"\n  }, \"time helpers\"), \" to change the times accordingly as well. But the idea of mocking should be clear now and you can imagine scenarios where it is not as easy as simply advancing the time.\"), mdx(\"h2\", {\n    \"id\": \"mocking-many-contracts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#mocking-many-contracts\",\n    \"aria-label\": \"mocking many contracts permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Mocking many contracts\"), mdx(\"p\", null, \"It can become messy if you have to create another contract for every single mock. If this bothers you, you can take a look at the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gnosis/mock-contract\"\n  }, \"MockContract\"), \" library. It allows you to override and change behaviours of contracts on-the-fly. However, it works only for mocking calls to another contract, so it would not work for our example.\"), mdx(\"h2\", {\n    \"id\": \"mocking-can-be-even-more-powerful\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#mocking-can-be-even-more-powerful\",\n    \"aria-label\": \"mocking can be even more powerful permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Mocking can be even more powerful\"), mdx(\"p\", null, \"The powers of mocking do not end there.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adding functions: Not only overriding a specific function is useful, but also just adding additional functions. A good example for tokens is just having an additional \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mint\"), \" function to allow any user to get new tokens for free.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Usage in testnets: When you deploy and test your contracts on testnets together with your Dapp, consider using a mocked version. Avoid overriding functions unless you really have to. You want to test the real logic after all. But adding for example a reset function can be useful that simply resets the contract state to the beginning, no new deployment required. Obviously you would not want to have that in a Mainnet contract.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#unit-testing-contracts-with-mocks-unit-testing-contracts-with-mocks","title":"Unit-testing contracts with mocks {#unit-testing-contracts-with-mocks}"},{"url":"#example-private-erc20-example-private-erc20","title":"Example: Private ERC20 {#example-private-erc20}"},{"url":"#mocking-many-contracts-mocking-many-contracts","title":"Mocking many contracts {#mocking-many-contracts}"},{"url":"#mocking-can-be-even-more-powerful-mocking-can-be-even-more-powerful","title":"Mocking can be even more powerful {#mocking-can-be-even-more-powerful}"}]}}},"pageContext":{"slug":"/lt/developers/tutorials/how-to-mock-solidity-contracts-for-testing/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/how-to-mock-solidity-contracts-for-testing/index.md","intl":{"language":"lt","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"about-ethereum-org":"Apie ethereum.org","about-us":"Apie mus","brand-assets":"Prekės ženklo turtas","community":"Bendruomenė","contact":"Susisiekti","contributing":"Prisidėkite","cookie-policy":"Slapukų naudojimo politika","decentralized-applications-dapps":"Decentralizuotos programėlės (dapps'ai)","developers":"Kūrėjams","developers-home":"Kūrėjų pagrindinis puslapis","documentation":"Dokumentacija","ef-blog":"Ethereum fondo tinklaraštis","eips":"Pasiūlymai, kaip tobulinti Ethereum","enterprise":"Verslui","ethereum":"Ethereum","ethereum-2-0":"Ethereum 2.0","ethereum-brand-assets":"Ethereum prekės ženklo turtas","ethereum-community":"Ethereum bendruomenė","ethereum-glossary":"Ethereum žodynas","ethereum-wallets":"Ethereum piniginės","ethereum-whitepaper":"Ethereum baltoji knyga","get-eth":"Gauti ETH","get-started":"Pradėkite","guides-and-resources":"Vadovai ir ištekliai","how-ethereum-works":"Kaip Ethereum veikia","individuals":"Asmenims","individuals-menu":"Asmens meniu","language-support":"Kalbos palaikymas","languages":"Kalbos","learn":"Sužinoti","learn-by-coding":"Mokykitės kurdami kodus","learn-more":"Sužinoti daugiau","mainnet-ethereum":"Mainnet Ethereum","nav-beginners":"Pradedantiesiems","page-404-copy":"Norėdami rasti, ko ieškote, naudokite ieškos lauką, esantį viršuje, arba grįžkite į pradžią.","page-404-not-found":"Nerasta","page-enterprise":"Verslui","page-index":"Ethereum","page-index-section-beginners-item-one":"Esate naujokas Ethereum?","page-index-section-beginners-item-three":"Kodėl man tai turi rūpėti?","page-index-section-beginners-item-two":"Kas yra Ethereum?","page-index-section-beginners-title":"Pradedantiesiems","page-index-section-developers-item-one":"Darbo pradžios vadovai","page-index-section-developers-item-three":"Naujausi kūrėjo įrankiai","page-index-section-developers-item-two":"Išmokite programuoti išmaniąsias sutartis","page-index-section-developers-title":"Kūrėjams","page-index-section-enterprise-item-one":"Kodėl Ethereum verslui?","page-index-section-enterprise-item-three":"Verslo kūrėjų bendruomenė","page-index-section-enterprise-item-two":"Programos verslui funkcijos","page-index-section-enterprise-title":"Verslui","page-index-section-individuals-item-one":"Kas yra Ethereum?","page-index-section-individuals-item-three":"Vadovai ir ištekliai","page-index-section-individuals-item-two":"Naudoti Ethereum","page-index-section-individuals-title":"Asmenims","page-index-section-learn-item-one":"Ištekliai pradedantiesiems","page-index-section-learn-item-three":"ETH 2.0","page-index-section-use-item-one":"Ką galėčiau padaryti su Ethereum šiandien?","page-index-section-use-item-three":"Kas yra piniginė?","page-index-section-use-item-two":"Kaip gauti Ether?","page-index-section-use-title":"Naudoti","page-last-updated":"Puslapis paskutinį kartą atnaujintas","page-learning-tools-consensys-academy-description":"Ethereum kūrėjų naujokų kursai internetu","page-learning-tools-cryptozombies-description":"Išmokite Solidity, kurdami savo zombių žaidimą","page-learning-tools-ethernauts-description":"Įveikite lygius nulauždami išmaniąsias sutartis","privacy-policy":"Privatumo politika","private-ethereum":"Privatus Ethereum","search":"Paieška","set-up-local-env":"Susikurkite vietinę aplinką","stablecoins":"Stablecoins","terms-of-use":"Naudojimosi sąlygos","translation-banner-body-new":"Šį puslapį matote anglų kalba, nes jis dar nėra išverstas. Padėkite mums išversti šį turinį.","translation-banner-body-update":"Jau yra nauja šio puslapio versija, bet kol kas tik anglų kalba. Padėkite mums išversti naujausią versiją.","translation-banner-button-join-translation-program":"Prisijunkite prie vertimo programos","translation-banner-button-learn-more":"Sužinokite daugiau","translation-banner-button-see-english":"Rodyti anglų kalba","translation-banner-button-translate-page":"Išversti puslapį","translation-banner-title-new":"Pagalba verčiant šį puslapį","translation-banner-title-update":"Padėkite atnaujinti šį puslapį","tutorials":"Pamokos","use":"Naudoti","use-ethereum":"Naudokite Ethereum","website-last-updated":"Svetainė paskutinį kartą atnaujinta","what-is-ether":"Kas yra Ether (ETH)?","what-is-ethereum":"Kas yra Ethereum?","page-developer-meta-title":"Ethereum kūrėjų ištekliai","page-developers-about":"Apie šiuos kūrėjų išteklius","page-developers-about-desc":"ethereum.org sukurta tam, kad padėtų jums kurti Ethereum pasitelkiant dokumentus apie pamatinius principus bei kūrimo rinkinį. Be kita ko, čia yra ir vadovėlių, kurie padės pradžioje.","page-developers-about-desc-2":"Įkvėpti Mozilla Developer Network supratome, kad Ethereum turi turėti svarbios, kurėjams skirtos medžiagos ir išteklių saugyklą. Kaip ir pas mūsų bičiulius Mozilla naršyklėje, čia viskas pagrįsta atviru kodu ir paruošta plėtojimui ir tobulinimui.","page-developers-account-desc":"Kontaktai arba asmenys tinkle","page-developers-accounts-link":"Paskyros","page-developers-advanced":"Pažengusiems","page-developers-api-desc":"Bibliotekų naudojimas sąsajai su išmaniosiomis sutartimis","page-developers-api-link":"Backend programų sąsajos","page-developers-aria-label":"Kūrėjų meniu","page-developers-block-desc":"Į blokų grandinę įtraukti sandorių paketai","page-developers-block-explorers-desc":"Jūsų portalas į Ethereum duomenis","page-developers-block-explorers-link":"Blokų naršyklės","page-developers-blocks-link":"Blokai","page-developers-browse-tutorials":"Peržiūrėti vadovėlius","page-developers-choose-stack":"Pasirinkite savo rinkinį","page-developers-contribute":"Prisidėkite","page-developers-dev-env-desc":"IDE, pritaikytos dapps'ų kūrimui","page-developers-dev-env-link":"Kūrimo aplinkos","page-developers-discord":"Prisijungti prie Discord","page-developers-docs-introductions":"Įvadas","page-developers-evm-desc":"Sandorius apdorojantis kompiuteris","page-developers-evm-link":"EVM, Ethereum virtualusis įrenginys","page-developers-explore-documentation":"Nagrinėti dokumentus","page-developers-feedback":"Jei norite pateikti savo nuomonę, susisiekite su mumis per GitHub klausimų puslapį arba per mūsų Discord serverį.","page-developers-frameworks-desc":"Priemonės, paspartinančios kūrimo procesą","page-developers-frameworks-link":"Kūrimo struktūros","page-developers-fundamentals":"Pagrindai","page-developers-gas-desc":"Ether reikalingas sandorių vykdymui","page-developers-gas-link":"Dujos","page-developers-get-started":"Kaip norėtumėte pradėti?","page-developers-improve-ethereum":"Padėkite mums tobulinti ethereum.org","page-developers-improve-ethereum-desc":"Kaip ir ethereum.org, šie dokumentai yra sukurti bendruomenės. Sukurkite PR, jei randate klaidų, tobulintinų sričių ar naujų galimybių padėti Ethereum kūrėjams.","page-developers-into-eth-desc":"Įžanga į blokų grandines ir Ethereum","page-developers-intro-dapps-desc":"Įžanga į decentralizuotas programas","page-developers-intro-dapps-link":"Įžanga į dapps'us (decentralizuotas programas)","page-developers-intro-eth-link":"Įžanga į Ethereum","page-developers-intro-stack":"Įžanga į rinkinį","page-developers-intro-stack-desc":"Įžanga į Ethereum rinkinį","page-developers-js-libraries-desc":"Javascript naudojimas sąsajai su išmaniosiomis sutartimis","page-developers-js-libraries-link":"Javascript bibliotekos","page-developers-language-desc":"Ethereum naudojimas su pažįstamomis kalbomis","page-developers-languages":"Programavimo kalbos","page-developers-learn":"Išmokite kurti Ethereum","page-developers-learn-desc":"Sužinokite apie pagrindines sąvokas ir Ethereum rinkinį skaitydami mūsų dokumentus","page-developers-learn-tutorials":"Mokykitės iš vadovėlių","page-developers-learn-tutorials-cta":"Peržiūrėkite vadovėlius","page-developers-learn-tutorials-desc":"Išmokite, kaip kurti Ethereum žingsnis po žingsnio iš kūrėjų, kurie tai jau yra darę.","page-developers-meta-desc":"Dokumentai, vadovai ir įrankiai kūrėjams, kuriantiems Ethereum tinkle.","page-developers-mining-desc":"Kaip kuriami nauji blokai ir siekiama susitarimo","page-developers-mining-link":"Kasyba","page-developers-networks-desc":"Pagrindinio tinklo ir bandomųjų tinklų apžvalga","page-developers-networks-link":"Tinklai","page-developers-node-clients-desc":"Kaip blokai ir sandoriai tikrinami tinkle","page-developers-node-clients-link":" Mazgai ir klientai","page-developers-oracle-desc":"Netinklinių duomenų įtraukimas į išmaniąsias sutartis","page-developers-oracles-link":"Orakulai","page-developers-play-code":"Žaisti su kodu","page-developers-read-docs":"Skaityti dokumentus","page-developers-scaling-desc":"Sprendimai greitesniems sandoriams","page-developers-scaling-link":"Dydžio pritaikymas","page-developers-smart-contract-security-desc":"Saugumo priemonės, į kurias reikia atsižvelgti kuriant","page-developers-smart-contract-security-link":"Saugumas","page-developers-set-up":"Susikurkite vietinę aplinką","page-developers-setup-desc":"Paruoškite savo rinkinį kūrimui, sukonfigūruodami kūrimo aplinką.","page-developers-smart-contracts-desc":"Decentralizuotų programų logika- save vykdančios sutartys","page-developers-smart-contracts-link":"Išmaniosios sutartys","page-developers-stack":"Rinkinys","page-developers-start":"Pradėti bandyti","page-developers-start-desc":"Norite pirma išbandyti, o po to klausti?","page-developers-storage-desc":"Kaip saugoti decentralizuotas programas","page-developers-storage-link":"Saugykla","page-developers-subtitle":"Kūrėjų Ethereum vadovas. Sukurta kūrėjų kūrėjams.","page-developers-title-1":"Ethereum","page-developers-title-2":"kūrėjas","page-developers-title-3":"ištekliai","page-developers-token-standards-desc":"Priimtų žetonų standartų apžvalga","page-developers-token-standards-link":"Žetonų standartai","page-developers-transactions-desc":"Kaip keičiasi Ethereum būsena","page-developers-transactions-link":"Sandoriai","page-developers-web3-desc":"Kuo skiriasi web3 kūrimo pasaulis","page-developers-web3-link":"Web2 ir Web3 palyginimas","page-index-hero-image-alt":"ethereum.org herojaus vaizdas","page-index-meta-description":"Ethereum yra globali, decentralizuota pinigų platforma, skirta naujo tipo programoms. Ethereum platformoje galite sukurti pinigus valdantį kodą bei kurti programas, prieinamas visame pasaulyje.","page-index-meta-title":"Pagrindinis puslapis","page-index-sections-developers-desc":"Sužinokite, kokia technologija pagrįstas Ethereum bei jo programos, kad patys galėtumėte pradėti kurti platformoje.","page-index-sections-developers-image-alt":"Paveikslėlis rankos, kuri iš lego kaladėlių renka Ethereum simbolį","page-index-sections-developers-link-text":"Pradėkite kurti","page-index-sections-developers-title":"Kūrėjams","page-index-sections-enterprise-desc":"Pamatykite, kaip Ethereum atveria naujus verslo modelius, sumažina išlaidas ir užtikrina verslo ateities perspektyvas.","page-index-sections-enterprise-image-alt":"Paveiklėlis grupės, dirbančios su Ethereum projektu prie nešiojamojo kompiuterio","page-index-sections-enterprise-link-text":"Ethereum verslui","page-index-sections-enterprise-title":"Verslui","page-index-sections-individuals-desc":"Susipažinkite su Ethereum, Ether, piniginėmis, žetonais ir kt., kad galėtumėte pradėti naudoti Ethereum programas.","page-index-sections-individuals-image-alt":"Paveikslėlis šuns, sėdinčio prie kompiuterio","page-index-sections-individuals-link-text":"Pradėkite dirbti su Ethereum","page-index-sections-individuals-title":"Apie Ethereum","page-index-subtitle":"Ethereum platformoje galite kurti kodą, kontroliuojantį skaitmenines reikšmes, veikiantį tiksliai kaip suprogramavote, ir pasiekiamą visame pasaulyje.","page-index-title":"Ethereum yra globali, atviro kodo platforma decentralizuotoms programoms kurti."},"routed":true,"originalPath":"/developers/tutorials/how-to-mock-solidity-contracts-for-testing/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}