{
    "componentChunkName": "component---src-templates-tutorial-js",
    "path": "/ar/developers/tutorials/create-and-deploy-a-defi-app/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/create-and-deploy-a-defi-app/","readingTime":{"minutes":11.31}},"frontmatter":{"title":"Create and deploy a DeFi App","description":"Deposit ERC20 tokens to the smart contract and mint Farm Tokens","lang":"en","tags":["solidity","defi","web3.js","truffle","ganache","smart contracts"],"author":"strykerin","source":"github.com","sourceUrl":"https://github.com/strykerin/DeFi-Token-Farm","skill":"intermediate","published":"2020-12-31T00:00:00.000Z","sidebar":true,"sidebarDepth":null,"address":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Create and deploy a DeFi App\",\n  \"description\": \"Deposit ERC20 tokens to the smart contract and mint Farm Tokens\",\n  \"author\": \"strykerin\",\n  \"tags\": [\"solidity\", \"defi\", \"web3.js\", \"truffle\", \"ganache\", \"smart contracts\"],\n  \"skill\": \"intermediate\",\n  \"lang\": \"en\",\n  \"sidebar\": true,\n  \"published\": \"2020-12-31T00:00:00.000Z\",\n  \"source\": \"github.com\",\n  \"sourceUrl\": \"https://github.com/strykerin/DeFi-Token-Farm\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial we will build a DeFi Application with Solidity where users can deposit an ERC20 token to the smart contract and it will mint and transfer Farm Tokens to them. The users can later withdraw their ERC20 tokens by burning their Farm Token on smart contract and the ERC20 tokens will be transferred back to them.\"), mdx(\"h2\", {\n    \"id\": \"install-truffle-and-ganache\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#install-truffle-and-ganache\",\n    \"aria-label\": \"install truffle and ganache permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install Truffle and Ganache\"), mdx(\"p\", null, \"If this is the first time you are writing a smart contract, you will need to set up your environment. We are going to use two tools: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/\"\n  }, \"Truffle\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/ganache\"\n  }, \"Ganache\"), \".\"), mdx(\"p\", null, \"Truffle is a development environment and testing framework for developing smart contracts for Ethereum. With Truffle it is easy to build and deploy smart contracts to the blockchain. Ganache allows us to create a local Ethereum blockchain in order to test smart contracts. It simulates the features of the real network and the first 10 accounts are funded with 100 test ether, thus making the smart contract deployment and testing free and easy. Ganache is available as a desktop application and a command-line tool. For this article we will be using the UI desktop application.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2360/1*V1iQ5onbLbT5Ib2QaiOSyg.png\",\n    \"alt\": \"Ganache UI desktop application\"\n  }), mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ganache UI desktop application\")), mdx(\"p\", null, \"To create the project, run the following commands\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir your-project-name\\ncd your-project-name\\ntruffle init\\n\")), mdx(\"p\", null, \"This will create a blank project for the development and deployment of our smart contracts. The created project structure is the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contracts\"), \": Folder for the solidity smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrations\"), \": Folder for the deployment scripts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \": Folder for testing our smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle-config.js\"), \": Truffle configuration file\"))), mdx(\"h2\", {\n    \"id\": \"create-the-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-the-erc20-token\",\n    \"aria-label\": \"create the erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create the ERC20 Token\"), mdx(\"p\", null, \"First we need to create our ERC20 token that we will use to stake on the smart contract. To create our fungible token, we will first need to install the OpenZeppelin library. This library contains the implementations of standards such as the ERC20 and the ERC721. To install it, run the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install @openzeppelin/contracts\\n\")), mdx(\"p\", null, \"Using the OpenZeppelin library we can create our ERC20 token by writing to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contracts/MyToken.sol\"), \" with the following solidity code:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MyToken is ERC20 {\\n    constructor() public ERC20(\\\"MyToken\\\", \\\"MTKN\\\"){\\n        _mint(msg.sender, 1000000000000000000000000);\\n    }\\n}\\n\")), mdx(\"p\", null, \"In the code above on:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 3: We import the contract ERC20.sol from openzeppelin that contains the implementation for this token standard.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 5: We inherit from the ERC20.sol contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 6: We are calling the ERC20.sol constructor and passing for the name and symbol parameters as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"MyToken\\\"\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"MTKN\\\"\"), \" respectively.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 7: We are minting and transferring 1 million tokens for the account that is deploying the smart contract (we are using the default 18 decimals for the ERC20 token, that means that if we want to mint 1 token, you will represent it as 1000000000000000000, 1 with 18 zeros).\"))), mdx(\"p\", null, \"We can see below the ERC20.sol constructor implementation where the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_decimals\"), \" field is set to 18:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"string private _name;\\nstring private _symbol;\\nuint8 private _decimals;\\n\\nconstructor (string memory name_, string memory symbol_) public {\\n    _name = name_;\\n    _symbol = symbol_;\\n    _decimals = 18;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compile-the-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#compile-the-erc20-token\",\n    \"aria-label\": \"compile the erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Compile the ERC20 Token\"), mdx(\"p\", null, \"To compile our smart contract, we must first check our solidity compiler version. You can check that by running the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle version\\n\")), mdx(\"p\", null, \"The default version is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Solidity v0.5.16\"), \". Since our token is written using the solidity version \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.6.2\"), \", if we run the command to compile our contracts we will get a compiler error. In order to specify which solidity compiler version to use, go to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle-config.js\"), \" and set to the desired compiler version as seen below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"// Configure your compilers\\ncompilers: {\\n  solc: {\\n    version: \\\"^0.8.0\\\",    // Fetch exact version from solc-bin (default: truffle's version)\\n    // docker: true,        // Use \\\"0.5.1\\\" you've installed locally with docker (default: false)\\n    // settings: {          // See the solidity docs for advice about optimization and evmVersion\\n    //  optimizer: {\\n    //    enabled: false,\\n    //    runs: 200\\n    //  },\\n    //  evmVersion: \\\"byzantium\\\"\\n    // }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now we can compile our smart contract by running the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle compile\\n\")), mdx(\"h2\", {\n    \"id\": \"deploy-erc20-token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#deploy-erc20-token\",\n    \"aria-label\": \"deploy erc20 token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Deploy ERC20 Token\"), mdx(\"p\", null, \"After compiling, we can now deploy our token.\"), mdx(\"p\", null, \"On the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrations\"), \" folder, create a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2_deploy_Tokens.js\"), \". This file is where we will deploy both our ERC20 Token and our FarmToken smart contract. The code below is used to deploy our MyToken.sol contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\n\\nmodule.exports = async function (deployer, network, accounts) {\\n  // Deploy MyToken\\n  await deployer.deploy(MyToken)\\n  const myToken = await MyToken.deployed()\\n}\\n\")), mdx(\"p\", null, \"Open Ganache and select the option \\\"Quickstart\\\" to start a local Ethereum blockchain. To deploy our contract, run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle migrate\\n\")), mdx(\"p\", null, \"The address used to deploy our contracts is the first one from the list of addresses that Ganache shows us. To verify that, we can open the Ganache desktop application and we can verify that the balance of ether for the first account has been reduced due to the cost of ether to deploy our smart contracts:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2346/1*1iJ9VRlyLuza58HL3DLfpg.png\",\n    \"alt\": \"Ganache desktop application\"\n  }), mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Ganache desktop application\")), mdx(\"p\", null, \"To verify that 1 million MyToken tokens have been sent to the deployer address, we can use the Truffle Console to interact with our deployed smart contract.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/docs/truffle/getting-started/using-truffle-develop-and-the-console\"\n  }, \"Truffle Console is a a basic interactive console connecting to any Ethereum client.\"))), mdx(\"p\", null, \"In order to interact with our smart contract, run the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle console\\n\")), mdx(\"p\", null, \"Now we can write the following commands in the terminal:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the smart contract: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"myToken = await MyToken.deployed()\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the array of accounts from Ganache: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accounts = await web3.eth.getAccounts()\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the balance for the first account: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance = await myToken.balanceOf(accounts[0])\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Format the balance from 18 decimals: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"web3.utils.fromWei(balance.toString())\")))), mdx(\"p\", null, \"By running the commands above, we will see that the first address has in fact 1 million MyTokens:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*AQlj9A7dw-qtY4QAD3Bpxw.png\",\n    \"alt\": \"First address has 1000000 MyTokens\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"First address has 1000000 MyTokens\")), mdx(\"h2\", {\n    \"id\": \"create-farmtoken-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#create-farmtoken-smart-contract\",\n    \"aria-label\": \"create farmtoken smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create FarmToken Smart Contract\"), mdx(\"p\", null, \"The FarmToken smart contract will have 3 functions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance()\"), \": Get the MyToken balance on the FarmToken smart contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \": Transfer MyToken on behalf of the user to the FarmToken smart contract then mint and transfer FarmToken to the user.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withdraw(uint256 _amount)\"), \": Burn user's FarmTokens and transfer MyTokens to the user's address.\"))), mdx(\"p\", null, \"Let's look at the FarmToken constructor:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract FarmToken is ERC20 {\\n    using Address for address;\\n    using SafeMath for uint256; // As of Solidity v0.8.0, mathematical operations can be done safely without the need for SafeMath\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public token;\\n\\n    constructor(address _token)\\n        public\\n        ERC20(\\\"FarmToken\\\", \\\"FRM\\\")\\n    {\\n        token = IERC20(_token);\\n    }\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lines 3-6: We are importing the following contracts from openzeppelin: IERC20.sol, Address.sol, SafeERC20.sol and ERC20.sol.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Line 8: The FarmToken will inherit from the ERC20 contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lines 14-19: The FarmToken constructor will receive as parameter the address of MyToken contract and we will assign its contract to our public variable called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \".\"))), mdx(\"p\", null, \"Let's implement the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balance()\"), \" function. It will receive no parameters and it will return the balance of MyToken on this smart contract. It is implemented as shown below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function balance() public view returns (uint256) {\\n    return token.balanceOf(address(this));\\n}\\n\")), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \" function, it will receive as parameter the amount the user wants to deposit and it will mint and transfer FarmTokens to the user:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function deposit(uint256 _amount) public {\\n    // Amount must be greater than zero\\n    require(_amount > 0, \\\"amount cannot be 0\\\");\\n\\n    // Transfer MyToken to smart contract\\n    token.safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    // Mint FarmToken to msg sender\\n    _mint(msg.sender, _amount);\\n}\\n\")), mdx(\"p\", null, \"For the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withdraw(uint256 _amount)\"), \" function, we will receive as parameter the amount of FarmTokens the user wants to burn and then transfer the same amount of MyTokens back to the user:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function withdraw(uint256 _amount) public {\\n    // Burn FarmTokens from msg sender\\n    _burn(msg.sender, _amount);\\n\\n    // Transfer MyTokens from this smart contract to msg sender\\n    token.safeTransfer(msg.sender, _amount);\\n}\\n\")), mdx(\"p\", null, \"Now we will deploy our smart contract. To do so, we will go back to the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2_deploy_Tokens.js\"), \" and add the new contract to be deployed:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (deployer, network, accounts) {\\n  // Deploy MyToken\\n  await deployer.deploy(MyToken)\\n  const myToken = await MyToken.deployed()\\n\\n  // Deploy Farm Token\\n  await deployer.deploy(FarmToken, myToken.address)\\n  const farmToken = await FarmToken.deployed()\\n}\\n\")), mdx(\"p\", null, \"Note that when deploying the FarmToken, we pass as parameter the address of the deployed MyToken contract.\"), mdx(\"p\", null, \"Now, run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle compile\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle migrate\"), \" to deploy our contracts.\"), mdx(\"p\", null, \"Let's test our smart contract. Instead of using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle console\"), \" to interact with our smart contract, we will create a script to automate this process. Create a folder called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scripts\"), \" and add the following file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getMyTokenBalance.js\"), \". It will check the balance of MyTokens on the FarmToken smart contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  myToken = await MyToken.deployed()\\n  farmToken = await FarmToken.deployed()\\n  balance = await myToken.balanceOf(farmToken.address)\\n  console.log(web3.utils.fromWei(balance.toString()))\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To execute this script, run the following cli command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"truffle exec .\\\\scripts\\\\getMyTokenBalance.js\\n\")), mdx(\"p\", null, \"We will get the expected result that is 0. If you get an error about the FarmToken not being deployed yet, the truffle network has not received the latest version of your contract code. Just close truffle, quickstart it again and make sure to run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle migrate\"), \".\"), mdx(\"p\", null, \"Now, let's stake the MyToken to the smart contract. Since the function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deposit(uint256 _amount)\"), \" calls the function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"safeTransferFrom\"), \" from the ERC20, the user must first approve the smart contract to transfer MyToken on the user's behalf. So on the script below, we will first approve this step then we will call the function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  const accounts = await new web3.eth.getAccounts()\\n  const myToken = await MyToken.deployed()\\n  const farmToken = await FarmToken.deployed()\\n\\n  // Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transferFrom.\\n  // This is zero by default.\\n  const allowanceBefore = await myToken.allowance(\\n    accounts[0],\\n    farmToken.address\\n  )\\n  console.log(\\n    \\\"Amount of MyToken FarmToken is allowed to transfer on our behalf Before: \\\" +\\n      allowanceBefore.toString()\\n  )\\n\\n  // In order to allow the Smart Contract to transfer to MyToken (ERC-20) on the accounts[0] behalf,\\n  // we must explicitly allow it.\\n  // We allow farmToken to transfer x amount of MyToken on our behalf\\n  await myToken.approve(farmToken.address, web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n\\n  // Validate that the farmToken can now move x amount of MyToken on our behalf\\n  const allowanceAfter = await myToken.allowance(accounts[0], farmToken.address)\\n  console.log(\\n    \\\"Amount of MyToken FarmToken is allowed to transfer on our behalf After: \\\" +\\n      allowanceAfter.toString()\\n  )\\n\\n  // Verify accounts[0] and farmToken balance of MyToken before and after the transfer\\n  balanceMyTokenBeforeAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenBeforeFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\\"*** My Token ***\\\")\\n  console.log(\\n    \\\"Balance MyToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenBeforeAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenBeforeFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeFarmToken.toString())\\n  )\\n  // Call Deposit function from FarmToken\\n  console.log(\\\"Call Deposit Function\\\")\\n  await farmToken.deposit(web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n  console.log(\\\"*** My Token ***\\\")\\n  balanceMyTokenAfterAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenAfterFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance MyToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenAfterAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenAfterFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterFarmToken.toString())\\n  )\\n\\n  // End function\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To run this script: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle exec .\\\\scripts\\\\transferMyTokenToFarmToken.js\"), \". You should see on your console:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*MoekE2QCw7vB98u5dl7ang.png\",\n    \"alt\": \"output of transferMyTokenToFarmToken.js\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output of transferMyTokenToFarmToken.js\")), mdx(\"p\", null, \"As we can see, we have successfully deposited MyTokens to the smart contract as the first account has now FarmTokens.\"), mdx(\"p\", null, \"In order to withdraw:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const MyToken = artifacts.require(\\\"MyToken\\\")\\nconst FarmToken = artifacts.require(\\\"FarmToken\\\")\\n\\nmodule.exports = async function (callback) {\\n  const accounts = await new web3.eth.getAccounts()\\n  const myToken = await MyToken.deployed()\\n  const farmToken = await FarmToken.deployed()\\n\\n  // Verify accounts[0] and farmToken balance of MyToken before and after the transfer\\n  balanceMyTokenBeforeAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenBeforeFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\\"*** My Token ***\\\")\\n  console.log(\\n    \\\"Balance MyToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenBeforeFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenBeforeAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenBeforeFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken Before accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken Before TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenBeforeFarmToken.toString())\\n  )\\n\\n  // Call Deposit function from FarmToken\\n  console.log(\\\"Call Withdraw Function\\\")\\n  await farmToken.withdraw(web3.utils.toWei(\\\"100\\\", \\\"ether\\\"))\\n\\n  console.log(\\\"*** My Token ***\\\")\\n  balanceMyTokenAfterAccounts0 = await myToken.balanceOf(accounts[0])\\n  balanceMyTokenAfterFarmToken = await myToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance MyToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance MyToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceMyTokenAfterFarmToken.toString())\\n  )\\n\\n  console.log(\\\"*** Farm Token ***\\\")\\n  balanceFarmTokenAfterAccounts0 = await farmToken.balanceOf(accounts[0])\\n  balanceFarmTokenAfterFarmToken = await farmToken.balanceOf(farmToken.address)\\n  console.log(\\n    \\\"Balance FarmToken After accounts[0] \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterAccounts0.toString())\\n  )\\n  console.log(\\n    \\\"Balance FarmToken After TokenFarm \\\" +\\n      web3.utils.fromWei(balanceFarmTokenAfterFarmToken.toString())\\n  )\\n\\n  // End function\\n  callback()\\n}\\n\")), mdx(\"p\", null, \"To run this script: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"truffle exec .\\\\scripts\\\\withdrawMyTokenFromTokenFarm.js\"), \". As we can see on the output below, we have successfully got the MyTokens back and we have burned the FarmTokens:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://cdn-images-1.medium.com/max/2000/1*jHYlTFg0NgGbhASpsRvc0w.png\",\n    \"alt\": \"output of withdrawMyTokenFromTokenFarm.js\"\n  })), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output of withdrawMyTokenFromTokenFarm.js\")), mdx(\"h2\", {\n    \"id\": \"references\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"References\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openzeppelin.com/contracts/3.x/\"\n  }, \"Contracts - OpenZeppelin Docs\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/\"\n  }, \"Sweet Tools for Smart Contracts | Truffle Suite\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.trufflesuite.com/ganache\"\n  }, \"Ganache | Truffle Suite\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://99bitcoins.com/what-is-defi/\"\n  }, \"What is DeFi? A Beginner's Guide (2021 Updated) (99bitcoins.com)\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://defipulse.com/\"\n  }, \"DeFi - The Decentralized Finance Leaderboard at DeFi Pulse\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#install-truffle-and-ganache-install-truffle-and-ganache","title":"Install Truffle and Ganache {#install-truffle-and-ganache}"},{"url":"#create-the-erc20-token-create-the-erc20-token","title":"Create the ERC20 Token {#create-the-erc20-token}"},{"url":"#compile-the-erc20-token-compile-the-erc20-token","title":"Compile the ERC20 Token {#compile-the-erc20-token}"},{"url":"#deploy-erc20-token-deploy-erc20-token","title":"Deploy ERC20 Token {#deploy-erc20-token}"},{"url":"#create-farmtoken-smart-contract-create-farmtoken-smart-contract","title":"Create FarmToken Smart Contract {#create-farmtoken-smart-contract}"},{"url":"#references-references","title":"References {#references}"}]}}},"pageContext":{"slug":"/ar/developers/tutorials/create-and-deploy-a-defi-app/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/create-and-deploy-a-defi-app/index.md","intl":{"language":"ar","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"1inch-logo":"شعار شركة 1inch","aave-logo":"شعار شركة Aave","about":"نبذة","about-ethereum-org":"نبذة عن ethereum.org","about-us":"نبذة عنا","alt-eth-blocks":"صورة توضيحية لكتل منظمة على شكل شعار الإثيريوم","aria-toggle-search-button":"تبديل زر البحث","aria-toggle-menu-button":"تبديل زر القائمة","back-to-top":"عودة إلى الأعلى","banner-page-incomplete":"هذه الصفحة غير مكتملة و تسعدنا مساعدتك، عدل هذه الصفحة وأضف أي شيء تجد أنه ذو منفعة للآخرين.","beacon-chain":"سلسلة المنارة","binance-logo":"شعار شركة Binance","bittrex-logo":"شعار شركة Bittrex","brand-assets":"أصول العلامة التجارية","bug-bounty":"مكافأة اكتشاف الأخطاء","coinbase-logo":"شعار شركة Coinbase","coinmama-logo":"شعار شركة Coinmama","community":"المجتمع","community-menu":"قائمة المجتمع","compound-logo":"شعار شركة Compound","cons":"سلبيات","contact":"تواصل","content-versions":"نسخ المحتوى","contributing":"المساهمة","contributors":"المساهمون","contributors-thanks":"إلى كل من ساهم في هذه الصفحة، شكرا لك!","cookie-policy":"سياسة ملفات تعريف الارتباط","copied":"تم النسخ","copy":"نسخ","dark-mode":"داكن","data-provided-by":"مصدر البيانات:","decentralized-applications-dapps":"التطبيقات اللامركزية (dapps)","deposit-contract":"عقد الإيداع","devcon":"مؤتمر دفكون السنوي","developer-resources":"مصادر المبرمجين","developers":"المبرمجون","developers-home":"الصفحة الرئيسية للمطورين","docs":"المستندات","documentation":"التوثيق","dydx-logo":"شعار شركة Dydx","ecosystem":"الشبكة التعاونية","edit-page":"تعديل الصفحة","ef-blog":"مدونة مؤسسة إثيريوم","eips":"مقترحات تحسين إثيريوم","enterprise":"شركة","enterprise-menu":"قائمة الشركات","esp":"برنامج دعم النظام البيئي","eth-current-price":"سعر ETH الحالي (بالدولار الأمريكي)","eth2":"الإصدار الثاني للإيثريوم","eth2-beaconcha-in-desc":"برنامج مفتوح المصدر لاستكشاف سلسلة المنارة Beacon Chain للإصدار الثاني للإيثريوم Eth2","eth2-beaconscan-desc":"برنامج لاستكشاف سلسلة المنارة Beacon Chain للإصدار الثاني للإيثريوم Eth2 اسمه Etherscan for Eth2","eth2-become-staker":"ابدا الاستثمار","eth2-become-staker-desc":"إذا كنت تتطلع للمشاركة، فقد بدأت عملية تجميد عملات الإيثريوم لدعم وتأمين الشبكة. تأكد من أنك على دراية بالمخاطر.","eth2-explore":"استكشف البيانات","eth2-no-action-needed":"أنت لست بحاجة إلى فعل أي شيء بالـETH التي لديك. انتبه إلى المخادعين الذين يطلبون منك إرسال ETH لمبادلته.","eth2-run-beacon-chain":"تشغيل عميل المنارة","eth2-run-beacon-chain-desc":"يحتاج إيثيريوم إلى أكبر عدد ممكن من العملاء. ساعد إيثيريوم للمصلحة العامة!","eth2-service-announcement":"إعلان خدمة Eth2","eth2-what-shipping":"متى يتم الشحن؟","ethereum":"إثيريوم","ethereum-2-0":"إثيريوم 2.0","ethereum-brand-assets":"أصول العلامة التجارية لإيثريوم","ethereum-community":"مجتمع إثيريوم","ethereum-foundation":"مؤسسة إيثيريوم","ethereum-foundation-logo":"شعار مؤسسة إيثيريوم","ethereum-glossary":"مسرد مصطلحات إثيريوم","ethereum-governance":"إدارة إيثيريوم","ethereum-logo":"شعار إثيريوم","ethereum-security":"أمان إثيريوم ومنع الاحتيال","ethereum-studio":"استوديو إيثريوم","ethereum-wallets":"محافظ إثيريوم","ethereum-whitepaper":"دليل استخدام إثيريوم","example-projects":"مثال للمشاريع","find-wallet":"البحث عن المحفظة","foundation":"مؤسسة","gemini-logo":"شعار Gemini","get-eth":"احصل على ETH","get-involved":"شارك","get-started":"ابدأ الاستخدام","gitcoin-logo":"شعار شركة Gitcoin","glossary":"قائمة المصطلحات","governance":"إرشادات","grants":"منح","grant-programs":"برامج منح النظام البيئي","guides-and-resources":"أدلة ومصادر المجتمع","history":"تاريخ","history-of-ethereum":"تاريخ الإيثيريوم","home":"الصفحة الرئيسية","how-ethereum-works":"كيفية عمل إيثريوم","image":"صورة","in-this-section":"في هذا القسم","individuals":"الأفراد","individuals-menu":"قائمة الأفراد","jobs":"الوظائف","kraken-logo":"شعار شركة Kraken","language-ar":"العربية","language-bg":"البلغارية","language-bn":"البنغالية","language-ca":"الكتالونية","language-cs":"التشيكية","language-de":"الألمانية","language-el":"اليونانية","language-en":"الإنجليزية","language-es":"الإسبانية","language-fa":"الفارسية","language-fi":"الفنلندية","language-fr":"الفرنسية","language-hu":"الهنغارية","language-hr":"الكرواتية","language-hi":"الهندية","language-id":"الأندونسية","language-ig":"الإيجبو","language-it":"الإيطالية","language-ja":"اليابانية","language-ko":"الكورية","language-lt":"الليتوانية","language-ml":"المالايالامية","language-nb":"النرويجية","language-nl":"الهولندية","language-pl":"البولندية","language-pt":"البرتغالية","language-pt-br":"البرتغالية (البرازيل)","language-ro":"الرومانية","language-ru":"الروسية","language-se":"السويدية","language-sk":"السلوفاكية","language-sl":"السلوفينية","language-support":"مساعدة اللغة","language-tr":"التركية","language-uk":"الأوكرانية","language-vi":"الفيتنامية","language-zh":"الصينية المبسطة","language-zh-tw":"الصينية التقليدية","languages":"اللغات","last-24-hrs":"آخر 24 ساعة","last-edit":"آخر تعديل","learn":"تعلّم","learn-by-coding":"تعلّم عن طريق البرمجة","learn-menu":"قائمة التعلّم","learn-more":"تعلّم أكثر","less":"أقل","light-mode":"فاتح","listing-policy-disclaimer":"جميع المنتجات المدرجة في هذه الصفحة ليست مصادقة رسمية ولا تقدم إلا لأغراض إعلامية. إذا كنت ترغب في إضافة منتج أو تقديم تعليقات على السياسة، فاطرح مشكلة في GitHub.","listing-policy-raise-issue-link":"طرح مشكلة","live-help":"المساعدة المباشرة","live-help-menu":"قائمة المساعدة المباشرة","loading":"جاري التحميل...","loading-error":"خطأ في التحميل.","loading-error-refresh":"خطأ، يُرجى إعادة المحاولة.","logo":"الشعار","loopring-logo":"شعار لوبرينج","london-upgrade-banner":"ترقية لندن مباشرة على: ","london-upgrade-banner-released":"تم إصدار ترقية لندن!","mainnet-ethereum":"ماينيت إثيريوم","makerdao-logo":"شعار MakerDao","matcha-logo":"شعار ماتشا","merge":"دمج","more":"المزيد","nav-beginners":"مبتدئين","next":"التالي","oasis-logo":"شعار Oasis","on-this-page":"في هذه الصفحة","page-content":"محتوى الصفحة","page-enterprise":"الشركات","page-last-updated":"آخر تحديث للصفحة","previous":"السابق","privacy-policy":"سياسة الخصوصية","private-ethereum":"إثيريوم خاص","pros":"الإيجابيات","read-more":"اقرأ المزيد","refresh":"يُرجى تحديث الصفحة.","review-progress":"استعراض التقدم المحرز","search":"بحث","search-box-blank-state-text":"البحث بعيدًا!","search-eth-address":"يبدو هذا كعنوان إيثيريوم. نحن لا نقدم بيانات محددة للعناوين. حاول البحث عنه في مستكشف كتلة مثل","search-no-results":"لا توجد نتائج لهذا البحث","security":"الأمان","see-contributors":"المساهمون","set-up-local-env":"إعداد البيئة المحلية الخاصة بك","shard-chains":"سلسلة القطع","show-all":"عرض الكل","show-less":"عرض أقل","site-description":"إيثيريوم هو منصة عالمية لامركزية للنقود وأنواع جديدة من التطبيقات. في إيثيريوم، يمكنك كتابة التعليمات البرمجية التي تحكم المال، وبناء التطبيقات التي يمكن الوصول إليها في أي مكان في العالم.","site-title":"ethereum.org","stablecoins":"Stablecoins","staking":"تجميد العملات","summary":"موجز","terms-of-use":"شروط الاستخدام","transaction-fees":"ما هي رسوم المعاملات؟","translation-banner-body-new":"ترى هذه الصفحة بالإنجليزية لأننا لم نترجمها بعد. ساعدنا في ترجمة هذا المحتوى.","translation-banner-body-update":"هناك نسخة جديدة من هذه الصفحة لكنها باللغة الإنجليزية فقط الآن. ساعدنا في ترجمة أحدث إصدار.","translation-banner-button-join-translation-program":"انضم إلى برنامج الترجمة","translation-banner-button-learn-more":"تعلّم أكثر","translation-banner-button-see-english":"اعرض المحتوى بالإنجليزية","translation-banner-button-translate-page":"ترجم الصفحة","translation-banner-title-new":"المساعدة في ترجمة هذا البرنامج","translation-banner-title-update":"ساعد في تحديث هذه الصفحة","translation-program":"برنامج الترجمة","translation-progress":"التقدم المحرز في الترجمة","tutorials":"البرامج التعليمية","uniswap-logo":"شعار شركة Uniswap","use":"الاستخدام","use-ethereum":"استخدم إثيريوم","use-ethereum-menu":"استخدام قائمة إيثيريوم","vision":"الرؤية","wallets":"المحافظ","website-last-updated":"آخر تحديث للموقع","what-is-ether":"ما إيثر (ETH)؟","what-is-ethereum":"ما هو الإثيريوم؟","whitepaper":"دليل الاستخدام","defi-page":"التمويل اللامركزي (DeFi)","dao-page":"المنظمات المستقلة اللامركزية (DAOs)","nft-page":"رموز رقمية غير قابلة للاستبدال (NFTs)","page-developer-meta-title":"موارد مطور إيثيريوم","page-developers-about":"حول موارد المطور هذه","page-developers-about-desc":"ethereum.org هنا لمساعدتك في البناء مع إيثيريوم مع التوثيق على المفاهيم الأساسية وكذلك على تكدس التطوير. بالإضافة إلى ذلك هناك دروس للارتقاء بك وتشغيل.","page-developers-about-desc-2":"وبإلهام من شبكة مطوري موزيلا، ظننا أن إيثيريوم بحاجة إلى مكان لإيواء محتوى ومصادر رائعة. مثل أصدقائنا في موزيلا، كل شيء هنا مفتوح المصدر ومستعد لك للتوسع والتحسن.","page-developers-account-desc":"العقود أو الأشخاص في الشبكة","page-developers-accounts-link":"الحسابات","page-developers-advanced":"إعدادات متقدمة","page-developers-api-desc":"استخدام المكتبات للتفاعل مع العقود الذكية","page-developers-api-link":"Backend APIs","page-developers-aria-label":"قائمة المطورين","page-developers-block-desc":"دفعات المعاملات المضافة إلى سلسلة الكتل","page-developers-block-explorers-desc":"بوابة بيانات إيثيريوم الخاصة بك","page-developers-block-explorers-link":"مستكشفات الكتلة","page-developers-blocks-link":"الكتل","page-developers-browse-tutorials":"استعرض الدروس التعليمية","page-developers-choose-stack":"اختر الفئة الخاصة بك","page-developers-contribute":"ساهم","page-developers-dev-env-desc":"IDEs المناسبة لتطوير dapp","page-developers-dev-env-link":"بيئات التطوير","page-developers-discord":"انضم لنا على الديسكورد","page-developers-docs-introductions":"المقدمات","page-developers-evm-desc":"الكمبيوتر الذي يعالج المعاملات","page-developers-evm-link":"آلة إيثيريوم الافتراضية (EVM)","page-developers-explore-documentation":"استكشاف الوثائق","page-developers-feedback":"إذا كان لديك أي ملاحظات، اتصل بنا عبر مشكلة GitHub أو على خادم Discord لدينا.","page-developers-frameworks-desc":"أدوات للمساعدة في تسريع التطوير","page-developers-frameworks-link":"أطر التطوير","page-developers-fundamentals":"الأساسيات","page-developers-gas-desc":"تحتاج إلى إيثر لتشغيل المعاملات","page-developers-gas-link":"الغاز","page-developers-get-started":"كيف ترغب في البدء؟","page-developers-improve-ethereum":"ساعدنا في جعل ethereum.org أفضل","page-developers-improve-ethereum-desc":"مثل ethereum.org، هذه المستندات هي جهد مجتمعي. قم بإنشاء \"PR\" إذا رأيت أخطاء، مساحة للتحسين، أو فرص جديدة لمساعدة مطوري \"إيثيريوم\".","page-developers-into-eth-desc":"مقدمة لسلسلة القوالب وإيثيريوم","page-developers-intro-dapps-desc":"مقدمة إلى التطبيقات اللامركزية","page-developers-intro-dapps-link":"مقدمة إلى التطبيقات اللامركزية","page-developers-intro-eth-link":"مقدمة إلى إيثيريوم","page-developers-intro-stack":"مقدمة إلى المكدس","page-developers-intro-stack-desc":"مقدمة لمكدس إيثيريوم","page-developers-js-libraries-desc":"استخدام جافا سكريبت للتفاعل مع العقود الذكية","page-developers-js-libraries-link":"مكتبات جافا سكريبت","page-developers-language-desc":"استخدام إيثيريوم مع اللغات المألوفة","page-developers-languages":"لغات البرمجة","page-developers-learn":"تعلم تطوير الإيثيريوم","page-developers-learn-desc":"اقرأ على المفاهيم الأساسية ومكدس الإيثيريوم مع مستنداتنا","page-developers-learn-tutorials":"التعلم من خلال الدروس التعليمية","page-developers-learn-tutorials-cta":"عرض الدروس التعليمية","page-developers-learn-tutorials-desc":"تعلم تطوير الإيثيريوم خطوة بخطوة من البناة الذين قاموا بذلك بالفعل.","page-developers-meta-desc":"التوثيق، الدروس، والأدوات للمطورين البناء على إيثيريوم.","page-developers-mining-desc":"كيفية إنشاء كتل جديدة والتوصل إلى توافق في الآراء","page-developers-mining-link":"التعدين","page-developers-networks-desc":"لمحة عامة عن الشبكة الرئيسية وشبكات الاختبار","page-developers-networks-link":"الشبكات","page-developers-node-clients-desc":"كيف يتم التحقق من الكتل والمعاملات في الشبكة","page-developers-node-clients-link":" العقد والعملاء","page-developers-oracle-desc":"الحصول على بيانات خارج السلسلة في العقود الذكية","page-developers-oracles-link":"Oracles","page-developers-play-code":"العب بالرمز","page-developers-read-docs":"اقرأ المستندات","page-developers-scaling-desc":"حلول للمعاملات الأسرع","page-developers-scaling-link":"القياس","page-developers-smart-contract-security-desc":"التدابير الأمنية التي ينبغي النظر فيها أثناء عملية التطوير","page-developers-smart-contract-security-link":"الأمان","page-developers-set-up":"إعداد البيئة المحلية الخاصة بك","page-developers-setup-desc":"احصل على تكدس جاهز للبناء عن طريق تهيئة بيئة التطوير.","page-developers-smart-contracts-desc":"المنطق وراء التطبيقات - اتفاقيات التنفيذ التلقائي","page-developers-smart-contracts-link":"العقود الذكية","page-developers-stack":"المكدس","page-developers-start":"ابدأ التجربة","page-developers-start-desc":"هل ترغب في التجربة أولاً، طرح الأسئلة لاحقاً؟","page-developers-storage-desc":"كيفية التعامل مع وحدة تخزين التطبيق اللامركزي","page-developers-storage-link":"التخزين","page-developers-subtitle":"دليل بناة للإيثيريوم. بواسطة البناة، للبناة.","page-developers-title-1":"إثيريوم","page-developers-title-2":"مبرمج","page-developers-title-3":"المصادر","page-developers-token-standards-desc":"لمحة عامة عن المعايير الرمزية المقبولة","page-developers-token-standards-link":"معايير الرمز المميز","page-developers-transactions-desc":"الطريقة التي تتغير بها حالة إيثيريوم","page-developers-transactions-link":"المعاملات","page-developers-web3-desc":"كيف يختلف عالم التنمية على شبكة الإنترنت 3","page-developers-web3-link":"ويب2 مقابل ويب3","page-index-hero-image-alt":"صورة توضيحية لمدينة مستقبلية تمثل النظام الرقمي لإيثريوم.","page-index-meta-description":"إيثيريوم هو منصة عالمية لامركزية للنقود وأنواع جديدة من التطبيقات. في إيثيريوم، يمكنك كتابة التعليمات البرمجية التي تحكم المال، وبناء التطبيقات التي يمكن الوصول إليها في أي مكان في العالم.","page-index-meta-title":"الصفحة الرئيسية","page-index-title":"مرحبًا بك في إيثريوم","page-index-description":"إيثيروم هي تكنولوجيا مدارة من مجتمع إيثيروم لتمكين العملة الرقمية إيثر (ETH) وآلاف التطبيقات اللامركزية.","page-index-title-button":"استكشف إيثيريوم","page-index-get-started":"البدء بالاستخدام","page-index-get-started-description":"ethereum.org هو بوابتك إلى عالم إيثيريوم، حيث التكنلوجيا الجديدة والمتطورة باستمرار. إنه لأمر جيد أن يكون لديك دليل، إليك ماننصحك به للغوص في هذه التكنولوجيا.","page-index-get-started-image-alt":"صورة توضيحية لشخص يعمل على حاسب آلي.","page-index-get-started-wallet-title":"اختر محفظة","page-index-get-started-wallet-description":"تتيح لك المحفظة الاتصال بإيثيريوم وإدارة أموالك.","page-index-get-started-wallet-image-alt":"صورة توضيحية لرجل آلي يتكون جسمه من خزنة تمثل محفظة إيثيريوم.","page-index-get-started-eth-title":"احصل على ETH","page-index-get-started-eth-description":"ETH هي عملة إيثيريوم، يمكنك استعمالها في التطبيقات.","page-index-get-started-eth-image-alt":"صورة توضيحية تبين مجموعة من الأشخاص المذهولين من الصورة الرمزية للإيثر (ETH).","page-index-get-started-dapps-title":"استخدم تطبيقًا لامركزيًا","page-index-get-started-dapps-description":"التطبيقات اللامركزية هي تطبيقات تعمل عن طريق إيثيريوم. شاهد ما يمكنك القيام به.","page-index-get-started-dapps-image-alt":"صورة توضيحية لكلب يستخدم حاسب.","page-index-get-started-devs-title":"ابدأ بالبناء","page-index-get-started-devs-description":"إن أردت البدأ بالبرمجة مع إيثيريوم، فلدينا وثائق ودروس وأكثر من ذلك في بوابة المبرمجين.","page-index-get-started-devs-image-alt":"صورة توضيحية تبين يدًا تشكّل رمز ETH باستعمال قطع الليجو.","page-index-what-is-ethereum":"ما هو إيثريوم؟","page-index-what-is-ethereum-description":"تحتضن تكنولوجيا إيثيريوم الأموال الرقمية، والمدفوعات العالمية، وكذلك التطبيقات الحاسوبية، حيث ساهم مجتمع إيثيريوم ببناء نظام اقتصادي رقمي مزدهر، ما يخلق طرقًا جريئة وجديدة تسمح لصناع المحتوى بالكسب عن طريق الإنترنت، والقيام بأكثر من ذلك بكثير. إيثيريوم مفتوح للجميع، فأينما كنت في العالم، كل ما تحتاجه هو الإنترنت.","page-index-what-is-ethereum-button":"ما هي إيثريوم؟","page-index-what-is-ethereum-secondary-button":"المزيد عن المال الرقمي","page-index-what-is-ethereum-image-alt":"صورة توضيحية تبين شخصًا يذهب مباشرة إلى بازار، كنايةً عن إيثيريوم.","page-index-defi":"نظام مالي أكثر إنصافاً","page-index-defi-description":"في يومنا هذا، لا يستطيع المليارات من الأشخاص فتح حساب مصرفي، وهناك آخرون تم حظر مدفوعاتهم. نظام إيثيريوم المالي اللامركزي (DeFi) لا يتوقف ولا يطبق التمييز أبدًا. فقط بالاتصال بشبكة الإنترنت، بإمكانك إرسال واستقبال واقتراض المال وكسب الفوائد، كما يمكنك دفق الأموال بأي مكان في العالم.","page-index-defi-button":"استكشف النظام المالي اللامركزي (DeFi)","page-index-defi-image-alt":"صورة توضيحية تبين يدًا تقدم رمز ETH.","page-index-internet":"إنترنت مفتوح","page-index-internet-description":"اليوم، نحصل على خدمات إنترنت 'مجانية' بالتخلي عن التحكم في بياناتنا الشخصية. خدمات الإيثيريوم مفتوحة بشكل افتراضي، تحتاج فقط إلى محفظة. وهي مجانية وسهلة الإنشاء، تحت سيطرتكم، وتعمل بدون أي معلومات شخصية.","page-index-internet-button":"استكشف الإنترنت المفتوح","page-index-internet-secondary-button":"المزيد عن المحافظ","page-index-internet-image-alt":"صورة توضيحية لإعداد جهاز كمبيوتر مستقبلي، مدعوم من بلورات الإيثيريوم.","page-index-developers":"حدود جديدة للتطوير","page-index-developers-description":"الإيثيريوم وتطبيقاته شفافة ومفتوحة المصدر. يمكنك تفريع التعليمات البرمجية وإعادة استخدام الوظائف الأخرى التي تم بناؤها بالفعل. إذا كنت لا ترغب في تعلم لغة جديدة يمكنك فقط التفاعل مع التعليمات البرمجية المفتوحة المصدر باستخدام جافا سكريبت وغيرها من اللغات الموجودة.","page-index-developers-button":"بوابة المبرمج","page-index-developers-code-example-title-0":"البنك الخاص بك","page-index-developers-code-example-description-0":"يمكنك بناء بنك يديره المنطق الذي قمت ببرمجته.","page-index-developers-code-example-title-1":"عملتك الخاصة","page-index-developers-code-example-description-1":"يمكنك إنشاء رموز مميزة بحيث يمكنك نقلها واستخدامها عبر التطبيقات.","page-index-developers-code-example-title-2":"محفظة جافا سكريبت إيثيريوم","page-index-developers-code-example-description-2":"بإمكانك استخدام اللغات الموجودة للتفاعل مع الإيثيريوم والتطبيقات الأخرى.","page-index-developers-code-example-title-3":"DNS مفتوح ولا يتطلب تصريحًا","page-index-developers-code-example-description-3":"يمكنك أن تعيد تخيل الخدمات الموجودة كتطبيقات لامركزية و مفتوحة.","page-index-network-stats-title":"إيثيريوم اليوم","page-index-network-stats-subtitle":"أحدث إحصائيات الشبكة","page-index-network-stats-eth-price-description":"سعر ETH (بالدولار الأمريكي)","page-index-network-stats-eth-price-explainer":"أحدث سعر للإيثر الواحد. يمكنك شراء قيمة صغيرة جدًا تصل إلى 0.000000000000000001 جزءًا من الـ ETH، لست بحاجة لشراء عملة ETH كاملة.","page-index-network-stats-tx-day-description":"المعاملات اليوم","page-index-network-stats-tx-day-explainer":"عدد المعاملات التي تمت معالجتها بنجاح على الشبكة خلال الـ 24 ساعة الأخيرة.","page-index-network-stats-value-defi-description":"القيمة المقفلة في تطبيقات التمويل اللامركزي DeFi (بالدولار الأمريكي)","page-index-network-stats-value-defi-explainer":"المبلغ المالي في تطبيقات التمويل اللامركزي (DeFi)، الاقتصاد الرقمي في إيثيريوم.","page-index-network-stats-nodes-description":"العُقَد","page-index-network-stats-nodes-explainer":"يعمل إيثيريوم بواسطة آلاف من المتطوعين حول العالم يعروفون بعقود.","page-index-touts-header":"استكشف إيثيريوم","page-index-contribution-banner-title":"المساهمة في إيثيريوم","page-index-contribution-banner-description":"هذا الموقع مفتوح المصدر، يحتوي على مئات من مجتمعات المساهمين. يمكنك اقتراح تعديلات لأي محتوى في هذا الموقع، قدم اقتراحات لميزات رائعة و جديدة، أو ساعدنا على التخلص من الأخطاء.","page-index-contribution-banner-image-alt":"شعار إيثيريوم مصنوع من قطع الليجو.","page-index-contribution-banner-button":"المزيد حول المساهمة","page-index-tout-eth2-title":"طور معرفتك حول الإيثيريوم 2","page-index-tout-eth2-description":"الإيثيريوم 2.0 هو برنامج لترقيات مترابطة، مصمم لجعل الإيثيريوم أكثر قابلية للتوسع، وأكثر أمنًا واستدامة.","page-index-tout-eth2-image-alt":"صورة توضيحية لسفينة فضائية تمثل القوة المتزايدة لإيثريوم 2.","page-index-tout-enterprise-title":"إيثريوم للشركات","page-index-tout-enterprise-description":"أنظر كيف يمكن لإيثيريوم فتح نماذج أعمال جديدة، وتقليل التكاليف وحماية عملك التجاري في المستقبل.","page-index-tout-enterprise-image-alt":"صورة توضيحية لحاسوب/جهاز مستقبلي.","page-index-tout-community-title":"مجتمع إثيريوم","page-index-tout-community-description":"إيثيريوم يتمحور بشكل كامل حول المجتمع. ويتكون من أشخاص من جميع الخلفيات والاهتمامات المختلفة. انظر كيف يمكنك الانضمام إليه.","page-index-tout-community-image-alt":"صورة توضيحية لمجموعة من البناة يعملون معا.","page-index-nft":"إنترنت الأصول","page-index-nft-description":"إيثيريوم ليس مخصص فقط للأموال الرقمية. أي شيء يمكنك أن تملكه يمكن أن يكون ممثلاً ومتاجراً به ووضعه للاستخدام كعملات غير قابلة للاستبدال (NFTs). يمكنك ترميز أعمالك الفنية والحصول على الإتاوات تلقائياً في كل مرة يعاد بيعها فيها، أو استخدم الرمز المميز لشيء تملكه للحصول على قرض. الاحتمالات في حالة نمو طوال الوقت.","page-index-nft-button":"المزيد من الرموز غير القابلة للاستبدال","page-index-nft-alt":"يتم عرض شعار إيثريوم عبر الهولوغرام."},"routed":true,"originalPath":"/developers/tutorials/create-and-deploy-a-defi-app/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}