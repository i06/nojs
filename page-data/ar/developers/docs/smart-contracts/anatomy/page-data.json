{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/ar/developers/docs/smart-contracts/anatomy/",
    "result": {"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/docs/smart-contracts/anatomy/"},"frontmatter":{"title":"Anatomy of smart contracts","description":"An in-depth look into the anatomy of a smart contact – the functions, data, and variables.","lang":"en","incomplete":null,"sidebar":true,"sidebarDepth":null,"isOutdated":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Anatomy of smart contracts\",\n  \"description\": \"An in-depth look into the anatomy of a smart contact – the functions, data, and variables.\",\n  \"lang\": \"en\",\n  \"sidebar\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A smart contract is a program that runs at an address on Ethereum. They're made up of data and functions that can execute upon receiving a transaction. Here's an overview of what makes up a smart contract.\"), mdx(\"h3\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Prerequisites\"), mdx(\"p\", null, \"Make sure you've read about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/\"\n  }, \"smart contracts\"), \" first. This document assumes you're already familiar with programming languages such as JavaScript or Python.\"), mdx(\"h2\", {\n    \"id\": \"data\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#data\",\n    \"aria-label\": \"data permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Data\"), mdx(\"p\", null, \"Any contract data must be assigned to a location: either to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"storage\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"memory\"), \". It's costly to modify storage in a smart contract so you need to consider where your data should live.\"), mdx(\"h3\", {\n    \"id\": \"storage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#storage\",\n    \"aria-label\": \"storage permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Storage\"), mdx(\"p\", null, \"Persistent data is referred to as storage and is represented by state variables. These values get stored permanently on the blockchain. You need to declare the type so that the contract can keep track of how much storage on the blockchain it needs when it compiles.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Solidity example\\ncontract SimpleStorage {\\n    uint storedData; // State variable\\n    // ...\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"# Vyper example\\nstoredData: int128\\n\")), mdx(\"p\", null, \"If you've already programmed object-oriented languages, you'll likely be familiar with most types. However \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"address\"), \" should be new to you if you're new to Ethereum development.\"), mdx(\"p\", null, \"An \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"address\"), \" type can hold an Ethereum address which equates to 20 bytes or 160 bits. It returns in hexadecimal notation with a leading 0x.\"), mdx(\"p\", null, \"Other types include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"boolean\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"integer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fixed point numbers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fixed-size byte arrays\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dynamically-sized byte arrays\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rational and integer literals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"String literals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hexadecimal literals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enums\")), mdx(\"p\", null, \"For more explanation, take a look at the docs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://vyper.readthedocs.io/en/v0.1.0-beta.6/types.html#value-types\"\n  }, \"See Vyper types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://solidity.readthedocs.io/en/latest/types.html#value-types\"\n  }, \"See Solidity types\"))), mdx(\"h3\", {\n    \"id\": \"memory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#memory\",\n    \"aria-label\": \"memory permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Memory\"), mdx(\"p\", null, \"Values that are only stored for the lifetime of a contract function's execution are called memory variables. Since these are not stored permanently on the blockchain, they are much cheaper to use.\"), mdx(\"p\", null, \"Learn more about how the EVM stores data (Storage, Memory, and the Stack) in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://solidity.readthedocs.io/en/latest/introduction-to-smart-contracts.html?highlight=memory#storage-memory-and-the-stack\"\n  }, \"Solidity docs\"), \".\"), mdx(\"h3\", {\n    \"id\": \"environment-variables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#environment-variables\",\n    \"aria-label\": \"environment variables permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Environment variables\"), mdx(\"p\", null, \"In addition to the variables you define on your contract, there are some special global variables. They are primarily used to provide information about the blockchain or current transaction.\"), mdx(\"p\", null, \"Examples:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"Prop\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"State variable\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"Description\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"block.timestamp\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"uint256\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Current block epoch timestamp\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"msg.sender\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"address\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Sender of the message (current call)\")))), mdx(\"h2\", {\n    \"id\": \"functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#functions\",\n    \"aria-label\": \"functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Functions\"), mdx(\"p\", null, \"In the most simplistic terms, functions can get information or set information in response to incoming transactions.\"), mdx(\"p\", null, \"There are two types of function calls:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"internal\"), \" \\u2013 these don't create an EVM call\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal functions and state variables can only be accessed internally (i.e. from within the current contract or contracts deriving from it)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"external\"), \" \\u2013 these do create an EVM call\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"External functions are part of the contract interface, which means they can be called from other contracts and via transactions. An external function \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f\"), \" cannot be called internally (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f()\"), \" does not work, but \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"this.f()\"), \" works).\")))), mdx(\"p\", null, \"They can also be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"private\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"public\"), \" functions can be called internally from within the contract or externally via messages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"private\"), \" functions are only visible for the contract they are defined in and not in derived contracts\")), mdx(\"p\", null, \"Both functions and state variables can be made public or private\"), mdx(\"p\", null, \"Here's a function for updating a state variable on a contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Solidity example\\nfunction update_name(string value) public {\\n    dapp_name = value;\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The parameter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"value\"), \" of type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"string\"), \" is passed into the function: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"update_name\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's declared \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"public\"), \", meaning anyone can access it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's not declared \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"view\"), \", so it can modify the contract state\")), mdx(\"h3\", {\n    \"id\": \"view-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#view-functions\",\n    \"aria-label\": \"view functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"View functions\"), mdx(\"p\", null, \"These functions promise not to modify the state of the contract's data. Common examples are \\\"getter\\\" functions \\u2013 you might use this to receive a user's balance for example.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Solidity example\\nfunction balanceOf(address _owner) public view returns (uint256 _balance) {\\n    return ownerPizzaCount[_owner];\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"dappName: public(string)\\n\\n@view\\n@public\\ndef readName() -> string:\\n  return dappName\\n\")), mdx(\"p\", null, \"What is considered modifying state:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Writing to state variables.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://solidity.readthedocs.io/en/v0.7.0/contracts.html#events\"\n  }, \"Emitting events\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://solidity.readthedocs.io/en/v0.7.0/control-structures.html#creating-contracts\"\n  }, \"Creating other contracts\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"selfdestruct\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Sending ether via calls.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Calling any function not marked\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"view\"), \"\\xA0or\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pure\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using low-level calls.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using inline assembly that contains certain opcodes.\")), mdx(\"h3\", {\n    \"id\": \"constructor-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#constructor-functions\",\n    \"aria-label\": \"constructor functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Constructor functions\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"constructor\"), \" functions are only executed once when the contract is first deployed. Like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"constructor\"), \" in many class-based programming languages, these functions often initialize state variables to their specified values.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Solidity example\\n// Initializes the contract's data, setting the `owner`\\n// to the address of the contract creator.\\nconstructor() public {\\n    // All smart contracts rely on external transactions to trigger its functions.\\n    // `msg` is a global variable that includes relevant data on the given transaction,\\n    // such as the address of the sender and the ETH value included in the transaction.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/units-and-global-variables.html#block-and-transaction-properties\\n    owner = msg.sender;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"# Vyper example\\n\\n@external\\ndef __init__(_beneficiary: address, _bidding_time: uint256):\\n    self.beneficiary = _beneficiary\\n    self.auctionStart = block.timestamp\\n    self.auctionEnd = self.auctionStart + _bidding_time\\n\")), mdx(\"h3\", {\n    \"id\": \"built-in-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#built-in-functions\",\n    \"aria-label\": \"built in functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Built-in functions\"), mdx(\"p\", null, \"In addition to the variables and functions you define on your contract, there are some special built-in functions. The most obvious example is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"address.send()\"), \" \\u2013 Solidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"send(address)\"), \" \\u2013 Vyper\")), mdx(\"p\", null, \"These allow contracts to send ETH to other accounts.\"), mdx(\"h2\", {\n    \"id\": \"writing-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#writing-functions\",\n    \"aria-label\": \"writing functions permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Writing functions\"), mdx(\"p\", null, \"Your function needs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"parameter variable and type (if it accepts parameters)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"declaration of internal/external\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"declaration of pure/view/payable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"returns type (if it returns a value)\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity >=0.4.0 <=0.6.0;\\n\\ncontract ExampleDapp {\\n    string dapp_name; // state variable\\n\\n    // Called when the contract is deployed and initializes the value\\n    constructor() public {\\n        dapp_name = \\\"My Example dapp\\\";\\n    }\\n\\n    // Get Function\\n    function read_name() public view returns(string) {\\n        return dapp_name;\\n    }\\n\\n    // Set Function\\n    function update_name(string value) public {\\n        dapp_name = value;\\n    }\\n}\\n\")), mdx(\"p\", null, \"A complete contract might look something like this. Here the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"constructor\"), \" function provides an initial value for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dapp_name\"), \" variable.\"), mdx(\"h2\", {\n    \"id\": \"events-and-logs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#events-and-logs\",\n    \"aria-label\": \"events and logs permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Events and logs\"), mdx(\"p\", null, \"Events let you communicate with your smart contract from your frontend or other subscribing applications. When a transaction is mined, smart contracts can emit events and write logs to the blockchain that the frontend can then process.\"), mdx(\"h2\", {\n    \"id\": \"annotated-examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#annotated-examples\",\n    \"aria-label\": \"annotated examples permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Annotated examples\"), mdx(\"p\", null, \"These are some examples written in Solidity. If you'd like to play with the code, you can interact with them in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://remix.ethereum.org\"\n  }, \"Remix\"), \".\"), mdx(\"h3\", {\n    \"id\": \"hello-world\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#hello-world\",\n    \"aria-label\": \"hello world permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Hello world\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"// Specifies the version of Solidity, using semantic versioning.\\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/layout-of-source-files.html#pragma\\npragma solidity ^0.5.10;\\n\\n// Defines a contract named `HelloWorld`.\\n// A contract is a collection of functions and data (its state).\\n// Once deployed, a contract resides at a specific address on the Ethereum blockchain.\\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/structure-of-a-contract.html\\ncontract HelloWorld {\\n\\n    // Declares a state variable `message` of type `string`.\\n    // State variables are variables whose values are permanently stored in contract storage.\\n    // The keyword `public` makes variables accessible from outside a contract\\n    // and creates a function that other contracts or clients can call to access the value.\\n    string public message;\\n\\n    // Similar to many class-based object-oriented languages, a constructor is\\n    // a special function that is only executed upon contract creation.\\n    // Constructors are used to initialize the contract's data.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#constructors\\n    constructor(string memory initMessage) public {\\n        // Accepts a string argument `initMessage` and sets the value\\n        // into the contract's `message` storage variable).\\n        message = initMessage;\\n    }\\n\\n    // A public function that accepts a string argument\\n    // and updates the `message` storage variable.\\n    function update(string memory newMessage) public {\\n        message = newMessage;\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"token\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#token\",\n    \"aria-label\": \"token permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Token\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.5.10;\\n\\ncontract Token {\\n    // An `address` is comparable to an email address - it's used to identify an account on Ethereum.\\n    // Addresses can represent a smart contract or an external (user) accounts.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/types.html#address\\n    address public owner;\\n\\n    // A `mapping` is essentially a hash table data structure.\\n    // This `mapping` assigns an unsigned integer (the token balance) to an address (the token holder).\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/types.html#mapping-types\\n    mapping (address => uint) public balances;\\n\\n    // Events allow for logging of activity on the blockchain.\\n    // Ethereum clients can listen for events in order to react to contract state changes.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#events\\n    event Transfer(address from, address to, uint amount);\\n\\n    // Initializes the contract's data, setting the `owner`\\n    // to the address of the contract creator.\\n    constructor() public {\\n        // All smart contracts rely on external transactions to trigger its functions.\\n        // `msg` is a global variable that includes relevant data on the given transaction,\\n        // such as the address of the sender and the ETH value included in the transaction.\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/units-and-global-variables.html#block-and-transaction-properties\\n        owner = msg.sender;\\n    }\\n\\n    // Creates an amount of new tokens and sends them to an address.\\n    function mint(address receiver, uint amount) public {\\n        // `require` is a control structure used to enforce certain conditions.\\n        // If a `require` statement evaluates to `false`, an exception is triggered,\\n        // which reverts all changes made to the state during the current call.\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/control-structures.html#error-handling-assert-require-revert-and-exceptions\\n\\n        // Only the contract owner can call this function\\n        require(msg.sender == owner, \\\"You are not the owner.\\\");\\n\\n        // Enforces a maximum amount of tokens\\n        require(amount < 1e60, \\\"Maximum issuance exceeded\\\");\\n\\n        // Increases the balance of `receiver` by `amount`\\n        balances[receiver] += amount;\\n    }\\n\\n    // Sends an amount of existing tokens from any caller to an address.\\n    function transfer(address receiver, uint amount) public {\\n        // The sender must have enough tokens to send\\n        require(amount <= balances[msg.sender], \\\"Insufficient balance.\\\");\\n\\n        // Adjusts token balances of the two addresses\\n        balances[msg.sender] -= amount;\\n        balances[receiver] += amount;\\n\\n        // Emits the event defined earlier\\n        emit Transfer(msg.sender, receiver, amount);\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"unique-digital-asset\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#unique-digital-asset\",\n    \"aria-label\": \"unique digital asset permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Unique digital asset\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.5.10;\\n\\n// Imports symbols from other files into the current contract.\\n// In this case, a series of helper contracts from OpenZeppelin.\\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/layout-of-source-files.html#importing-other-source-files\\n\\nimport \\\"../node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"../node_modules/@openzeppelin/contracts/introspection/ERC165.sol\\\";\\nimport \\\"../node_modules/@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\n// The `is` keyword is used to inherit functions and keywords from external contracts.\\n// In this case, `CryptoPizza` inherits from the `IERC721` and `ERC165` contracts.\\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#inheritance\\ncontract CryptoPizza is IERC721, ERC165 {\\n    // Uses OpenZeppelin's SafeMath library to perform arithmetic operations safely.\\n    // Learn more: https://docs.openzeppelin.com/contracts/2.x/api/math#SafeMath\\n    using SafeMath for uint256;\\n\\n    // Constant state variables in Solidity are similar to other languages\\n    // but you must assign from an expression which is constant at compile time.\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#constant-state-variables\\n    uint256 constant dnaDigits = 10;\\n    uint256 constant dnaModulus = 10 ** dnaDigits;\\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    // Struct types let you define your own type\\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/types.html#structs\\n    struct Pizza {\\n        string name;\\n        uint256 dna;\\n    }\\n\\n    // Creates an empty array of Pizza structs\\n    Pizza[] public pizzas;\\n\\n    // Mapping from pizza ID to its owner's address\\n    mapping(uint256 => address) public pizzaToOwner;\\n\\n    // Mapping from owner's address to number of owned token\\n    mapping(address => uint256) public ownerPizzaCount;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) pizzaApprovals;\\n\\n    // You can nest mappings, this example maps owner to operator approvals\\n    mapping(address => mapping(address => bool)) private operatorApprovals;\\n\\n    // Internal function to create a random Pizza from string (name) and DNA\\n    function _createPizza(string memory _name, uint256 _dna)\\n        // The `internal` keyword means this function is only visible\\n        // within this contract and contracts that derive this contract\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#visibility-and-getters\\n        internal\\n        // `isUnique` is a function modifier that checks if the pizza already exists\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/structure-of-a-contract.html#function-modifiers\\n        isUnique(_name, _dna)\\n    {\\n        // Adds Pizza to array of Pizzas and get id\\n        uint256 id = SafeMath.sub(pizzas.push(Pizza(_name, _dna)), 1);\\n\\n        // Checks that Pizza owner is the same as current user\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/control-structures.html#error-handling-assert-require-revert-and-exceptions\\n        assert(pizzaToOwner[id] == address(0));\\n\\n        // Maps the Pizza to the owner\\n        pizzaToOwner[id] = msg.sender;\\n        ownerPizzaCount[msg.sender] = SafeMath.add(\\n            ownerPizzaCount[msg.sender],\\n            1\\n        );\\n    }\\n\\n    // Creates a random Pizza from string (name)\\n    function createRandomPizza(string memory _name) public {\\n        uint256 randDna = generateRandomDna(_name, msg.sender);\\n        _createPizza(_name, randDna);\\n    }\\n\\n    // Generates random DNA from string (name) and address of the owner (creator)\\n    function generateRandomDna(string memory _str, address _owner)\\n        public\\n        // Functions marked as `pure` promise not to read from or modify the state\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#pure-functions\\n        pure\\n        returns (uint256)\\n    {\\n        // Generates random uint from string (name) + address (owner)\\n        uint256 rand = uint256(keccak256(abi.encodePacked(_str))) +\\n            uint256(_owner);\\n        rand = rand % dnaModulus;\\n        return rand;\\n    }\\n\\n    // Returns array of Pizzas found by owner\\n    function getPizzasByOwner(address _owner)\\n        public\\n        // Functions marked as `view` promise not to modify state\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#view-functions\\n        view\\n        returns (uint256[] memory)\\n    {\\n        // Uses the `memory` storage location to store values only for the\\n        // lifecycle of this function call.\\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/introduction-to-smart-contracts.html#storage-memory-and-the-stack\\n        uint256[] memory result = new uint256[](ownerPizzaCount[_owner]);\\n        uint256 counter = 0;\\n        for (uint256 i = 0; i < pizzas.length; i++) {\\n            if (pizzaToOwner[i] == _owner) {\\n                result[counter] = i;\\n                counter++;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    // Transfers Pizza and ownership to other address\\n    function transferFrom(address _from, address _to, uint256 _pizzaId) public {\\n        require(_from != address(0) && _to != address(0), \\\"Invalid address.\\\");\\n        require(_exists(_pizzaId), \\\"Pizza does not exist.\\\");\\n        require(_from != _to, \\\"Cannot transfer to the same address.\\\");\\n        require(_isApprovedOrOwner(msg.sender, _pizzaId), \\\"Address is not approved.\\\");\\n\\n        ownerPizzaCount[_to] = SafeMath.add(ownerPizzaCount[_to], 1);\\n        ownerPizzaCount[_from] = SafeMath.sub(ownerPizzaCount[_from], 1);\\n        pizzaToOwner[_pizzaId] = _to;\\n\\n        // Emits event defined in the imported IERC721 contract\\n        emit Transfer(_from, _to, _pizzaId);\\n        _clearApproval(_to, _pizzaId);\\n    }\\n\\n    /**\\n     * Safely transfers the ownership of a given token ID to another address\\n     * If the target address is a contract, it must implement `onERC721Received`,\\n     * which is called upon a safe transfer, and return the magic value\\n     * `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`;\\n     * otherwise, the transfer is reverted.\\n    */\\n    function safeTransferFrom(address from, address to, uint256 pizzaId)\\n        public\\n    {\\n        // solium-disable-next-line arg-overflow\\n        this.safeTransferFrom(from, to, pizzaId, \\\"\\\");\\n    }\\n\\n    /**\\n     * Safely transfers the ownership of a given token ID to another address\\n     * If the target address is a contract, it must implement `onERC721Received`,\\n     * which is called upon a safe transfer, and return the magic value\\n     * `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`;\\n     * otherwise, the transfer is reverted.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 pizzaId,\\n        bytes memory _data\\n    ) public {\\n        this.transferFrom(from, to, pizzaId);\\n        require(_checkOnERC721Received(from, to, pizzaId, _data), \\\"Must implement onERC721Received.\\\");\\n    }\\n\\n    /**\\n     * Internal function to invoke `onERC721Received` on a target address\\n     * The call is not executed if the target address is not a contract\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 pizzaId,\\n        bytes memory _data\\n    ) internal returns (bool) {\\n        if (!isContract(to)) {\\n            return true;\\n        }\\n\\n        bytes4 retval = IERC721Receiver(to).onERC721Received(\\n            msg.sender,\\n            from,\\n            pizzaId,\\n            _data\\n        );\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    // Burns a Pizza - destroys Token completely\\n    // The `external` function modifier means this function is\\n    // part of the contract interface and other contracts can call it\\n    function burn(uint256 _pizzaId) external {\\n        require(msg.sender != address(0), \\\"Invalid address.\\\");\\n        require(_exists(_pizzaId), \\\"Pizza does not exist.\\\");\\n        require(_isApprovedOrOwner(msg.sender, _pizzaId), \\\"Address is not approved.\\\");\\n\\n        ownerPizzaCount[msg.sender] = SafeMath.sub(\\n            ownerPizzaCount[msg.sender],\\n            1\\n        );\\n        pizzaToOwner[_pizzaId] = address(0);\\n    }\\n\\n    // Returns count of Pizzas by address\\n    function balanceOf(address _owner) public view returns (uint256 _balance) {\\n        return ownerPizzaCount[_owner];\\n    }\\n\\n    // Returns owner of the Pizza found by id\\n    function ownerOf(uint256 _pizzaId) public view returns (address _owner) {\\n        address owner = pizzaToOwner[_pizzaId];\\n        require(owner != address(0), \\\"Invalid Pizza ID.\\\");\\n        return owner;\\n    }\\n\\n    // Approves other address to transfer ownership of Pizza\\n    function approve(address _to, uint256 _pizzaId) public {\\n        require(msg.sender == pizzaToOwner[_pizzaId], \\\"Must be the Pizza owner.\\\");\\n        pizzaApprovals[_pizzaId] = _to;\\n        emit Approval(msg.sender, _to, _pizzaId);\\n    }\\n\\n    // Returns approved address for specific Pizza\\n    function getApproved(uint256 _pizzaId)\\n        public\\n        view\\n        returns (address operator)\\n    {\\n        require(_exists(_pizzaId), \\\"Pizza does not exist.\\\");\\n        return pizzaApprovals[_pizzaId];\\n    }\\n\\n    /**\\n     * Private function to clear current approval of a given token ID\\n     * Reverts if the given address is not indeed the owner of the token\\n     */\\n    function _clearApproval(address owner, uint256 _pizzaId) private {\\n        require(pizzaToOwner[_pizzaId] == owner, \\\"Must be pizza owner.\\\");\\n        require(_exists(_pizzaId), \\\"Pizza does not exist.\\\");\\n        if (pizzaApprovals[_pizzaId] != address(0)) {\\n            pizzaApprovals[_pizzaId] = address(0);\\n        }\\n    }\\n\\n    /*\\n     * Sets or unsets the approval of a given operator\\n     * An operator is allowed to transfer all tokens of the sender on their behalf\\n     */\\n    function setApprovalForAll(address to, bool approved) public {\\n        require(to != msg.sender, \\\"Cannot approve own address\\\");\\n        operatorApprovals[msg.sender][to] = approved;\\n        emit ApprovalForAll(msg.sender, to, approved);\\n    }\\n\\n    // Tells whether an operator is approved by a given owner\\n    function isApprovedForAll(address owner, address operator)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        return operatorApprovals[owner][operator];\\n    }\\n\\n    // Takes ownership of Pizza - only for approved users\\n    function takeOwnership(uint256 _pizzaId) public {\\n        require(_isApprovedOrOwner(msg.sender, _pizzaId), \\\"Address is not approved.\\\");\\n        address owner = this.ownerOf(_pizzaId);\\n        this.transferFrom(owner, msg.sender, _pizzaId);\\n    }\\n\\n    // Checks if Pizza exists\\n    function _exists(uint256 pizzaId) internal view returns (bool) {\\n        address owner = pizzaToOwner[pizzaId];\\n        return owner != address(0);\\n    }\\n\\n    // Checks if address is owner or is approved to transfer Pizza\\n    function _isApprovedOrOwner(address spender, uint256 pizzaId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        address owner = pizzaToOwner[pizzaId];\\n        // Disable solium check because of\\n        // https://github.com/duaraghav8/Solium/issues/175\\n        // solium-disable-next-line operator-whitespace\\n        return (spender == owner ||\\n            this.getApproved(pizzaId) == spender ||\\n            this.isApprovedForAll(owner, spender));\\n    }\\n\\n    // Check if Pizza is unique and doesn't exist yet\\n    modifier isUnique(string memory _name, uint256 _dna) {\\n        bool result = true;\\n        for (uint256 i = 0; i < pizzas.length; i++) {\\n            if (\\n                keccak256(abi.encodePacked(pizzas[i].name)) ==\\n                keccak256(abi.encodePacked(_name)) &&\\n                pizzas[i].dna == _dna\\n            ) {\\n                result = false;\\n            }\\n        }\\n        require(result, \\\"Pizza with such name already exists.\\\");\\n        _;\\n    }\\n\\n    // Returns whether the target address is a contract\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 size;\\n        // Currently there is no better way to check if there is a contract in an address\\n        // than to check the size of the code at that address.\\n        // See https://ethereum.stackexchange.com/a/14016/36603\\n        // for more details about how this works.\\n        // TODO Check this again before the Serenity release, because all addresses will be\\n        // contracts then.\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"further-reading\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#further-reading\",\n    \"aria-label\": \"further reading permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Further reading\"), mdx(\"p\", null, \"Check out Solidity and Vyper's documentation for a more complete overview of smart contracts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://solidity.readthedocs.io/\"\n  }, \"Solidity\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://vyper.readthedocs.io/\"\n  }, \"Vyper\"))), mdx(\"h2\", {\n    \"id\": \"related-topics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-topics\",\n    \"aria-label\": \"related topics permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/docs/smart-contracts/\"\n  }, \"Smart contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/docs/evm/\"\n  }, \"Ethereum Virtual Machine\"))), mdx(\"h2\", {\n    \"id\": \"related-tutorials\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-tutorials\",\n    \"aria-label\": \"related tutorials permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related tutorials\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/downsizing-contracts-to-fight-the-contract-size-limit/\"\n  }, \"Downsizing contracts to fight the contract size limit\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\u2013 Some practical tips for reducing the size of your smart contract.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/logging-events-smart-contracts/\"\n  }, \"Logging data from smart contracts with events\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\u2013 An introduction to smart contract events and how you can use them to log data.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/developers/tutorials/interact-with-other-contracts-from-solidity/\"\n  }, \"Interact with other contracts from Solidity\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\u2013 How to deploy a smart contract from an existing contract and interact with it.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#prerequisites-prerequisites","title":"Prerequisites {#prerequisites}"}]},{"url":"#data-data","title":"Data {#data}","items":[{"url":"#storage-storage","title":"Storage {#storage}"},{"url":"#memory-memory","title":"Memory {#memory}"},{"url":"#environment-variables-environment-variables","title":"Environment variables {#environment-variables}"}]},{"url":"#functions-functions","title":"Functions {#functions}","items":[{"url":"#view-functions-view-functions","title":"View functions {#view-functions}"},{"url":"#constructor-functions-constructor-functions","title":"Constructor functions {#constructor-functions}"},{"url":"#built-in-functions-built-in-functions","title":"Built-in functions {#built-in-functions}"}]},{"url":"#writing-functions-writing-functions","title":"Writing functions {#writing-functions}"},{"url":"#events-and-logs-events-and-logs","title":"Events and logs {#events-and-logs}"},{"url":"#annotated-examples-annotated-examples","title":"Annotated examples {#annotated-examples}","items":[{"url":"#hello-world-hello-world","title":"Hello world {#hello-world}"},{"url":"#token-token","title":"Token {#token}"},{"url":"#unique-digital-asset-unique-digital-asset","title":"Unique digital asset {#unique-digital-asset}"}]},{"url":"#further-reading-further-reading","title":"Further reading {#further-reading}"},{"url":"#related-topics-related-topics","title":"Related topics {#related-topics}"},{"url":"#related-tutorials-related-tutorials","title":"Related tutorials {#related-tutorials}"}]}}},"pageContext":{"slug":"/ar/developers/docs/smart-contracts/anatomy/","ignoreTranslationBanner":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/docs/smart-contracts/anatomy/index.md","intl":{"language":"ar","defaultLanguage":"en","languages":["en","ar","bg","bn","ca","cs","de","el","es","fa","fi","fr","hi","hr","hu","id","ig","it","ja","ko","lt","ml","nl","nb","pl","pt","pt-br","ro","ru","se","sk","sl","tr","uk","vi","zh","zh-tw"],"messages":{"1inch-logo":"شعار شركة 1inch","aave-logo":"شعار شركة Aave","about":"نبذة","about-ethereum-org":"نبذة عن ethereum.org","about-us":"نبذة عنا","alt-eth-blocks":"صورة توضيحية لكتل منظمة على شكل شعار الإثيريوم","aria-toggle-search-button":"تبديل زر البحث","aria-toggle-menu-button":"تبديل زر القائمة","back-to-top":"عودة إلى الأعلى","banner-page-incomplete":"هذه الصفحة غير مكتملة و تسعدنا مساعدتك، عدل هذه الصفحة وأضف أي شيء تجد أنه ذو منفعة للآخرين.","beacon-chain":"سلسلة المنارة","binance-logo":"شعار شركة Binance","bittrex-logo":"شعار شركة Bittrex","brand-assets":"أصول العلامة التجارية","bug-bounty":"مكافأة اكتشاف الأخطاء","coinbase-logo":"شعار شركة Coinbase","coinmama-logo":"شعار شركة Coinmama","community":"المجتمع","community-menu":"قائمة المجتمع","compound-logo":"شعار شركة Compound","cons":"سلبيات","contact":"تواصل","content-versions":"نسخ المحتوى","contributing":"المساهمة","contributors":"المساهمون","contributors-thanks":"إلى كل من ساهم في هذه الصفحة، شكرا لك!","cookie-policy":"سياسة ملفات تعريف الارتباط","copied":"تم النسخ","copy":"نسخ","dark-mode":"داكن","data-provided-by":"مصدر البيانات:","decentralized-applications-dapps":"التطبيقات اللامركزية (dapps)","deposit-contract":"عقد الإيداع","devcon":"مؤتمر دفكون السنوي","developer-resources":"مصادر المبرمجين","developers":"المبرمجون","developers-home":"الصفحة الرئيسية للمطورين","docs":"المستندات","documentation":"التوثيق","dydx-logo":"شعار شركة Dydx","ecosystem":"الشبكة التعاونية","edit-page":"تعديل الصفحة","ef-blog":"مدونة مؤسسة إثيريوم","eips":"مقترحات تحسين إثيريوم","enterprise":"شركة","enterprise-menu":"قائمة الشركات","esp":"برنامج دعم النظام البيئي","eth-current-price":"سعر ETH الحالي (بالدولار الأمريكي)","eth2":"الإصدار الثاني للإيثريوم","eth2-beaconcha-in-desc":"برنامج مفتوح المصدر لاستكشاف سلسلة المنارة Beacon Chain للإصدار الثاني للإيثريوم Eth2","eth2-beaconscan-desc":"برنامج لاستكشاف سلسلة المنارة Beacon Chain للإصدار الثاني للإيثريوم Eth2 اسمه Etherscan for Eth2","eth2-become-staker":"ابدا الاستثمار","eth2-become-staker-desc":"إذا كنت تتطلع للمشاركة، فقد بدأت عملية تجميد عملات الإيثريوم لدعم وتأمين الشبكة. تأكد من أنك على دراية بالمخاطر.","eth2-explore":"استكشف البيانات","eth2-no-action-needed":"أنت لست بحاجة إلى فعل أي شيء بالـETH التي لديك. انتبه إلى المخادعين الذين يطلبون منك إرسال ETH لمبادلته.","eth2-run-beacon-chain":"تشغيل عميل المنارة","eth2-run-beacon-chain-desc":"يحتاج إيثيريوم إلى أكبر عدد ممكن من العملاء. ساعد إيثيريوم للمصلحة العامة!","eth2-service-announcement":"إعلان خدمة Eth2","eth2-what-shipping":"متى يتم الشحن؟","ethereum":"إثيريوم","ethereum-2-0":"إثيريوم 2.0","ethereum-brand-assets":"أصول العلامة التجارية لإيثريوم","ethereum-community":"مجتمع إثيريوم","ethereum-foundation":"مؤسسة إيثيريوم","ethereum-foundation-logo":"شعار مؤسسة إيثيريوم","ethereum-glossary":"مسرد مصطلحات إثيريوم","ethereum-governance":"إدارة إيثيريوم","ethereum-logo":"شعار إثيريوم","ethereum-security":"أمان إثيريوم ومنع الاحتيال","ethereum-studio":"استوديو إيثريوم","ethereum-wallets":"محافظ إثيريوم","ethereum-whitepaper":"دليل استخدام إثيريوم","example-projects":"مثال للمشاريع","find-wallet":"البحث عن المحفظة","foundation":"مؤسسة","gemini-logo":"شعار Gemini","get-eth":"احصل على ETH","get-involved":"شارك","get-started":"ابدأ الاستخدام","gitcoin-logo":"شعار شركة Gitcoin","glossary":"قائمة المصطلحات","governance":"إرشادات","grants":"منح","grant-programs":"برامج منح النظام البيئي","guides-and-resources":"أدلة ومصادر المجتمع","history":"تاريخ","history-of-ethereum":"تاريخ الإيثيريوم","home":"الصفحة الرئيسية","how-ethereum-works":"كيفية عمل إيثريوم","image":"صورة","in-this-section":"في هذا القسم","individuals":"الأفراد","individuals-menu":"قائمة الأفراد","jobs":"الوظائف","kraken-logo":"شعار شركة Kraken","language-ar":"العربية","language-bg":"البلغارية","language-bn":"البنغالية","language-ca":"الكتالونية","language-cs":"التشيكية","language-de":"الألمانية","language-el":"اليونانية","language-en":"الإنجليزية","language-es":"الإسبانية","language-fa":"الفارسية","language-fi":"الفنلندية","language-fr":"الفرنسية","language-hu":"الهنغارية","language-hr":"الكرواتية","language-hi":"الهندية","language-id":"الأندونسية","language-ig":"الإيجبو","language-it":"الإيطالية","language-ja":"اليابانية","language-ko":"الكورية","language-lt":"الليتوانية","language-ml":"المالايالامية","language-nb":"النرويجية","language-nl":"الهولندية","language-pl":"البولندية","language-pt":"البرتغالية","language-pt-br":"البرتغالية (البرازيل)","language-ro":"الرومانية","language-ru":"الروسية","language-se":"السويدية","language-sk":"السلوفاكية","language-sl":"السلوفينية","language-support":"مساعدة اللغة","language-tr":"التركية","language-uk":"الأوكرانية","language-vi":"الفيتنامية","language-zh":"الصينية المبسطة","language-zh-tw":"الصينية التقليدية","languages":"اللغات","last-24-hrs":"آخر 24 ساعة","last-edit":"آخر تعديل","learn":"تعلّم","learn-by-coding":"تعلّم عن طريق البرمجة","learn-menu":"قائمة التعلّم","learn-more":"تعلّم أكثر","less":"أقل","light-mode":"فاتح","listing-policy-disclaimer":"جميع المنتجات المدرجة في هذه الصفحة ليست مصادقة رسمية ولا تقدم إلا لأغراض إعلامية. إذا كنت ترغب في إضافة منتج أو تقديم تعليقات على السياسة، فاطرح مشكلة في GitHub.","listing-policy-raise-issue-link":"طرح مشكلة","live-help":"المساعدة المباشرة","live-help-menu":"قائمة المساعدة المباشرة","loading":"جاري التحميل...","loading-error":"خطأ في التحميل.","loading-error-refresh":"خطأ، يُرجى إعادة المحاولة.","logo":"الشعار","loopring-logo":"شعار لوبرينج","london-upgrade-banner":"ترقية لندن مباشرة على: ","london-upgrade-banner-released":"تم إصدار ترقية لندن!","mainnet-ethereum":"ماينيت إثيريوم","makerdao-logo":"شعار MakerDao","matcha-logo":"شعار ماتشا","merge":"دمج","more":"المزيد","nav-beginners":"مبتدئين","next":"التالي","oasis-logo":"شعار Oasis","on-this-page":"في هذه الصفحة","page-content":"محتوى الصفحة","page-enterprise":"الشركات","page-last-updated":"آخر تحديث للصفحة","previous":"السابق","privacy-policy":"سياسة الخصوصية","private-ethereum":"إثيريوم خاص","pros":"الإيجابيات","read-more":"اقرأ المزيد","refresh":"يُرجى تحديث الصفحة.","review-progress":"استعراض التقدم المحرز","search":"بحث","search-box-blank-state-text":"البحث بعيدًا!","search-eth-address":"يبدو هذا كعنوان إيثيريوم. نحن لا نقدم بيانات محددة للعناوين. حاول البحث عنه في مستكشف كتلة مثل","search-no-results":"لا توجد نتائج لهذا البحث","security":"الأمان","see-contributors":"المساهمون","set-up-local-env":"إعداد البيئة المحلية الخاصة بك","shard-chains":"سلسلة القطع","show-all":"عرض الكل","show-less":"عرض أقل","site-description":"إيثيريوم هو منصة عالمية لامركزية للنقود وأنواع جديدة من التطبيقات. في إيثيريوم، يمكنك كتابة التعليمات البرمجية التي تحكم المال، وبناء التطبيقات التي يمكن الوصول إليها في أي مكان في العالم.","site-title":"ethereum.org","stablecoins":"Stablecoins","staking":"تجميد العملات","summary":"موجز","terms-of-use":"شروط الاستخدام","transaction-fees":"ما هي رسوم المعاملات؟","translation-banner-body-new":"ترى هذه الصفحة بالإنجليزية لأننا لم نترجمها بعد. ساعدنا في ترجمة هذا المحتوى.","translation-banner-body-update":"هناك نسخة جديدة من هذه الصفحة لكنها باللغة الإنجليزية فقط الآن. ساعدنا في ترجمة أحدث إصدار.","translation-banner-button-join-translation-program":"انضم إلى برنامج الترجمة","translation-banner-button-learn-more":"تعلّم أكثر","translation-banner-button-see-english":"اعرض المحتوى بالإنجليزية","translation-banner-button-translate-page":"ترجم الصفحة","translation-banner-title-new":"المساعدة في ترجمة هذا البرنامج","translation-banner-title-update":"ساعد في تحديث هذه الصفحة","translation-program":"برنامج الترجمة","translation-progress":"التقدم المحرز في الترجمة","tutorials":"البرامج التعليمية","uniswap-logo":"شعار شركة Uniswap","use":"الاستخدام","use-ethereum":"استخدم إثيريوم","use-ethereum-menu":"استخدام قائمة إيثيريوم","vision":"الرؤية","wallets":"المحافظ","website-last-updated":"آخر تحديث للموقع","what-is-ether":"ما إيثر (ETH)؟","what-is-ethereum":"ما هو الإثيريوم؟","whitepaper":"دليل الاستخدام","defi-page":"التمويل اللامركزي (DeFi)","dao-page":"المنظمات المستقلة اللامركزية (DAOs)","nft-page":"رموز رقمية غير قابلة للاستبدال (NFTs)","page-developer-meta-title":"موارد مطور إيثيريوم","page-developers-about":"حول موارد المطور هذه","page-developers-about-desc":"ethereum.org هنا لمساعدتك في البناء مع إيثيريوم مع التوثيق على المفاهيم الأساسية وكذلك على تكدس التطوير. بالإضافة إلى ذلك هناك دروس للارتقاء بك وتشغيل.","page-developers-about-desc-2":"وبإلهام من شبكة مطوري موزيلا، ظننا أن إيثيريوم بحاجة إلى مكان لإيواء محتوى ومصادر رائعة. مثل أصدقائنا في موزيلا، كل شيء هنا مفتوح المصدر ومستعد لك للتوسع والتحسن.","page-developers-account-desc":"العقود أو الأشخاص في الشبكة","page-developers-accounts-link":"الحسابات","page-developers-advanced":"إعدادات متقدمة","page-developers-api-desc":"استخدام المكتبات للتفاعل مع العقود الذكية","page-developers-api-link":"Backend APIs","page-developers-aria-label":"قائمة المطورين","page-developers-block-desc":"دفعات المعاملات المضافة إلى سلسلة الكتل","page-developers-block-explorers-desc":"بوابة بيانات إيثيريوم الخاصة بك","page-developers-block-explorers-link":"مستكشفات الكتلة","page-developers-blocks-link":"الكتل","page-developers-browse-tutorials":"استعرض الدروس التعليمية","page-developers-choose-stack":"اختر الفئة الخاصة بك","page-developers-contribute":"ساهم","page-developers-dev-env-desc":"IDEs المناسبة لتطوير dapp","page-developers-dev-env-link":"بيئات التطوير","page-developers-discord":"انضم لنا على الديسكورد","page-developers-docs-introductions":"المقدمات","page-developers-evm-desc":"الكمبيوتر الذي يعالج المعاملات","page-developers-evm-link":"آلة إيثيريوم الافتراضية (EVM)","page-developers-explore-documentation":"استكشاف الوثائق","page-developers-feedback":"إذا كان لديك أي ملاحظات، اتصل بنا عبر مشكلة GitHub أو على خادم Discord لدينا.","page-developers-frameworks-desc":"أدوات للمساعدة في تسريع التطوير","page-developers-frameworks-link":"أطر التطوير","page-developers-fundamentals":"الأساسيات","page-developers-gas-desc":"تحتاج إلى إيثر لتشغيل المعاملات","page-developers-gas-link":"الغاز","page-developers-get-started":"كيف ترغب في البدء؟","page-developers-improve-ethereum":"ساعدنا في جعل ethereum.org أفضل","page-developers-improve-ethereum-desc":"مثل ethereum.org، هذه المستندات هي جهد مجتمعي. قم بإنشاء \"PR\" إذا رأيت أخطاء، مساحة للتحسين، أو فرص جديدة لمساعدة مطوري \"إيثيريوم\".","page-developers-into-eth-desc":"مقدمة لسلسلة القوالب وإيثيريوم","page-developers-intro-dapps-desc":"مقدمة إلى التطبيقات اللامركزية","page-developers-intro-dapps-link":"مقدمة إلى التطبيقات اللامركزية","page-developers-intro-eth-link":"مقدمة إلى إيثيريوم","page-developers-intro-stack":"مقدمة إلى المكدس","page-developers-intro-stack-desc":"مقدمة لمكدس إيثيريوم","page-developers-js-libraries-desc":"استخدام جافا سكريبت للتفاعل مع العقود الذكية","page-developers-js-libraries-link":"مكتبات جافا سكريبت","page-developers-language-desc":"استخدام إيثيريوم مع اللغات المألوفة","page-developers-languages":"لغات البرمجة","page-developers-learn":"تعلم تطوير الإيثيريوم","page-developers-learn-desc":"اقرأ على المفاهيم الأساسية ومكدس الإيثيريوم مع مستنداتنا","page-developers-learn-tutorials":"التعلم من خلال الدروس التعليمية","page-developers-learn-tutorials-cta":"عرض الدروس التعليمية","page-developers-learn-tutorials-desc":"تعلم تطوير الإيثيريوم خطوة بخطوة من البناة الذين قاموا بذلك بالفعل.","page-developers-meta-desc":"التوثيق، الدروس، والأدوات للمطورين البناء على إيثيريوم.","page-developers-mining-desc":"كيفية إنشاء كتل جديدة والتوصل إلى توافق في الآراء","page-developers-mining-link":"التعدين","page-developers-networks-desc":"لمحة عامة عن الشبكة الرئيسية وشبكات الاختبار","page-developers-networks-link":"الشبكات","page-developers-node-clients-desc":"كيف يتم التحقق من الكتل والمعاملات في الشبكة","page-developers-node-clients-link":" العقد والعملاء","page-developers-oracle-desc":"الحصول على بيانات خارج السلسلة في العقود الذكية","page-developers-oracles-link":"Oracles","page-developers-play-code":"العب بالرمز","page-developers-read-docs":"اقرأ المستندات","page-developers-scaling-desc":"حلول للمعاملات الأسرع","page-developers-scaling-link":"القياس","page-developers-smart-contract-security-desc":"التدابير الأمنية التي ينبغي النظر فيها أثناء عملية التطوير","page-developers-smart-contract-security-link":"الأمان","page-developers-set-up":"إعداد البيئة المحلية الخاصة بك","page-developers-setup-desc":"احصل على تكدس جاهز للبناء عن طريق تهيئة بيئة التطوير.","page-developers-smart-contracts-desc":"المنطق وراء التطبيقات - اتفاقيات التنفيذ التلقائي","page-developers-smart-contracts-link":"العقود الذكية","page-developers-stack":"المكدس","page-developers-start":"ابدأ التجربة","page-developers-start-desc":"هل ترغب في التجربة أولاً، طرح الأسئلة لاحقاً؟","page-developers-storage-desc":"كيفية التعامل مع وحدة تخزين التطبيق اللامركزي","page-developers-storage-link":"التخزين","page-developers-subtitle":"دليل بناة للإيثيريوم. بواسطة البناة، للبناة.","page-developers-title-1":"إثيريوم","page-developers-title-2":"مبرمج","page-developers-title-3":"المصادر","page-developers-token-standards-desc":"لمحة عامة عن المعايير الرمزية المقبولة","page-developers-token-standards-link":"معايير الرمز المميز","page-developers-transactions-desc":"الطريقة التي تتغير بها حالة إيثيريوم","page-developers-transactions-link":"المعاملات","page-developers-web3-desc":"كيف يختلف عالم التنمية على شبكة الإنترنت 3","page-developers-web3-link":"ويب2 مقابل ويب3","page-index-hero-image-alt":"صورة توضيحية لمدينة مستقبلية تمثل النظام الرقمي لإيثريوم.","page-index-meta-description":"إيثيريوم هو منصة عالمية لامركزية للنقود وأنواع جديدة من التطبيقات. في إيثيريوم، يمكنك كتابة التعليمات البرمجية التي تحكم المال، وبناء التطبيقات التي يمكن الوصول إليها في أي مكان في العالم.","page-index-meta-title":"الصفحة الرئيسية","page-index-title":"مرحبًا بك في إيثريوم","page-index-description":"إيثيروم هي تكنولوجيا مدارة من مجتمع إيثيروم لتمكين العملة الرقمية إيثر (ETH) وآلاف التطبيقات اللامركزية.","page-index-title-button":"استكشف إيثيريوم","page-index-get-started":"البدء بالاستخدام","page-index-get-started-description":"ethereum.org هو بوابتك إلى عالم إيثيريوم، حيث التكنلوجيا الجديدة والمتطورة باستمرار. إنه لأمر جيد أن يكون لديك دليل، إليك ماننصحك به للغوص في هذه التكنولوجيا.","page-index-get-started-image-alt":"صورة توضيحية لشخص يعمل على حاسب آلي.","page-index-get-started-wallet-title":"اختر محفظة","page-index-get-started-wallet-description":"تتيح لك المحفظة الاتصال بإيثيريوم وإدارة أموالك.","page-index-get-started-wallet-image-alt":"صورة توضيحية لرجل آلي يتكون جسمه من خزنة تمثل محفظة إيثيريوم.","page-index-get-started-eth-title":"احصل على ETH","page-index-get-started-eth-description":"ETH هي عملة إيثيريوم، يمكنك استعمالها في التطبيقات.","page-index-get-started-eth-image-alt":"صورة توضيحية تبين مجموعة من الأشخاص المذهولين من الصورة الرمزية للإيثر (ETH).","page-index-get-started-dapps-title":"استخدم تطبيقًا لامركزيًا","page-index-get-started-dapps-description":"التطبيقات اللامركزية هي تطبيقات تعمل عن طريق إيثيريوم. شاهد ما يمكنك القيام به.","page-index-get-started-dapps-image-alt":"صورة توضيحية لكلب يستخدم حاسب.","page-index-get-started-devs-title":"ابدأ بالبناء","page-index-get-started-devs-description":"إن أردت البدأ بالبرمجة مع إيثيريوم، فلدينا وثائق ودروس وأكثر من ذلك في بوابة المبرمجين.","page-index-get-started-devs-image-alt":"صورة توضيحية تبين يدًا تشكّل رمز ETH باستعمال قطع الليجو.","page-index-what-is-ethereum":"ما هو إيثريوم؟","page-index-what-is-ethereum-description":"تحتضن تكنولوجيا إيثيريوم الأموال الرقمية، والمدفوعات العالمية، وكذلك التطبيقات الحاسوبية، حيث ساهم مجتمع إيثيريوم ببناء نظام اقتصادي رقمي مزدهر، ما يخلق طرقًا جريئة وجديدة تسمح لصناع المحتوى بالكسب عن طريق الإنترنت، والقيام بأكثر من ذلك بكثير. إيثيريوم مفتوح للجميع، فأينما كنت في العالم، كل ما تحتاجه هو الإنترنت.","page-index-what-is-ethereum-button":"ما هي إيثريوم؟","page-index-what-is-ethereum-secondary-button":"المزيد عن المال الرقمي","page-index-what-is-ethereum-image-alt":"صورة توضيحية تبين شخصًا يذهب مباشرة إلى بازار، كنايةً عن إيثيريوم.","page-index-defi":"نظام مالي أكثر إنصافاً","page-index-defi-description":"في يومنا هذا، لا يستطيع المليارات من الأشخاص فتح حساب مصرفي، وهناك آخرون تم حظر مدفوعاتهم. نظام إيثيريوم المالي اللامركزي (DeFi) لا يتوقف ولا يطبق التمييز أبدًا. فقط بالاتصال بشبكة الإنترنت، بإمكانك إرسال واستقبال واقتراض المال وكسب الفوائد، كما يمكنك دفق الأموال بأي مكان في العالم.","page-index-defi-button":"استكشف النظام المالي اللامركزي (DeFi)","page-index-defi-image-alt":"صورة توضيحية تبين يدًا تقدم رمز ETH.","page-index-internet":"إنترنت مفتوح","page-index-internet-description":"اليوم، نحصل على خدمات إنترنت 'مجانية' بالتخلي عن التحكم في بياناتنا الشخصية. خدمات الإيثيريوم مفتوحة بشكل افتراضي، تحتاج فقط إلى محفظة. وهي مجانية وسهلة الإنشاء، تحت سيطرتكم، وتعمل بدون أي معلومات شخصية.","page-index-internet-button":"استكشف الإنترنت المفتوح","page-index-internet-secondary-button":"المزيد عن المحافظ","page-index-internet-image-alt":"صورة توضيحية لإعداد جهاز كمبيوتر مستقبلي، مدعوم من بلورات الإيثيريوم.","page-index-developers":"حدود جديدة للتطوير","page-index-developers-description":"الإيثيريوم وتطبيقاته شفافة ومفتوحة المصدر. يمكنك تفريع التعليمات البرمجية وإعادة استخدام الوظائف الأخرى التي تم بناؤها بالفعل. إذا كنت لا ترغب في تعلم لغة جديدة يمكنك فقط التفاعل مع التعليمات البرمجية المفتوحة المصدر باستخدام جافا سكريبت وغيرها من اللغات الموجودة.","page-index-developers-button":"بوابة المبرمج","page-index-developers-code-example-title-0":"البنك الخاص بك","page-index-developers-code-example-description-0":"يمكنك بناء بنك يديره المنطق الذي قمت ببرمجته.","page-index-developers-code-example-title-1":"عملتك الخاصة","page-index-developers-code-example-description-1":"يمكنك إنشاء رموز مميزة بحيث يمكنك نقلها واستخدامها عبر التطبيقات.","page-index-developers-code-example-title-2":"محفظة جافا سكريبت إيثيريوم","page-index-developers-code-example-description-2":"بإمكانك استخدام اللغات الموجودة للتفاعل مع الإيثيريوم والتطبيقات الأخرى.","page-index-developers-code-example-title-3":"DNS مفتوح ولا يتطلب تصريحًا","page-index-developers-code-example-description-3":"يمكنك أن تعيد تخيل الخدمات الموجودة كتطبيقات لامركزية و مفتوحة.","page-index-network-stats-title":"إيثيريوم اليوم","page-index-network-stats-subtitle":"أحدث إحصائيات الشبكة","page-index-network-stats-eth-price-description":"سعر ETH (بالدولار الأمريكي)","page-index-network-stats-eth-price-explainer":"أحدث سعر للإيثر الواحد. يمكنك شراء قيمة صغيرة جدًا تصل إلى 0.000000000000000001 جزءًا من الـ ETH، لست بحاجة لشراء عملة ETH كاملة.","page-index-network-stats-tx-day-description":"المعاملات اليوم","page-index-network-stats-tx-day-explainer":"عدد المعاملات التي تمت معالجتها بنجاح على الشبكة خلال الـ 24 ساعة الأخيرة.","page-index-network-stats-value-defi-description":"القيمة المقفلة في تطبيقات التمويل اللامركزي DeFi (بالدولار الأمريكي)","page-index-network-stats-value-defi-explainer":"المبلغ المالي في تطبيقات التمويل اللامركزي (DeFi)، الاقتصاد الرقمي في إيثيريوم.","page-index-network-stats-nodes-description":"العُقَد","page-index-network-stats-nodes-explainer":"يعمل إيثيريوم بواسطة آلاف من المتطوعين حول العالم يعروفون بعقود.","page-index-touts-header":"استكشف إيثيريوم","page-index-contribution-banner-title":"المساهمة في إيثيريوم","page-index-contribution-banner-description":"هذا الموقع مفتوح المصدر، يحتوي على مئات من مجتمعات المساهمين. يمكنك اقتراح تعديلات لأي محتوى في هذا الموقع، قدم اقتراحات لميزات رائعة و جديدة، أو ساعدنا على التخلص من الأخطاء.","page-index-contribution-banner-image-alt":"شعار إيثيريوم مصنوع من قطع الليجو.","page-index-contribution-banner-button":"المزيد حول المساهمة","page-index-tout-eth2-title":"طور معرفتك حول الإيثيريوم 2","page-index-tout-eth2-description":"الإيثيريوم 2.0 هو برنامج لترقيات مترابطة، مصمم لجعل الإيثيريوم أكثر قابلية للتوسع، وأكثر أمنًا واستدامة.","page-index-tout-eth2-image-alt":"صورة توضيحية لسفينة فضائية تمثل القوة المتزايدة لإيثريوم 2.","page-index-tout-enterprise-title":"إيثريوم للشركات","page-index-tout-enterprise-description":"أنظر كيف يمكن لإيثيريوم فتح نماذج أعمال جديدة، وتقليل التكاليف وحماية عملك التجاري في المستقبل.","page-index-tout-enterprise-image-alt":"صورة توضيحية لحاسوب/جهاز مستقبلي.","page-index-tout-community-title":"مجتمع إثيريوم","page-index-tout-community-description":"إيثيريوم يتمحور بشكل كامل حول المجتمع. ويتكون من أشخاص من جميع الخلفيات والاهتمامات المختلفة. انظر كيف يمكنك الانضمام إليه.","page-index-tout-community-image-alt":"صورة توضيحية لمجموعة من البناة يعملون معا.","page-index-nft":"إنترنت الأصول","page-index-nft-description":"إيثيريوم ليس مخصص فقط للأموال الرقمية. أي شيء يمكنك أن تملكه يمكن أن يكون ممثلاً ومتاجراً به ووضعه للاستخدام كعملات غير قابلة للاستبدال (NFTs). يمكنك ترميز أعمالك الفنية والحصول على الإتاوات تلقائياً في كل مرة يعاد بيعها فيها، أو استخدم الرمز المميز لشيء تملكه للحصول على قرض. الاحتمالات في حالة نمو طوال الوقت.","page-index-nft-button":"المزيد من الرموز غير القابلة للاستبدال","page-index-nft-alt":"يتم عرض شعار إيثريوم عبر الهولوغرام."},"routed":true,"originalPath":"/developers/docs/smart-contracts/anatomy/","redirect":false}}},
    "staticQueryHashes": ["1011117294","3003422828","4096231394"]}