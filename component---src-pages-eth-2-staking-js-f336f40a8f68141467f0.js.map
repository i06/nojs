{"version":3,"file":"component---src-pages-eth-2-staking-js-f336f40a8f68141467f0.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Breadcrumbs.js","webpack://ethereum-org-website/./src/components/CalloutBanner.js","webpack://ethereum-org-website/./src/components/GhostCard.js","webpack://ethereum-org-website/./src/components/InfoBanner.js","webpack://ethereum-org-website/./src/components/PageHero.js","webpack://ethereum-org-website/./src/components/PageMetadata.js","webpack://ethereum-org-website/./src/pages/eth2/staking.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useIntl } from \"gatsby-plugin-intl\"\n\nimport Link from \"./Link\"\nimport { translateMessageId, supportedLanguages } from \"../utils/translations\"\n\nconst Crumb = styled.h4`\n  margin: 0;\n  font-size: 14px;\n  line-height: 140%;\n  letter-spacing: 0.04em;\n  font-weight: normal;\n`\n\nconst List = styled.ul`\n  margin: 0;\n  margin-bottom: 2rem;\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  /* Avoid header overlap: */\n  position: relative;\n  z-index: 1;\n`\n\nconst ListItem = styled.li`\n  margin: 0;\n  margin-right: 0.5rem;\n`\n\nconst Slash = styled.span`\n  margin-left: 0.5rem;\n  color: ${(props) => props.theme.colors.textTableOfContents};\n`\n\nconst CrumbLink = styled(Link)`\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.textTableOfContents};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.primary};\n  }\n\n  &.active {\n    color: ${(props) => props.theme.colors.primary};\n  }\n`\n\n// Generate crumbs from slug\n// e.g. \"/en/eth2/proof-of-stake/\" will generate:\n// [\n//   { fullPath: \"/en/\", text: \"HOME\" },\n//   { fullPath: \"/en/eth2/\", text: \"ETH2\" },\n//   { fullPath: \"/en/eth2/proof-of-stake/\", text: \"PROOF OF STAKE\" },\n// ]\n// `startDepth` will trim breadcrumbs\n// e.g. startDepth=1 will generate:\n// [\n//   { fullPath: \"/en/eth2/\", text: \"ETH2\" },\n//   { fullPath: \"/en/eth2/proof-of-stake/\", text: \"PROOF OF STAKE\" },\n// ]\nconst Breadcrumbs = ({ slug, startDepth = 0, className }) => {\n  const intl = useIntl()\n\n  const split = slug.split(\"/\")\n  const sliced = split.filter((item) => !!item).slice(startDepth)\n\n  const crumbs = sliced.map((path, idx) => {\n    // If homepage (e.g. \"en\"), set text to \"home\" translation\n    const text = supportedLanguages.includes(path)\n      ? translateMessageId(\"page-index-meta-title\", intl)\n      : translateMessageId(path, intl)\n\n    return {\n      fullPath: split.slice(0, idx + 2 + startDepth).join(\"/\") + \"/\",\n      text: text.toUpperCase(),\n    }\n  })\n\n  return (\n    <List className={className} dir={\"auto\"}>\n      {crumbs.map((crumb, idx) => (\n        <ListItem key={idx}>\n          <Crumb>\n            <CrumbLink\n              to={crumb.fullPath}\n              isPartiallyActive={slug === crumb.fullPath}\n            >\n              {crumb.text}\n            </CrumbLink>\n            {idx < crumbs.length - 1 && <Slash>/</Slash>}\n          </Crumb>\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nexport default Breadcrumbs\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst StyledCard = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  background: linear-gradient(\n    49.21deg,\n    rgba(127, 127, 213, 0.2) 19.87%,\n    rgba(134, 168, 231, 0.2) 58.46%,\n    rgba(145, 234, 228, 0.2) 97.05%\n  );\n  padding: 3rem;\n  margin: 1rem;\n  margin-top: 6rem;\n  margin-bottom: 10rem;\n  border-radius: 4px;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n    margin-bottom: 1rem;\n    margin: 4rem 2rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    padding: 2rem;\n  }\n`\n\nconst Content = styled.div`\n  padding-left: 5rem;\n  flex: 1 0 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 2rem;\n    padding-left: 1rem;\n    flex-direction: column;\n    width: 100%;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    padding-left: 0;\n  }\n`\n\nconst Description = styled.p`\n  font-size: 20px;\n  width: 90%;\n  line-height: 140%;\n  margin-bottom: 2rem;\n  color: ${(props) => props.theme.colors.text200};\n`\n\nconst Image = styled(GatsbyImage)`\n  align-self: center; /* prevents crop */\n  width: 100%;\n  max-width: ${(props) => `${props.maxImageWidth}px`};\n  margin-top: -6rem;\n  margin-bottom: -6rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-bottom: 0rem;\n    margin-top: -6rem;\n  }\n`\n\nconst H2 = styled.h2`\n  margin-top: 0rem;\n`\n\nconst CalloutBanner = ({\n  image,\n  maxImageWidth,\n  title,\n  description,\n  alt,\n  children,\n  className,\n}) => (\n  <StyledCard className={className}>\n    <Image image={image} alt={alt} maxImageWidth={maxImageWidth} />\n    <Content>\n      <H2>{title}</H2>\n      <Description>{description}</Description>\n      {children}\n    </Content>\n  </StyledCard>\n)\n\nexport default CalloutBanner\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  position: relative;\n  margin-top: 0.5rem;\n  align-self: stretch;\n`\n\nconst BaseCard = styled.div`\n  height: 100%;\n  width: 100%;\n  border-radius: 2px;\n`\n\nconst Card = styled(BaseCard)`\n  z-index: 2;\n  padding: 1.5rem;\n  text-align: left;\n  border: 1px solid ${(props) => props.theme.colors.border};\n  background-color: ${(props) => props.theme.colors.ghostCardBackground};\n`\n\nconst Ghost = styled(BaseCard)`\n  z-index: -1;\n  position: absolute;\n  bottom: 0.5rem;\n  left: 0.5rem;\n  border: 1px solid ${(props) => props.theme.colors.border};\n  background-color: ${(props) => props.theme.colors.ghostCardGhost};\n`\n\nconst GhostCard = ({ children, className }) => (\n  <Container className={className}>\n    <Ghost />\n    <Card className=\"ghost-card-base\">{children}</Card>\n  </Container>\n)\n\nexport default GhostCard\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Emoji from \"./Emoji\"\nimport { margin } from \"styled-system\"\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Banner = styled.div`\n  position: relative;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  padding: 1.5rem;\n  border-radius: 2px;\n  max-width: ${(props) => (props.shouldCenter ? `55rem` : `100%`)};\n  color: ${(props) => props.theme.colors.black300};\n  background: ${(props) =>\n    props.isWarning\n      ? props.theme.colors.warning\n      : props.theme.colors.infoBanner};\n\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    flex-direction: column;\n  }\n\n  a {\n    color: ${(props) =>\n      props.isWarning\n        ? props.theme.colors.warningLink\n        : props.theme.colors.infoLink};\n    &:hover {\n      color: ${(props) =>\n        props.isWarning\n          ? props.theme.colors.warningLinkHover\n          : props.theme.colors.infoLinkHover};\n    }\n  }\n  ${margin}\n`\n\nconst StyledEmoji = styled(Emoji)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  margin-right: 1.5rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    align-self: flex-start;\n    margin-right: 0;\n    margin-bottom: 0.5rem;\n  }\n`\n\nconst Content = styled.div`\n  display: ${(props) => (props.shouldSpaceBetween ? `flex` : `block`)};\n  align-items: ${(props) => (props.shouldSpaceBetween ? `center` : `auto`)};\n  width: ${(props) => (props.shouldSpaceBetween ? `100%` : `auto`)};\n  justify-content: ${(props) =>\n    props.shouldSpaceBetween ? `space-between` : `auto`};\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    display: block;\n  }\n`\n\nconst InfoBanner = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Banner\n      className={className}\n      isWarning={isWarning}\n      shouldCenter={shouldCenter}\n      {...props}\n    >\n      {emoji && <StyledEmoji text={emoji} size={2} />}\n      <Content shouldSpaceBetween={shouldSpaceBetween}>{children}</Content>\n    </Banner>\n  )\n  return shouldCenter ? <Container>{banner}</Container> : banner\n}\n\nexport default InfoBanner\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport ButtonLink from \"./ButtonLink\"\nimport { Content } from \"./SharedStyledComponents\"\n\nconst HeroContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n  margin-bottom: 0rem;\n  padding: 0rem 4rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: ${(props) =>\n      props.isReverse ? `column` : `column-reverse`};\n    /* accounts for when we want image above or below text */\n    padding: 0;\n  }\n`\n\nconst HeroContent = styled.div`\n  max-width: 640px;\n  padding: 8rem 0 8rem 2rem;\n  margin-right: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding: 4rem 0;\n    max-width: 100%;\n  }\n`\n\nconst HeroImg = styled(GatsbyImage)`\n  flex: 1 1 50%;\n  background-size: cover;\n  background-repeat: no-repeat;\n  align-self: center;\n  margin-top: 3rem;\n  margin-left: 3rem;\n  width: 100%;\n  max-width: 624px;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 0;\n    margin-left: 0;\n    max-width: 560px;\n  }\n`\n\nconst Header = styled.h2`\n  font-weight: 700;\n  font-size: 48px;\n  max-width: 100%;\n  margin-bottom: 0rem;\n  color: ${(props) => props.theme.colors.text00};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    font-size: 40px;\n  }\n`\n\nconst Title = styled.h1`\n  text-transform: uppercase;\n  font-size: 1rem;\n  font-weight: 400;\n  margin-bottom: 1rem;\n  color: ${(props) => props.theme.colors.text300};\n`\n\nconst Subtitle = styled.div`\n  font-size: 24px;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    font-size: 20px;\n  }\n`\n\nconst ButtonRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 1rem;\n  flex-wrap: wrap;\n`\n\nconst StyledButtonLink = styled(ButtonLink)`\n  margin-right: 1rem;\n  margin-bottom: 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-bottom: 1rem;\n  }\n`\n\nconst PageHero = ({ content, children, className, isReverse }) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Content>\n      <HeroContainer isReverse={isReverse} className={className}>\n        <HeroContent>\n          <Title>{title}</Title>\n          <Header>{header}</Header>\n          <Subtitle>{subtitle}</Subtitle>\n          {buttons && (\n            <ButtonRow>\n              {buttons.map((button, idx) => (\n                <StyledButtonLink\n                  isSecondary={button.isSecondary}\n                  key={idx}\n                  to={button.path}\n                >\n                  {button.content}\n                </StyledButtonLink>\n              ))}\n            </ButtonRow>\n          )}\n          {children}\n        </HeroContent>\n        <HeroImg image={image} alt={alt} loading=\"eager\" />\n      </HeroContainer>\n    </Content>\n  )\n}\n\nexport default PageHero\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { Location } from \"@reach/router\"\nimport { getSrc } from \"gatsby-plugin-image\"\n\nimport { translateMessageId, languageMetadata } from \"../utils/translations\"\n\nconst supportedLanguages = Object.keys(languageMetadata)\n\nconst PageMetadata = ({ description, meta, title, image, canonicalUrl }) => {\n  const {\n    site,\n    ogImageDefault,\n    ogImageDevelopers,\n    ogImageDapps,\n    ogImageEthtwo,\n  } = useStaticQuery(\n    graphql`\n      {\n        site {\n          siteMetadata {\n            author\n            url\n          }\n        }\n        ogImageDefault: file(relativePath: { eq: \"home/hero.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageDevelopers: file(relativePath: { eq: \"enterprise-eth.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageDapps: file(relativePath: { eq: \"doge-computer.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n        ogImageEthtwo: file(relativePath: { eq: \"eth2/eth2_doge.png\" }) {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              layout: FIXED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n      }\n    `\n  )\n\n  const intl = useIntl()\n\n  const desc = description || translateMessageId(\"site-description\", intl)\n\n  const siteTitle = translateMessageId(\"site-title\", intl)\n\n  return (\n    <Location>\n      {({ location }) => {\n        /* Set canonical URL w/ language path to avoid duplicate content */\n        /* e.g. set ethereum.org/about/ to ethereum.org/en/about/ */\n        const { pathname } = location\n        let canonicalPath = pathname\n        const firstDirectory = canonicalPath.split(\"/\")[1]\n        if (!supportedLanguages.includes(firstDirectory)) {\n          canonicalPath = `/en${pathname}`\n        }\n        const canonical =\n          canonicalUrl || `${site.siteMetadata.url}${canonicalPath}`\n\n        /* Set fallback ogImage based on path */\n        const siteUrl = site.siteMetadata.url\n        let ogImage = getSrc(ogImageDefault)\n        if (pathname.includes(\"/developers/\")) {\n          ogImage = getSrc(ogImageDevelopers)\n        }\n        if (pathname.includes(\"/dapps/\")) {\n          ogImage = getSrc(ogImageDapps)\n        }\n        if (pathname.includes(\"/eth2/\")) {\n          ogImage = getSrc(ogImageEthtwo)\n        }\n        if (image) {\n          ogImage = image\n        }\n        const ogImageUrl = `${siteUrl}${ogImage}`\n\n        return (\n          <Helmet\n            htmlAttributes={{ lang: intl.locale }}\n            title={title}\n            titleTemplate={`%s | ${siteTitle}`}\n            link={[{ rel: \"canonical\", key: canonical, href: canonical }]}\n            meta={[\n              {\n                name: `description`,\n                content: desc,\n              },\n              {\n                name: `image`,\n                content: site.siteMetadata.image,\n              },\n              {\n                property: `og:title`,\n                content: `${title} | ${siteTitle}`,\n              },\n              {\n                property: `og:description`,\n                content: desc,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary_large_image`,\n              },\n              {\n                name: `twitter:creator`,\n                content: site.siteMetadata.author,\n              },\n              {\n                name: `twitter:site`,\n                content: site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: `${title} | ${siteTitle}`,\n              },\n              {\n                name: `twitter:description`,\n                content: desc,\n              },\n              {\n                name: `twitter:image`,\n                content: ogImageUrl,\n              },\n              {\n                property: `og:url`,\n                content: siteUrl,\n              },\n              {\n                property: `og:image`,\n                content: ogImageUrl,\n              },\n              {\n                property: `og:video`,\n                content: `https://www.youtube.com/channel/UCNOfzGXD_C9YMYmnefmPH0g`,\n              },\n              {\n                property: `og:site_name`,\n                content: `ethereum.org`,\n              },\n            ].concat(meta)}\n          >\n            <script type=\"application/ld+json\">\n              {`\n        {\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"Organization\",\n          \"url\": \"https://ethereum.org\",\n          \"email\": \"press@ethereum.org\",\n          \"name\": \"Ethereum\",\n          \"logo\": \"https://ethereum.org/og-image.png\"\n        }\n      `}\n            </script>\n          </Helmet>\n        )\n      }}\n    </Location>\n  )\n}\n\nPageMetadata.defaultProps = {\n  description: ``,\n  meta: [],\n  image: ``,\n  title: ``,\n}\n\nPageMetadata.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default PageMetadata\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { getImage } from \"gatsby-plugin-image\"\n\nimport { translateMessageId } from \"../../utils/translations\"\nimport Translation from \"../../components/Translation\"\nimport Breadcrumbs from \"../../components/Breadcrumbs\"\nimport ButtonLink from \"../../components/ButtonLink\"\nimport Card from \"../../components/Card\"\nimport Emoji from \"../../components/Emoji\"\nimport GhostCard from \"../../components/GhostCard\"\nimport PageHero from \"../../components/PageHero\"\nimport InfoBanner from \"../../components/InfoBanner\"\nimport CalloutBanner from \"../../components/CalloutBanner\"\nimport Link from \"../../components/Link\"\n\nimport PageMetadata from \"../../components/PageMetadata\"\nimport {\n  CardContainer,\n  Content,\n  Page,\n  Divider,\n} from \"../../components/SharedStyledComponents\"\n\nconst StyledCallout = styled(CalloutBanner)`\n  margin-left: 0rem;\n  margin-right: 0rem;\n`\n\nconst Row = styled.div`\n  display: flex;\n  align-items: flex-start;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n  }\n`\n\nconst H2 = styled.h2`\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 22px;\n  letter-spacing: 0px;\n  margin-top: 0.5rem;\n`\n\nconst H3 = styled.h3`\n  margin-top: 0rem;\n`\n\nconst Column = styled.div`\n  flex: 1 1 33%;\n  margin-bottom: 1.5rem;\n  margin-right: 2rem;\n  width: 100%;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-right: 0rem;\n    margin-left: 0rem;\n  }\n`\n\nconst StyledCard = styled(Card)`\n  flex: 1 1 30%;\n  min-width: 240px;\n  margin: 1rem;\n  padding: 1.5rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex: 1 1 30%;\n  }\n`\n\nconst BoxText = styled.div`\n  font-size: 20px;\n`\n\nconst Box = styled.div`\n  padding: 1.5rem;\n  border: 1px solid ${(props) => props.theme.colors.border};\n  margin: 2rem 4rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    margin: 2rem 0;\n  }\n`\n\nconst Vision = styled.div`\n  margin-top: 4rem;\n`\n\nconst OptionContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 4rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    flex-direction: column;\n  }\n`\n\nconst Option = styled.div`\n  border-radius: 32px;\n  border: 1px solid\n    ${(props) =>\n      props.isActive ? props.theme.colors.primary : props.theme.colors.text};\n  color: ${(props) =>\n    props.isActive ? props.theme.colors.primary : props.theme.colors.text};\n  box-shadow: ${(props) =>\n    props.isActive ? props.theme.colors.tableBoxShadow : `none`};\n  display: flex;\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.5rem;\n  cursor: pointer;\n`\n\nconst OptionText = styled.div`\n  font-size: 24px;\n  line-height: 100%;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: 16px;\n    font-weight: 600;\n  }\n`\n\nconst StakeContainer = styled.div`\n  margin: 0 auto;\n  max-width: ${(props) => props.theme.breakpoints.m};\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst paths = [\n  {\n    emoji: \":money_with_wings:\",\n    title: <Translation id=\"page-eth2-staking-title-1\" />,\n    description: <Translation id=\"page-eth2-staking-desc-1\" />,\n  },\n  {\n    emoji: \":warning:\",\n    title: <Translation id=\"page-eth2-staking-title-2\" />,\n    description: <Translation id=\"page-eth2-staking-desc-2\" />,\n  },\n  {\n    emoji: \":clipboard:\",\n    title: <Translation id=\"page-eth2-staking-title-3\" />,\n    description: <Translation id=\"page-eth2-staking-desc-3\" />,\n    url: \"/developers/docs/apis/backend/#available-libraries\",\n    link: <Translation id=\"page-eth2-staking-link-1\" />,\n  },\n]\n\nconst StakingPage = ({ data, location }) => {\n  const intl = useIntl()\n  const [isSoloStaking, setIsSoloStaking] = useState(true)\n\n  const heroContent = {\n    title: translateMessageId(\"page-eth2-staking-title-4\", intl),\n    header: translateMessageId(\"page-eth2-staking-header-1\", intl),\n    subtitle: translateMessageId(\"page-eth2-staking-subtitle\", intl),\n    image: getImage(data.rhino),\n    alt: translateMessageId(\"page-eth2-staking-image-alt\", intl),\n    buttons: [\n      {\n        path: \"#stake\",\n        content: translateMessageId(\"page-eth2-staking-start\", intl),\n      },\n    ],\n  }\n\n  return (\n    <Page>\n      <PageMetadata\n        title={translateMessageId(\"page-eth2-staking-meta-title\", intl)}\n        description={translateMessageId(\n          \"page-eth2-staking-meta-description\",\n          intl\n        )}\n      />\n      <PageHero content={heroContent} />\n      <Divider />\n      <Content>\n        <Vision>\n          <Breadcrumbs slug={location.pathname} startDepth={1} />\n          <h2>\n            <Translation id=\"page-eth2-just-staking\" />\n          </h2>\n          <p>\n            <Translation id=\"page-eth2-staking-description\" />{\" \"}\n            <Link to=\"/eth2/beacon-chain/\">\n              <Translation id=\"page-eth2-staking-the-beacon-chain\" />\n            </Link>\n          </p>\n          <CardContainer>\n            {paths.map((path, idx) => (\n              <StyledCard\n                key={idx}\n                emoji={path.emoji}\n                title={path.title}\n                description={path.description}\n              >\n                {path.url && <Link to={path.url}>{path.link}</Link>}\n              </StyledCard>\n            ))}\n          </CardContainer>\n        </Vision>\n      </Content>\n      <Divider id=\"stake\" />\n      <Content>\n        <StakeContainer>\n          <h2>\n            <Translation id=\"page-eth2-staking-how-to-stake\" />\n          </h2>\n          <p>\n            <Translation id=\"page-eth2-staking-how-to-stake-desc\" />{\" \"}\n          </p>\n          <h3>\n            <Translation id=\"page-eth2-staking-how-much\" />\n          </h3>\n          <OptionContainer>\n            <Option\n              isActive={isSoloStaking}\n              onClick={() => setIsSoloStaking(true)}\n            >\n              <Emoji mr={`1rem`} text=\":moneybag:\" />\n              <OptionText>32 ETH</OptionText>\n            </Option>\n            <Option\n              isActive={!isSoloStaking}\n              onClick={() => setIsSoloStaking(false)}\n            >\n              <Emoji mr={`1rem`} text=\":swimmer:\" />\n              <OptionText>\n                <Translation id=\"page-eth2-staking-less-than\" /> 32 ETH\n              </OptionText>\n            </Option>\n          </OptionContainer>\n          {isSoloStaking && (\n            <GhostCard>\n              <InfoBanner isWarning={true} mb={`2rem`}>\n                <H2>\n                  <Translation id=\"page-eth2-staking-withdrawals\" />\n                </H2>\n                <div>\n                  <Translation id=\"page-eth2-staking-withdrawals-desc\" />{\" \"}\n                  <Link to=\"/eth2/merge/\">\n                    <Translation id=\"page-eth2-staking-docked\" />\n                  </Link>\n                </div>\n              </InfoBanner>\n              <h3>\n                <Translation id=\"page-eth2-staking-solo\" />\n              </h3>\n              <p>\n                <Translation id=\"page-eth2-staking-solo-desc\" />\n              </p>\n              <ButtonLink mb={`2rem`} to=\"https://launchpad.ethereum.org\">\n                <Translation id=\"page-eth2-staking-start\" />\n              </ButtonLink>\n              <h3>\n                <Translation id=\"page-eth2-staking-deposit-address\" />\n              </h3>\n              <p>\n                <Translation id=\"page-eth2-staking-deposit-address-desc\" />\n              </p>\n              <ButtonLink mb={`2rem`} to=\"/eth2/deposit-contract/\">\n                <Translation id=\"page-eth2-staking-check-address\" />\n              </ButtonLink>\n            </GhostCard>\n          )}\n          {!isSoloStaking && (\n            <GhostCard>\n              <H3>\n                <Translation id=\"page-eth2-staking-pool\" />\n              </H3>\n              <p>\n                <Translation id=\"page-eth2-staking-pool-desc\" />\n              </p>\n              <p>\n                <Link to=\"https://beaconcha.in/stakingServices\">\n                  <Translation id=\"page-eth2-staking-services\" />\n                </Link>\n              </p>\n              <InfoBanner isWarning={true}>\n                <H2>\n                  <Translation id=\"page-eth2-staking-dyor\" />\n                </H2>\n                <div>\n                  <Translation id=\"page-eth2-staking-dyor-desc\" />{\" \"}\n                </div>\n              </InfoBanner>\n            </GhostCard>\n          )}\n        </StakeContainer>\n      </Content>\n      <Divider />\n      <StyledCallout\n        image={getImage(data.rhino)}\n        alt={translateMessageId(\"eth2-rhino-img-alt\", intl)}\n        title={translateMessageId(\"page-eth2-staking-join-community\", intl)}\n        description={translateMessageId(\n          \"page-eth2-staking-join-community-desc\",\n          intl\n        )}\n      >\n        <div>\n          <ButtonLink to=\"https://www.reddit.com/r/ethstaker/\">\n            <Translation id=\"page-eth2-staking-join\" /> r/ethstaker\n          </ButtonLink>\n        </div>\n      </StyledCallout>\n      <Content>\n        <Row>\n          <Column>\n            <H2>\n              <Translation id=\"page-eth2-staking-pos-explained\" />\n            </H2>\n            <p>\n              <Translation id=\"page-eth2-staking-pos-explained-desc\" />{\" \"}\n              <Link to=\"/developers/docs/consensus-mechanisms/\">\n                <Translation id=\"page-eth2-staking-consensus\" />\n              </Link>\n            </p>\n\n            <p>\n              <Translation id=\"page-eth2-staking-pos-explained-desc-1\" />\n            </p>\n            <h3>\n              <Translation id=\"page-eth2-staking-at-stake\" />\n            </h3>\n            <p>\n              <Translation id=\"page-eth2-staking-at-stake-desc\" />\n            </p>\n            <h3>\n              <Translation id=\"page-eth2-staking-validators\" />\n            </h3>\n            <p>\n              <Translation id=\"page-eth2-staking-validators-desc\" />\n            </p>\n          </Column>\n          <Column>\n            <Box>\n              <H2>\n                <Translation id=\"page-eth2-staking-upgrades-title\" />\n              </H2>\n              <BoxText>\n                <ul>\n                  <li>\n                    <Translation id=\"page-eth2-staking-upgrades-li\" />\n                  </li>\n                  <li>\n                    <Translation id=\"page-eth2-staking-upgrades-li-2\" />\n                  </li>\n                  <li>\n                    <Translation id=\"page-eth2-staking-upgrades-li-3\" />\n                  </li>\n                  <li>\n                    <Translation id=\"page-eth2-staking-upgrades-li-4\" />\n                  </li>\n                  <li>\n                    <Translation id=\"page-eth2-staking-upgrades-li-5\" />\n                  </li>\n                </ul>\n              </BoxText>\n            </Box>\n          </Column>\n        </Row>\n        <H2>\n          <Translation id=\"page-eth2-staking-benefits\" />\n        </H2>\n        <CardContainer>\n          <StyledCard\n            emoji=\":evergreen_tree:\"\n            title={translateMessageId(\"page-eth2-staking-sustainability\", intl)}\n            description={translateMessageId(\n              \"page-eth2-staking-sustainability-desc\",\n              intl\n            )}\n          />\n          <StyledCard\n            emoji=\":globe_showing_americas:\"\n            title={translateMessageId(\"page-eth2-staking-accessibility\", intl)}\n            description={translateMessageId(\n              \"page-eth2-staking-accessibility-desc\",\n              intl\n            )}\n          />\n          <StyledCard\n            emoji=\":old_key:\"\n            title={translateMessageId(\"page-eth2-staking-sharding\", intl)}\n            description={translateMessageId(\n              \"page-eth2-staking-sharding-desc\",\n              intl\n            )}\n          >\n            <Link to=\"/eth2/shard-chains/\">\n              <Translation id=\"page-eth2-staking-more-sharding\" />\n            </Link>\n          </StyledCard>\n        </CardContainer>\n      </Content>\n    </Page>\n  )\n}\n\nexport default StakingPage\n\nexport const poolImage = graphql`\n  fragment poolImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        height: 20\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\n\nexport const query = graphql`\n  {\n    rhino: file(relativePath: { eq: \"eth2/eth2_rhino.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 500\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    consensys: file(relativePath: { eq: \"projects/consensys.png\" }) {\n      ...poolImage\n    }\n    ethhub: file(relativePath: { eq: \"projects/ethhub.png\" }) {\n      ...poolImage\n    }\n    etherscan: file(\n      relativePath: { eq: \"projects/etherscan-logo-circle.png\" }\n    ) {\n      ...poolImage\n    }\n  }\n`\n"],"names":["Crumb","styled","List","ListItem","Slash","props","theme","colors","textTableOfContents","CrumbLink","Link","primary","slug","startDepth","className","intl","useIntl","split","crumbs","filter","item","slice","map","path","idx","text","supportedLanguages","translateMessageId","fullPath","join","toUpperCase","dir","crumb","key","to","isPartiallyActive","length","StyledCard","breakpoints","l","s","Content","Description","text200","Image","GatsbyImage","maxImageWidth","H2","image","title","description","alt","children","Container","BaseCard","Card","border","ghostCardBackground","Ghost","ghostCardGhost","Banner","shouldCenter","black300","isWarning","warning","infoBanner","warningLink","infoLink","warningLinkHover","infoLinkHover","margin","StyledEmoji","Emoji","shouldSpaceBetween","emoji","banner","size","HeroContainer","isReverse","HeroContent","HeroImg","Header","text00","Title","text300","Subtitle","ButtonRow","StyledButtonLink","ButtonLink","content","buttons","header","subtitle","button","isSecondary","loading","Object","keys","languageMetadata","PageMetadata","meta","canonicalUrl","useStaticQuery","site","ogImageDefault","ogImageDevelopers","ogImageDapps","ogImageEthtwo","desc","siteTitle","Location","pathname","location","canonicalPath","firstDirectory","includes","canonical","siteMetadata","url","siteUrl","ogImage","getSrc","ogImageUrl","Helmet","htmlAttributes","lang","locale","titleTemplate","link","rel","href","name","property","author","concat","type","defaultProps","StyledCallout","CalloutBanner","Row","H3","Column","BoxText","Box","m","Vision","OptionContainer","Option","isActive","tableBoxShadow","OptionText","StakeContainer","paths","id","data","useState","isSoloStaking","setIsSoloStaking","heroContent","getImage","rhino","onClick","mr","mb"],"sourceRoot":""}